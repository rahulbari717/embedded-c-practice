
021_debuging_sample_code.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001584  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000013c  08001754  08001754  00002754  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001890  08001890  000030a4  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08001890  08001890  00002890  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001898  08001898  000030a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001898  08001898  00002898  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800189c  0800189c  0000289c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000000a4  20000000  080018a0  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  200000a4  08001944  000030a4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000210  08001944  00003210  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000030a4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000acf  00000000  00000000  000030d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003f0  00000000  00000000  00003ba3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00003f98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000d8  00000000  00000000  000040d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002c4f  00000000  00000000  000041a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001343  00000000  00000000  00006df7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000994b  00000000  00000000  0000813a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00011a85  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000e58  00000000  00000000  00011ac8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000074  00000000  00000000  00012920  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200000a4 	.word	0x200000a4
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800173c 	.word	0x0800173c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200000a8 	.word	0x200000a8
 800020c:	0800173c 	.word	0x0800173c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b084      	sub	sp, #16
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
 80002b8:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 80002ba:	2300      	movs	r3, #0
 80002bc:	60fb      	str	r3, [r7, #12]
 80002be:	e015      	b.n	80002ec <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 80002c0:	f000 fa10 	bl	80006e4 <rand>
 80002c4:	4602      	mov	r2, r0
 80002c6:	68fb      	ldr	r3, [r7, #12]
 80002c8:	009b      	lsls	r3, r3, #2
 80002ca:	6879      	ldr	r1, [r7, #4]
 80002cc:	4419      	add	r1, r3
 80002ce:	4b0c      	ldr	r3, [pc, #48]	@ (8000300 <array_fill_numbers+0x50>)
 80002d0:	fb83 0302 	smull	r0, r3, r3, r2
 80002d4:	1198      	asrs	r0, r3, #6
 80002d6:	17d3      	asrs	r3, r2, #31
 80002d8:	1ac3      	subs	r3, r0, r3
 80002da:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80002de:	fb00 f303 	mul.w	r3, r0, r3
 80002e2:	1ad3      	subs	r3, r2, r3
 80002e4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80002e6:	68fb      	ldr	r3, [r7, #12]
 80002e8:	3301      	adds	r3, #1
 80002ea:	60fb      	str	r3, [r7, #12]
 80002ec:	68fa      	ldr	r2, [r7, #12]
 80002ee:	683b      	ldr	r3, [r7, #0]
 80002f0:	429a      	cmp	r2, r3
 80002f2:	d3e5      	bcc.n	80002c0 <array_fill_numbers+0x10>
    }

}
 80002f4:	bf00      	nop
 80002f6:	bf00      	nop
 80002f8:	3710      	adds	r7, #16
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bd80      	pop	{r7, pc}
 80002fe:	bf00      	nop
 8000300:	10624dd3 	.word	0x10624dd3

08000304 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 8000304:	b580      	push	{r7, lr}
 8000306:	b086      	sub	sp, #24
 8000308:	af00      	add	r7, sp, #0
 800030a:	60f8      	str	r0, [r7, #12]
 800030c:	60b9      	str	r1, [r7, #8]
 800030e:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 8000310:	6879      	ldr	r1, [r7, #4]
 8000312:	480e      	ldr	r0, [pc, #56]	@ (800034c <display_numbers+0x48>)
 8000314:	f000 fae6 	bl	80008e4 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 8000318:	2300      	movs	r3, #0
 800031a:	617b      	str	r3, [r7, #20]
 800031c:	e00b      	b.n	8000336 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 800031e:	697b      	ldr	r3, [r7, #20]
 8000320:	009b      	lsls	r3, r3, #2
 8000322:	68fa      	ldr	r2, [r7, #12]
 8000324:	4413      	add	r3, r2
 8000326:	681b      	ldr	r3, [r3, #0]
 8000328:	4619      	mov	r1, r3
 800032a:	4809      	ldr	r0, [pc, #36]	@ (8000350 <display_numbers+0x4c>)
 800032c:	f000 fada 	bl	80008e4 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 8000330:	697b      	ldr	r3, [r7, #20]
 8000332:	3301      	adds	r3, #1
 8000334:	617b      	str	r3, [r7, #20]
 8000336:	697a      	ldr	r2, [r7, #20]
 8000338:	68bb      	ldr	r3, [r7, #8]
 800033a:	429a      	cmp	r2, r3
 800033c:	d3ef      	bcc.n	800031e <display_numbers+0x1a>
    }

    printf("\n");
 800033e:	200a      	movs	r0, #10
 8000340:	f000 fae2 	bl	8000908 <putchar>
}
 8000344:	bf00      	nop
 8000346:	3718      	adds	r7, #24
 8000348:	46bd      	mov	sp, r7
 800034a:	bd80      	pop	{r7, pc}
 800034c:	08001754 	.word	0x08001754
 8000350:	08001758 	.word	0x08001758

08000354 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000354:	b480      	push	{r7}
 8000356:	b085      	sub	sp, #20
 8000358:	af00      	add	r7, sp, #0
 800035a:	6078      	str	r0, [r7, #4]
 800035c:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000364:	683b      	ldr	r3, [r7, #0]
 8000366:	681a      	ldr	r2, [r3, #0]
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	601a      	str	r2, [r3, #0]
     *y=temp;
 800036c:	683b      	ldr	r3, [r7, #0]
 800036e:	68fa      	ldr	r2, [r7, #12]
 8000370:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 8000372:	4b04      	ldr	r3, [pc, #16]	@ (8000384 <swap_numbers+0x30>)
 8000374:	220a      	movs	r2, #10
 8000376:	601a      	str	r2, [r3, #0]
}
 8000378:	bf00      	nop
 800037a:	3714      	adds	r7, #20
 800037c:	46bd      	mov	sp, r7
 800037e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000382:	4770      	bx	lr
 8000384:	20000044 	.word	0x20000044

08000388 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000388:	b580      	push	{r7, lr}
 800038a:	b086      	sub	sp, #24
 800038c:	af00      	add	r7, sp, #0
 800038e:	6078      	str	r0, [r7, #4]
 8000390:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000392:	2300      	movs	r3, #0
 8000394:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000396:	2300      	movs	r3, #0
 8000398:	617b      	str	r3, [r7, #20]
 800039a:	e02f      	b.n	80003fc <bubble_sort+0x74>
    {
        flag=0;
 800039c:	2300      	movs	r3, #0
 800039e:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 80003a0:	2300      	movs	r3, #0
 80003a2:	613b      	str	r3, [r7, #16]
 80003a4:	e01d      	b.n	80003e2 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 80003a6:	693b      	ldr	r3, [r7, #16]
 80003a8:	009b      	lsls	r3, r3, #2
 80003aa:	687a      	ldr	r2, [r7, #4]
 80003ac:	4413      	add	r3, r2
 80003ae:	681a      	ldr	r2, [r3, #0]
 80003b0:	693b      	ldr	r3, [r7, #16]
 80003b2:	3301      	adds	r3, #1
 80003b4:	009b      	lsls	r3, r3, #2
 80003b6:	6879      	ldr	r1, [r7, #4]
 80003b8:	440b      	add	r3, r1
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	429a      	cmp	r2, r3
 80003be:	dd0d      	ble.n	80003dc <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 80003c0:	693b      	ldr	r3, [r7, #16]
 80003c2:	009b      	lsls	r3, r3, #2
 80003c4:	687a      	ldr	r2, [r7, #4]
 80003c6:	18d0      	adds	r0, r2, r3
 80003c8:	693b      	ldr	r3, [r7, #16]
 80003ca:	3301      	adds	r3, #1
 80003cc:	009b      	lsls	r3, r3, #2
 80003ce:	687a      	ldr	r2, [r7, #4]
 80003d0:	4413      	add	r3, r2
 80003d2:	4619      	mov	r1, r3
 80003d4:	f7ff ffbe 	bl	8000354 <swap_numbers>
                flag=1;
 80003d8:	2301      	movs	r3, #1
 80003da:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 80003dc:	693b      	ldr	r3, [r7, #16]
 80003de:	3301      	adds	r3, #1
 80003e0:	613b      	str	r3, [r7, #16]
 80003e2:	697b      	ldr	r3, [r7, #20]
 80003e4:	683a      	ldr	r2, [r7, #0]
 80003e6:	1ad3      	subs	r3, r2, r3
 80003e8:	1e5a      	subs	r2, r3, #1
 80003ea:	693b      	ldr	r3, [r7, #16]
 80003ec:	429a      	cmp	r2, r3
 80003ee:	d8da      	bhi.n	80003a6 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80003f0:	68fb      	ldr	r3, [r7, #12]
 80003f2:	2b00      	cmp	r3, #0
 80003f4:	d008      	beq.n	8000408 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80003f6:	697b      	ldr	r3, [r7, #20]
 80003f8:	3301      	adds	r3, #1
 80003fa:	617b      	str	r3, [r7, #20]
 80003fc:	683b      	ldr	r3, [r7, #0]
 80003fe:	1e5a      	subs	r2, r3, #1
 8000400:	697b      	ldr	r3, [r7, #20]
 8000402:	429a      	cmp	r2, r3
 8000404:	d8ca      	bhi.n	800039c <bubble_sort+0x14>
            break;
    }
}
 8000406:	e000      	b.n	800040a <bubble_sort+0x82>
            break;
 8000408:	bf00      	nop
}
 800040a:	bf00      	nop
 800040c:	3718      	adds	r7, #24
 800040e:	46bd      	mov	sp, r7
 8000410:	bd80      	pop	{r7, pc}

08000412 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 8000412:	b480      	push	{r7}
 8000414:	b087      	sub	sp, #28
 8000416:	af00      	add	r7, sp, #0
 8000418:	6078      	str	r0, [r7, #4]
 800041a:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 800041c:	2301      	movs	r3, #1
 800041e:	617b      	str	r3, [r7, #20]
 8000420:	e02c      	b.n	800047c <insertion_sort+0x6a>
     {
         j=i-1;
 8000422:	697b      	ldr	r3, [r7, #20]
 8000424:	3b01      	subs	r3, #1
 8000426:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 8000428:	697b      	ldr	r3, [r7, #20]
 800042a:	009b      	lsls	r3, r3, #2
 800042c:	687a      	ldr	r2, [r7, #4]
 800042e:	4413      	add	r3, r2
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 8000434:	e00d      	b.n	8000452 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 8000436:	693b      	ldr	r3, [r7, #16]
 8000438:	009b      	lsls	r3, r3, #2
 800043a:	687a      	ldr	r2, [r7, #4]
 800043c:	441a      	add	r2, r3
 800043e:	693b      	ldr	r3, [r7, #16]
 8000440:	3301      	adds	r3, #1
 8000442:	009b      	lsls	r3, r3, #2
 8000444:	6879      	ldr	r1, [r7, #4]
 8000446:	440b      	add	r3, r1
 8000448:	6812      	ldr	r2, [r2, #0]
 800044a:	601a      	str	r2, [r3, #0]
             j--;
 800044c:	693b      	ldr	r3, [r7, #16]
 800044e:	3b01      	subs	r3, #1
 8000450:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000452:	693b      	ldr	r3, [r7, #16]
 8000454:	2b00      	cmp	r3, #0
 8000456:	db07      	blt.n	8000468 <insertion_sort+0x56>
 8000458:	693b      	ldr	r3, [r7, #16]
 800045a:	009b      	lsls	r3, r3, #2
 800045c:	687a      	ldr	r2, [r7, #4]
 800045e:	4413      	add	r3, r2
 8000460:	681b      	ldr	r3, [r3, #0]
 8000462:	68fa      	ldr	r2, [r7, #12]
 8000464:	429a      	cmp	r2, r3
 8000466:	dbe6      	blt.n	8000436 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000468:	693b      	ldr	r3, [r7, #16]
 800046a:	3301      	adds	r3, #1
 800046c:	009b      	lsls	r3, r3, #2
 800046e:	687a      	ldr	r2, [r7, #4]
 8000470:	4413      	add	r3, r2
 8000472:	68fa      	ldr	r2, [r7, #12]
 8000474:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000476:	697b      	ldr	r3, [r7, #20]
 8000478:	3301      	adds	r3, #1
 800047a:	617b      	str	r3, [r7, #20]
 800047c:	697b      	ldr	r3, [r7, #20]
 800047e:	683a      	ldr	r2, [r7, #0]
 8000480:	429a      	cmp	r2, r3
 8000482:	d8ce      	bhi.n	8000422 <insertion_sort+0x10>
     }


}
 8000484:	bf00      	nop
 8000486:	bf00      	nop
 8000488:	371c      	adds	r7, #28
 800048a:	46bd      	mov	sp, r7
 800048c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000490:	4770      	bx	lr
	...

08000494 <main>:



int main()
{
 8000494:	b580      	push	{r7, lr}
 8000496:	b082      	sub	sp, #8
 8000498:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 800049a:	2311      	movs	r3, #17
 800049c:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 800049e:	6879      	ldr	r1, [r7, #4]
 80004a0:	4813      	ldr	r0, [pc, #76]	@ (80004f0 <main+0x5c>)
 80004a2:	f7ff ff05 	bl	80002b0 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 80004a6:	4a13      	ldr	r2, [pc, #76]	@ (80004f4 <main+0x60>)
 80004a8:	6879      	ldr	r1, [r7, #4]
 80004aa:	4811      	ldr	r0, [pc, #68]	@ (80004f0 <main+0x5c>)
 80004ac:	f7ff ff2a 	bl	8000304 <display_numbers>

    bubble_sort(numbers,len);
 80004b0:	6879      	ldr	r1, [r7, #4]
 80004b2:	480f      	ldr	r0, [pc, #60]	@ (80004f0 <main+0x5c>)
 80004b4:	f7ff ff68 	bl	8000388 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 80004b8:	4a0f      	ldr	r2, [pc, #60]	@ (80004f8 <main+0x64>)
 80004ba:	6879      	ldr	r1, [r7, #4]
 80004bc:	480c      	ldr	r0, [pc, #48]	@ (80004f0 <main+0x5c>)
 80004be:	f7ff ff21 	bl	8000304 <display_numbers>

    array_fill_numbers(numbers,len);
 80004c2:	6879      	ldr	r1, [r7, #4]
 80004c4:	480a      	ldr	r0, [pc, #40]	@ (80004f0 <main+0x5c>)
 80004c6:	f7ff fef3 	bl	80002b0 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 80004ca:	4a0c      	ldr	r2, [pc, #48]	@ (80004fc <main+0x68>)
 80004cc:	6879      	ldr	r1, [r7, #4]
 80004ce:	4808      	ldr	r0, [pc, #32]	@ (80004f0 <main+0x5c>)
 80004d0:	f7ff ff18 	bl	8000304 <display_numbers>

    insertion_sort(numbers,len);
 80004d4:	6879      	ldr	r1, [r7, #4]
 80004d6:	4806      	ldr	r0, [pc, #24]	@ (80004f0 <main+0x5c>)
 80004d8:	f7ff ff9b 	bl	8000412 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 80004dc:	4a08      	ldr	r2, [pc, #32]	@ (8000500 <main+0x6c>)
 80004de:	6879      	ldr	r1, [r7, #4]
 80004e0:	4803      	ldr	r0, [pc, #12]	@ (80004f0 <main+0x5c>)
 80004e2:	f7ff ff0f 	bl	8000304 <display_numbers>



    return 0;
 80004e6:	2300      	movs	r3, #0
}
 80004e8:	4618      	mov	r0, r3
 80004ea:	3708      	adds	r7, #8
 80004ec:	46bd      	mov	sp, r7
 80004ee:	bd80      	pop	{r7, pc}
 80004f0:	20000000 	.word	0x20000000
 80004f4:	08001760 	.word	0x08001760
 80004f8:	08001774 	.word	0x08001774
 80004fc:	08001788 	.word	0x08001788
 8000500:	0800179c 	.word	0x0800179c

08000504 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000504:	b480      	push	{r7}
 8000506:	af00      	add	r7, sp, #0
  return 1;
 8000508:	2301      	movs	r3, #1
}
 800050a:	4618      	mov	r0, r3
 800050c:	46bd      	mov	sp, r7
 800050e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000512:	4770      	bx	lr

08000514 <_kill>:

int _kill(int pid, int sig)
{
 8000514:	b580      	push	{r7, lr}
 8000516:	b082      	sub	sp, #8
 8000518:	af00      	add	r7, sp, #0
 800051a:	6078      	str	r0, [r7, #4]
 800051c:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800051e:	f000 fa8d 	bl	8000a3c <__errno>
 8000522:	4603      	mov	r3, r0
 8000524:	2216      	movs	r2, #22
 8000526:	601a      	str	r2, [r3, #0]
  return -1;
 8000528:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 800052c:	4618      	mov	r0, r3
 800052e:	3708      	adds	r7, #8
 8000530:	46bd      	mov	sp, r7
 8000532:	bd80      	pop	{r7, pc}

08000534 <_exit>:

void _exit (int status)
{
 8000534:	b580      	push	{r7, lr}
 8000536:	b082      	sub	sp, #8
 8000538:	af00      	add	r7, sp, #0
 800053a:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800053c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8000540:	6878      	ldr	r0, [r7, #4]
 8000542:	f7ff ffe7 	bl	8000514 <_kill>
  while (1) {}    /* Make sure we hang here */
 8000546:	bf00      	nop
 8000548:	e7fd      	b.n	8000546 <_exit+0x12>

0800054a <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800054a:	b580      	push	{r7, lr}
 800054c:	b086      	sub	sp, #24
 800054e:	af00      	add	r7, sp, #0
 8000550:	60f8      	str	r0, [r7, #12]
 8000552:	60b9      	str	r1, [r7, #8]
 8000554:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000556:	2300      	movs	r3, #0
 8000558:	617b      	str	r3, [r7, #20]
 800055a:	e00a      	b.n	8000572 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800055c:	f3af 8000 	nop.w
 8000560:	4601      	mov	r1, r0
 8000562:	68bb      	ldr	r3, [r7, #8]
 8000564:	1c5a      	adds	r2, r3, #1
 8000566:	60ba      	str	r2, [r7, #8]
 8000568:	b2ca      	uxtb	r2, r1
 800056a:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800056c:	697b      	ldr	r3, [r7, #20]
 800056e:	3301      	adds	r3, #1
 8000570:	617b      	str	r3, [r7, #20]
 8000572:	697a      	ldr	r2, [r7, #20]
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	429a      	cmp	r2, r3
 8000578:	dbf0      	blt.n	800055c <_read+0x12>
  }

  return len;
 800057a:	687b      	ldr	r3, [r7, #4]
}
 800057c:	4618      	mov	r0, r3
 800057e:	3718      	adds	r7, #24
 8000580:	46bd      	mov	sp, r7
 8000582:	bd80      	pop	{r7, pc}

08000584 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000584:	b580      	push	{r7, lr}
 8000586:	b086      	sub	sp, #24
 8000588:	af00      	add	r7, sp, #0
 800058a:	60f8      	str	r0, [r7, #12]
 800058c:	60b9      	str	r1, [r7, #8]
 800058e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000590:	2300      	movs	r3, #0
 8000592:	617b      	str	r3, [r7, #20]
 8000594:	e009      	b.n	80005aa <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000596:	68bb      	ldr	r3, [r7, #8]
 8000598:	1c5a      	adds	r2, r3, #1
 800059a:	60ba      	str	r2, [r7, #8]
 800059c:	781b      	ldrb	r3, [r3, #0]
 800059e:	4618      	mov	r0, r3
 80005a0:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005a4:	697b      	ldr	r3, [r7, #20]
 80005a6:	3301      	adds	r3, #1
 80005a8:	617b      	str	r3, [r7, #20]
 80005aa:	697a      	ldr	r2, [r7, #20]
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	429a      	cmp	r2, r3
 80005b0:	dbf1      	blt.n	8000596 <_write+0x12>
  }
  return len;
 80005b2:	687b      	ldr	r3, [r7, #4]
}
 80005b4:	4618      	mov	r0, r3
 80005b6:	3718      	adds	r7, #24
 80005b8:	46bd      	mov	sp, r7
 80005ba:	bd80      	pop	{r7, pc}

080005bc <_close>:

int _close(int file)
{
 80005bc:	b480      	push	{r7}
 80005be:	b083      	sub	sp, #12
 80005c0:	af00      	add	r7, sp, #0
 80005c2:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80005c4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80005c8:	4618      	mov	r0, r3
 80005ca:	370c      	adds	r7, #12
 80005cc:	46bd      	mov	sp, r7
 80005ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d2:	4770      	bx	lr

080005d4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80005d4:	b480      	push	{r7}
 80005d6:	b083      	sub	sp, #12
 80005d8:	af00      	add	r7, sp, #0
 80005da:	6078      	str	r0, [r7, #4]
 80005dc:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80005de:	683b      	ldr	r3, [r7, #0]
 80005e0:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80005e4:	605a      	str	r2, [r3, #4]
  return 0;
 80005e6:	2300      	movs	r3, #0
}
 80005e8:	4618      	mov	r0, r3
 80005ea:	370c      	adds	r7, #12
 80005ec:	46bd      	mov	sp, r7
 80005ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f2:	4770      	bx	lr

080005f4 <_isatty>:

int _isatty(int file)
{
 80005f4:	b480      	push	{r7}
 80005f6:	b083      	sub	sp, #12
 80005f8:	af00      	add	r7, sp, #0
 80005fa:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80005fc:	2301      	movs	r3, #1
}
 80005fe:	4618      	mov	r0, r3
 8000600:	370c      	adds	r7, #12
 8000602:	46bd      	mov	sp, r7
 8000604:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000608:	4770      	bx	lr

0800060a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800060a:	b480      	push	{r7}
 800060c:	b085      	sub	sp, #20
 800060e:	af00      	add	r7, sp, #0
 8000610:	60f8      	str	r0, [r7, #12]
 8000612:	60b9      	str	r1, [r7, #8]
 8000614:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000616:	2300      	movs	r3, #0
}
 8000618:	4618      	mov	r0, r3
 800061a:	3714      	adds	r7, #20
 800061c:	46bd      	mov	sp, r7
 800061e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000622:	4770      	bx	lr

08000624 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000624:	b580      	push	{r7, lr}
 8000626:	b086      	sub	sp, #24
 8000628:	af00      	add	r7, sp, #0
 800062a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800062c:	4a14      	ldr	r2, [pc, #80]	@ (8000680 <_sbrk+0x5c>)
 800062e:	4b15      	ldr	r3, [pc, #84]	@ (8000684 <_sbrk+0x60>)
 8000630:	1ad3      	subs	r3, r2, r3
 8000632:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000634:	697b      	ldr	r3, [r7, #20]
 8000636:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000638:	4b13      	ldr	r3, [pc, #76]	@ (8000688 <_sbrk+0x64>)
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	2b00      	cmp	r3, #0
 800063e:	d102      	bne.n	8000646 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000640:	4b11      	ldr	r3, [pc, #68]	@ (8000688 <_sbrk+0x64>)
 8000642:	4a12      	ldr	r2, [pc, #72]	@ (800068c <_sbrk+0x68>)
 8000644:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000646:	4b10      	ldr	r3, [pc, #64]	@ (8000688 <_sbrk+0x64>)
 8000648:	681a      	ldr	r2, [r3, #0]
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	4413      	add	r3, r2
 800064e:	693a      	ldr	r2, [r7, #16]
 8000650:	429a      	cmp	r2, r3
 8000652:	d207      	bcs.n	8000664 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000654:	f000 f9f2 	bl	8000a3c <__errno>
 8000658:	4603      	mov	r3, r0
 800065a:	220c      	movs	r2, #12
 800065c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800065e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8000662:	e009      	b.n	8000678 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000664:	4b08      	ldr	r3, [pc, #32]	@ (8000688 <_sbrk+0x64>)
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800066a:	4b07      	ldr	r3, [pc, #28]	@ (8000688 <_sbrk+0x64>)
 800066c:	681a      	ldr	r2, [r3, #0]
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	4413      	add	r3, r2
 8000672:	4a05      	ldr	r2, [pc, #20]	@ (8000688 <_sbrk+0x64>)
 8000674:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000676:	68fb      	ldr	r3, [r7, #12]
}
 8000678:	4618      	mov	r0, r3
 800067a:	3718      	adds	r7, #24
 800067c:	46bd      	mov	sp, r7
 800067e:	bd80      	pop	{r7, pc}
 8000680:	20020000 	.word	0x20020000
 8000684:	00000400 	.word	0x00000400
 8000688:	200000c0 	.word	0x200000c0
 800068c:	20000210 	.word	0x20000210

08000690 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000690:	480d      	ldr	r0, [pc, #52]	@ (80006c8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000692:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000694:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000698:	480c      	ldr	r0, [pc, #48]	@ (80006cc <LoopForever+0x6>)
  ldr r1, =_edata
 800069a:	490d      	ldr	r1, [pc, #52]	@ (80006d0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800069c:	4a0d      	ldr	r2, [pc, #52]	@ (80006d4 <LoopForever+0xe>)
  movs r3, #0
 800069e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006a0:	e002      	b.n	80006a8 <LoopCopyDataInit>

080006a2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006a2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006a4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006a6:	3304      	adds	r3, #4

080006a8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006a8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006aa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006ac:	d3f9      	bcc.n	80006a2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006ae:	4a0a      	ldr	r2, [pc, #40]	@ (80006d8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006b0:	4c0a      	ldr	r4, [pc, #40]	@ (80006dc <LoopForever+0x16>)
  movs r3, #0
 80006b2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006b4:	e001      	b.n	80006ba <LoopFillZerobss>

080006b6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006b6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006b8:	3204      	adds	r2, #4

080006ba <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006ba:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006bc:	d3fb      	bcc.n	80006b6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006be:	f000 f9c3 	bl	8000a48 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006c2:	f7ff fee7 	bl	8000494 <main>

080006c6 <LoopForever>:

LoopForever:
  b LoopForever
 80006c6:	e7fe      	b.n	80006c6 <LoopForever>
  ldr   r0, =_estack
 80006c8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80006cc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006d0:	200000a4 	.word	0x200000a4
  ldr r2, =_sidata
 80006d4:	080018a0 	.word	0x080018a0
  ldr r2, =_sbss
 80006d8:	200000a4 	.word	0x200000a4
  ldr r4, =_ebss
 80006dc:	20000210 	.word	0x20000210

080006e0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006e0:	e7fe      	b.n	80006e0 <ADC_IRQHandler>
	...

080006e4 <rand>:
 80006e4:	4b16      	ldr	r3, [pc, #88]	@ (8000740 <rand+0x5c>)
 80006e6:	b510      	push	{r4, lr}
 80006e8:	681c      	ldr	r4, [r3, #0]
 80006ea:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80006ec:	b9b3      	cbnz	r3, 800071c <rand+0x38>
 80006ee:	2018      	movs	r0, #24
 80006f0:	f000 fa3a 	bl	8000b68 <malloc>
 80006f4:	4602      	mov	r2, r0
 80006f6:	6320      	str	r0, [r4, #48]	@ 0x30
 80006f8:	b920      	cbnz	r0, 8000704 <rand+0x20>
 80006fa:	4b12      	ldr	r3, [pc, #72]	@ (8000744 <rand+0x60>)
 80006fc:	4812      	ldr	r0, [pc, #72]	@ (8000748 <rand+0x64>)
 80006fe:	2152      	movs	r1, #82	@ 0x52
 8000700:	f000 f9ca 	bl	8000a98 <__assert_func>
 8000704:	4911      	ldr	r1, [pc, #68]	@ (800074c <rand+0x68>)
 8000706:	4b12      	ldr	r3, [pc, #72]	@ (8000750 <rand+0x6c>)
 8000708:	e9c0 1300 	strd	r1, r3, [r0]
 800070c:	4b11      	ldr	r3, [pc, #68]	@ (8000754 <rand+0x70>)
 800070e:	6083      	str	r3, [r0, #8]
 8000710:	230b      	movs	r3, #11
 8000712:	8183      	strh	r3, [r0, #12]
 8000714:	2100      	movs	r1, #0
 8000716:	2001      	movs	r0, #1
 8000718:	e9c2 0104 	strd	r0, r1, [r2, #16]
 800071c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800071e:	480e      	ldr	r0, [pc, #56]	@ (8000758 <rand+0x74>)
 8000720:	690b      	ldr	r3, [r1, #16]
 8000722:	694c      	ldr	r4, [r1, #20]
 8000724:	4a0d      	ldr	r2, [pc, #52]	@ (800075c <rand+0x78>)
 8000726:	4358      	muls	r0, r3
 8000728:	fb02 0004 	mla	r0, r2, r4, r0
 800072c:	fba3 3202 	umull	r3, r2, r3, r2
 8000730:	3301      	adds	r3, #1
 8000732:	eb40 0002 	adc.w	r0, r0, r2
 8000736:	e9c1 3004 	strd	r3, r0, [r1, #16]
 800073a:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 800073e:	bd10      	pop	{r4, pc}
 8000740:	20000054 	.word	0x20000054
 8000744:	080017af 	.word	0x080017af
 8000748:	080017c6 	.word	0x080017c6
 800074c:	abcd330e 	.word	0xabcd330e
 8000750:	e66d1234 	.word	0xe66d1234
 8000754:	0005deec 	.word	0x0005deec
 8000758:	5851f42d 	.word	0x5851f42d
 800075c:	4c957f2d 	.word	0x4c957f2d

08000760 <std>:
 8000760:	2300      	movs	r3, #0
 8000762:	b510      	push	{r4, lr}
 8000764:	4604      	mov	r4, r0
 8000766:	e9c0 3300 	strd	r3, r3, [r0]
 800076a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800076e:	6083      	str	r3, [r0, #8]
 8000770:	8181      	strh	r1, [r0, #12]
 8000772:	6643      	str	r3, [r0, #100]	@ 0x64
 8000774:	81c2      	strh	r2, [r0, #14]
 8000776:	6183      	str	r3, [r0, #24]
 8000778:	4619      	mov	r1, r3
 800077a:	2208      	movs	r2, #8
 800077c:	305c      	adds	r0, #92	@ 0x5c
 800077e:	f000 f90e 	bl	800099e <memset>
 8000782:	4b0d      	ldr	r3, [pc, #52]	@ (80007b8 <std+0x58>)
 8000784:	6263      	str	r3, [r4, #36]	@ 0x24
 8000786:	4b0d      	ldr	r3, [pc, #52]	@ (80007bc <std+0x5c>)
 8000788:	62a3      	str	r3, [r4, #40]	@ 0x28
 800078a:	4b0d      	ldr	r3, [pc, #52]	@ (80007c0 <std+0x60>)
 800078c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800078e:	4b0d      	ldr	r3, [pc, #52]	@ (80007c4 <std+0x64>)
 8000790:	6323      	str	r3, [r4, #48]	@ 0x30
 8000792:	4b0d      	ldr	r3, [pc, #52]	@ (80007c8 <std+0x68>)
 8000794:	6224      	str	r4, [r4, #32]
 8000796:	429c      	cmp	r4, r3
 8000798:	d006      	beq.n	80007a8 <std+0x48>
 800079a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800079e:	4294      	cmp	r4, r2
 80007a0:	d002      	beq.n	80007a8 <std+0x48>
 80007a2:	33d0      	adds	r3, #208	@ 0xd0
 80007a4:	429c      	cmp	r4, r3
 80007a6:	d105      	bne.n	80007b4 <std+0x54>
 80007a8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80007ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007b0:	f000 b96e 	b.w	8000a90 <__retarget_lock_init_recursive>
 80007b4:	bd10      	pop	{r4, pc}
 80007b6:	bf00      	nop
 80007b8:	08000919 	.word	0x08000919
 80007bc:	0800093b 	.word	0x0800093b
 80007c0:	08000973 	.word	0x08000973
 80007c4:	08000997 	.word	0x08000997
 80007c8:	200000c4 	.word	0x200000c4

080007cc <stdio_exit_handler>:
 80007cc:	4a02      	ldr	r2, [pc, #8]	@ (80007d8 <stdio_exit_handler+0xc>)
 80007ce:	4903      	ldr	r1, [pc, #12]	@ (80007dc <stdio_exit_handler+0x10>)
 80007d0:	4803      	ldr	r0, [pc, #12]	@ (80007e0 <stdio_exit_handler+0x14>)
 80007d2:	f000 b869 	b.w	80008a8 <_fwalk_sglue>
 80007d6:	bf00      	nop
 80007d8:	20000048 	.word	0x20000048
 80007dc:	08001379 	.word	0x08001379
 80007e0:	20000058 	.word	0x20000058

080007e4 <cleanup_stdio>:
 80007e4:	6841      	ldr	r1, [r0, #4]
 80007e6:	4b0c      	ldr	r3, [pc, #48]	@ (8000818 <cleanup_stdio+0x34>)
 80007e8:	4299      	cmp	r1, r3
 80007ea:	b510      	push	{r4, lr}
 80007ec:	4604      	mov	r4, r0
 80007ee:	d001      	beq.n	80007f4 <cleanup_stdio+0x10>
 80007f0:	f000 fdc2 	bl	8001378 <_fflush_r>
 80007f4:	68a1      	ldr	r1, [r4, #8]
 80007f6:	4b09      	ldr	r3, [pc, #36]	@ (800081c <cleanup_stdio+0x38>)
 80007f8:	4299      	cmp	r1, r3
 80007fa:	d002      	beq.n	8000802 <cleanup_stdio+0x1e>
 80007fc:	4620      	mov	r0, r4
 80007fe:	f000 fdbb 	bl	8001378 <_fflush_r>
 8000802:	68e1      	ldr	r1, [r4, #12]
 8000804:	4b06      	ldr	r3, [pc, #24]	@ (8000820 <cleanup_stdio+0x3c>)
 8000806:	4299      	cmp	r1, r3
 8000808:	d004      	beq.n	8000814 <cleanup_stdio+0x30>
 800080a:	4620      	mov	r0, r4
 800080c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000810:	f000 bdb2 	b.w	8001378 <_fflush_r>
 8000814:	bd10      	pop	{r4, pc}
 8000816:	bf00      	nop
 8000818:	200000c4 	.word	0x200000c4
 800081c:	2000012c 	.word	0x2000012c
 8000820:	20000194 	.word	0x20000194

08000824 <global_stdio_init.part.0>:
 8000824:	b510      	push	{r4, lr}
 8000826:	4b0b      	ldr	r3, [pc, #44]	@ (8000854 <global_stdio_init.part.0+0x30>)
 8000828:	4c0b      	ldr	r4, [pc, #44]	@ (8000858 <global_stdio_init.part.0+0x34>)
 800082a:	4a0c      	ldr	r2, [pc, #48]	@ (800085c <global_stdio_init.part.0+0x38>)
 800082c:	601a      	str	r2, [r3, #0]
 800082e:	4620      	mov	r0, r4
 8000830:	2200      	movs	r2, #0
 8000832:	2104      	movs	r1, #4
 8000834:	f7ff ff94 	bl	8000760 <std>
 8000838:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800083c:	2201      	movs	r2, #1
 800083e:	2109      	movs	r1, #9
 8000840:	f7ff ff8e 	bl	8000760 <std>
 8000844:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000848:	2202      	movs	r2, #2
 800084a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800084e:	2112      	movs	r1, #18
 8000850:	f7ff bf86 	b.w	8000760 <std>
 8000854:	200001fc 	.word	0x200001fc
 8000858:	200000c4 	.word	0x200000c4
 800085c:	080007cd 	.word	0x080007cd

08000860 <__sfp_lock_acquire>:
 8000860:	4801      	ldr	r0, [pc, #4]	@ (8000868 <__sfp_lock_acquire+0x8>)
 8000862:	f000 b916 	b.w	8000a92 <__retarget_lock_acquire_recursive>
 8000866:	bf00      	nop
 8000868:	20000205 	.word	0x20000205

0800086c <__sfp_lock_release>:
 800086c:	4801      	ldr	r0, [pc, #4]	@ (8000874 <__sfp_lock_release+0x8>)
 800086e:	f000 b911 	b.w	8000a94 <__retarget_lock_release_recursive>
 8000872:	bf00      	nop
 8000874:	20000205 	.word	0x20000205

08000878 <__sinit>:
 8000878:	b510      	push	{r4, lr}
 800087a:	4604      	mov	r4, r0
 800087c:	f7ff fff0 	bl	8000860 <__sfp_lock_acquire>
 8000880:	6a23      	ldr	r3, [r4, #32]
 8000882:	b11b      	cbz	r3, 800088c <__sinit+0x14>
 8000884:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000888:	f7ff bff0 	b.w	800086c <__sfp_lock_release>
 800088c:	4b04      	ldr	r3, [pc, #16]	@ (80008a0 <__sinit+0x28>)
 800088e:	6223      	str	r3, [r4, #32]
 8000890:	4b04      	ldr	r3, [pc, #16]	@ (80008a4 <__sinit+0x2c>)
 8000892:	681b      	ldr	r3, [r3, #0]
 8000894:	2b00      	cmp	r3, #0
 8000896:	d1f5      	bne.n	8000884 <__sinit+0xc>
 8000898:	f7ff ffc4 	bl	8000824 <global_stdio_init.part.0>
 800089c:	e7f2      	b.n	8000884 <__sinit+0xc>
 800089e:	bf00      	nop
 80008a0:	080007e5 	.word	0x080007e5
 80008a4:	200001fc 	.word	0x200001fc

080008a8 <_fwalk_sglue>:
 80008a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008ac:	4607      	mov	r7, r0
 80008ae:	4688      	mov	r8, r1
 80008b0:	4614      	mov	r4, r2
 80008b2:	2600      	movs	r6, #0
 80008b4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80008b8:	f1b9 0901 	subs.w	r9, r9, #1
 80008bc:	d505      	bpl.n	80008ca <_fwalk_sglue+0x22>
 80008be:	6824      	ldr	r4, [r4, #0]
 80008c0:	2c00      	cmp	r4, #0
 80008c2:	d1f7      	bne.n	80008b4 <_fwalk_sglue+0xc>
 80008c4:	4630      	mov	r0, r6
 80008c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008ca:	89ab      	ldrh	r3, [r5, #12]
 80008cc:	2b01      	cmp	r3, #1
 80008ce:	d907      	bls.n	80008e0 <_fwalk_sglue+0x38>
 80008d0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80008d4:	3301      	adds	r3, #1
 80008d6:	d003      	beq.n	80008e0 <_fwalk_sglue+0x38>
 80008d8:	4629      	mov	r1, r5
 80008da:	4638      	mov	r0, r7
 80008dc:	47c0      	blx	r8
 80008de:	4306      	orrs	r6, r0
 80008e0:	3568      	adds	r5, #104	@ 0x68
 80008e2:	e7e9      	b.n	80008b8 <_fwalk_sglue+0x10>

080008e4 <iprintf>:
 80008e4:	b40f      	push	{r0, r1, r2, r3}
 80008e6:	b507      	push	{r0, r1, r2, lr}
 80008e8:	4906      	ldr	r1, [pc, #24]	@ (8000904 <iprintf+0x20>)
 80008ea:	ab04      	add	r3, sp, #16
 80008ec:	6808      	ldr	r0, [r1, #0]
 80008ee:	f853 2b04 	ldr.w	r2, [r3], #4
 80008f2:	6881      	ldr	r1, [r0, #8]
 80008f4:	9301      	str	r3, [sp, #4]
 80008f6:	f000 fa17 	bl	8000d28 <_vfiprintf_r>
 80008fa:	b003      	add	sp, #12
 80008fc:	f85d eb04 	ldr.w	lr, [sp], #4
 8000900:	b004      	add	sp, #16
 8000902:	4770      	bx	lr
 8000904:	20000054 	.word	0x20000054

08000908 <putchar>:
 8000908:	4b02      	ldr	r3, [pc, #8]	@ (8000914 <putchar+0xc>)
 800090a:	4601      	mov	r1, r0
 800090c:	6818      	ldr	r0, [r3, #0]
 800090e:	6882      	ldr	r2, [r0, #8]
 8000910:	f000 bd6c 	b.w	80013ec <_putc_r>
 8000914:	20000054 	.word	0x20000054

08000918 <__sread>:
 8000918:	b510      	push	{r4, lr}
 800091a:	460c      	mov	r4, r1
 800091c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000920:	f000 f868 	bl	80009f4 <_read_r>
 8000924:	2800      	cmp	r0, #0
 8000926:	bfab      	itete	ge
 8000928:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800092a:	89a3      	ldrhlt	r3, [r4, #12]
 800092c:	181b      	addge	r3, r3, r0
 800092e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000932:	bfac      	ite	ge
 8000934:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000936:	81a3      	strhlt	r3, [r4, #12]
 8000938:	bd10      	pop	{r4, pc}

0800093a <__swrite>:
 800093a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800093e:	461f      	mov	r7, r3
 8000940:	898b      	ldrh	r3, [r1, #12]
 8000942:	05db      	lsls	r3, r3, #23
 8000944:	4605      	mov	r5, r0
 8000946:	460c      	mov	r4, r1
 8000948:	4616      	mov	r6, r2
 800094a:	d505      	bpl.n	8000958 <__swrite+0x1e>
 800094c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000950:	2302      	movs	r3, #2
 8000952:	2200      	movs	r2, #0
 8000954:	f000 f83c 	bl	80009d0 <_lseek_r>
 8000958:	89a3      	ldrh	r3, [r4, #12]
 800095a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800095e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000962:	81a3      	strh	r3, [r4, #12]
 8000964:	4632      	mov	r2, r6
 8000966:	463b      	mov	r3, r7
 8000968:	4628      	mov	r0, r5
 800096a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800096e:	f000 b853 	b.w	8000a18 <_write_r>

08000972 <__sseek>:
 8000972:	b510      	push	{r4, lr}
 8000974:	460c      	mov	r4, r1
 8000976:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800097a:	f000 f829 	bl	80009d0 <_lseek_r>
 800097e:	1c43      	adds	r3, r0, #1
 8000980:	89a3      	ldrh	r3, [r4, #12]
 8000982:	bf15      	itete	ne
 8000984:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000986:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800098a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800098e:	81a3      	strheq	r3, [r4, #12]
 8000990:	bf18      	it	ne
 8000992:	81a3      	strhne	r3, [r4, #12]
 8000994:	bd10      	pop	{r4, pc}

08000996 <__sclose>:
 8000996:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800099a:	f000 b809 	b.w	80009b0 <_close_r>

0800099e <memset>:
 800099e:	4402      	add	r2, r0
 80009a0:	4603      	mov	r3, r0
 80009a2:	4293      	cmp	r3, r2
 80009a4:	d100      	bne.n	80009a8 <memset+0xa>
 80009a6:	4770      	bx	lr
 80009a8:	f803 1b01 	strb.w	r1, [r3], #1
 80009ac:	e7f9      	b.n	80009a2 <memset+0x4>
	...

080009b0 <_close_r>:
 80009b0:	b538      	push	{r3, r4, r5, lr}
 80009b2:	4d06      	ldr	r5, [pc, #24]	@ (80009cc <_close_r+0x1c>)
 80009b4:	2300      	movs	r3, #0
 80009b6:	4604      	mov	r4, r0
 80009b8:	4608      	mov	r0, r1
 80009ba:	602b      	str	r3, [r5, #0]
 80009bc:	f7ff fdfe 	bl	80005bc <_close>
 80009c0:	1c43      	adds	r3, r0, #1
 80009c2:	d102      	bne.n	80009ca <_close_r+0x1a>
 80009c4:	682b      	ldr	r3, [r5, #0]
 80009c6:	b103      	cbz	r3, 80009ca <_close_r+0x1a>
 80009c8:	6023      	str	r3, [r4, #0]
 80009ca:	bd38      	pop	{r3, r4, r5, pc}
 80009cc:	20000200 	.word	0x20000200

080009d0 <_lseek_r>:
 80009d0:	b538      	push	{r3, r4, r5, lr}
 80009d2:	4d07      	ldr	r5, [pc, #28]	@ (80009f0 <_lseek_r+0x20>)
 80009d4:	4604      	mov	r4, r0
 80009d6:	4608      	mov	r0, r1
 80009d8:	4611      	mov	r1, r2
 80009da:	2200      	movs	r2, #0
 80009dc:	602a      	str	r2, [r5, #0]
 80009de:	461a      	mov	r2, r3
 80009e0:	f7ff fe13 	bl	800060a <_lseek>
 80009e4:	1c43      	adds	r3, r0, #1
 80009e6:	d102      	bne.n	80009ee <_lseek_r+0x1e>
 80009e8:	682b      	ldr	r3, [r5, #0]
 80009ea:	b103      	cbz	r3, 80009ee <_lseek_r+0x1e>
 80009ec:	6023      	str	r3, [r4, #0]
 80009ee:	bd38      	pop	{r3, r4, r5, pc}
 80009f0:	20000200 	.word	0x20000200

080009f4 <_read_r>:
 80009f4:	b538      	push	{r3, r4, r5, lr}
 80009f6:	4d07      	ldr	r5, [pc, #28]	@ (8000a14 <_read_r+0x20>)
 80009f8:	4604      	mov	r4, r0
 80009fa:	4608      	mov	r0, r1
 80009fc:	4611      	mov	r1, r2
 80009fe:	2200      	movs	r2, #0
 8000a00:	602a      	str	r2, [r5, #0]
 8000a02:	461a      	mov	r2, r3
 8000a04:	f7ff fda1 	bl	800054a <_read>
 8000a08:	1c43      	adds	r3, r0, #1
 8000a0a:	d102      	bne.n	8000a12 <_read_r+0x1e>
 8000a0c:	682b      	ldr	r3, [r5, #0]
 8000a0e:	b103      	cbz	r3, 8000a12 <_read_r+0x1e>
 8000a10:	6023      	str	r3, [r4, #0]
 8000a12:	bd38      	pop	{r3, r4, r5, pc}
 8000a14:	20000200 	.word	0x20000200

08000a18 <_write_r>:
 8000a18:	b538      	push	{r3, r4, r5, lr}
 8000a1a:	4d07      	ldr	r5, [pc, #28]	@ (8000a38 <_write_r+0x20>)
 8000a1c:	4604      	mov	r4, r0
 8000a1e:	4608      	mov	r0, r1
 8000a20:	4611      	mov	r1, r2
 8000a22:	2200      	movs	r2, #0
 8000a24:	602a      	str	r2, [r5, #0]
 8000a26:	461a      	mov	r2, r3
 8000a28:	f7ff fdac 	bl	8000584 <_write>
 8000a2c:	1c43      	adds	r3, r0, #1
 8000a2e:	d102      	bne.n	8000a36 <_write_r+0x1e>
 8000a30:	682b      	ldr	r3, [r5, #0]
 8000a32:	b103      	cbz	r3, 8000a36 <_write_r+0x1e>
 8000a34:	6023      	str	r3, [r4, #0]
 8000a36:	bd38      	pop	{r3, r4, r5, pc}
 8000a38:	20000200 	.word	0x20000200

08000a3c <__errno>:
 8000a3c:	4b01      	ldr	r3, [pc, #4]	@ (8000a44 <__errno+0x8>)
 8000a3e:	6818      	ldr	r0, [r3, #0]
 8000a40:	4770      	bx	lr
 8000a42:	bf00      	nop
 8000a44:	20000054 	.word	0x20000054

08000a48 <__libc_init_array>:
 8000a48:	b570      	push	{r4, r5, r6, lr}
 8000a4a:	4d0d      	ldr	r5, [pc, #52]	@ (8000a80 <__libc_init_array+0x38>)
 8000a4c:	4c0d      	ldr	r4, [pc, #52]	@ (8000a84 <__libc_init_array+0x3c>)
 8000a4e:	1b64      	subs	r4, r4, r5
 8000a50:	10a4      	asrs	r4, r4, #2
 8000a52:	2600      	movs	r6, #0
 8000a54:	42a6      	cmp	r6, r4
 8000a56:	d109      	bne.n	8000a6c <__libc_init_array+0x24>
 8000a58:	4d0b      	ldr	r5, [pc, #44]	@ (8000a88 <__libc_init_array+0x40>)
 8000a5a:	4c0c      	ldr	r4, [pc, #48]	@ (8000a8c <__libc_init_array+0x44>)
 8000a5c:	f000 fe6e 	bl	800173c <_init>
 8000a60:	1b64      	subs	r4, r4, r5
 8000a62:	10a4      	asrs	r4, r4, #2
 8000a64:	2600      	movs	r6, #0
 8000a66:	42a6      	cmp	r6, r4
 8000a68:	d105      	bne.n	8000a76 <__libc_init_array+0x2e>
 8000a6a:	bd70      	pop	{r4, r5, r6, pc}
 8000a6c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a70:	4798      	blx	r3
 8000a72:	3601      	adds	r6, #1
 8000a74:	e7ee      	b.n	8000a54 <__libc_init_array+0xc>
 8000a76:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a7a:	4798      	blx	r3
 8000a7c:	3601      	adds	r6, #1
 8000a7e:	e7f2      	b.n	8000a66 <__libc_init_array+0x1e>
 8000a80:	08001898 	.word	0x08001898
 8000a84:	08001898 	.word	0x08001898
 8000a88:	08001898 	.word	0x08001898
 8000a8c:	0800189c 	.word	0x0800189c

08000a90 <__retarget_lock_init_recursive>:
 8000a90:	4770      	bx	lr

08000a92 <__retarget_lock_acquire_recursive>:
 8000a92:	4770      	bx	lr

08000a94 <__retarget_lock_release_recursive>:
 8000a94:	4770      	bx	lr
	...

08000a98 <__assert_func>:
 8000a98:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000a9a:	4614      	mov	r4, r2
 8000a9c:	461a      	mov	r2, r3
 8000a9e:	4b09      	ldr	r3, [pc, #36]	@ (8000ac4 <__assert_func+0x2c>)
 8000aa0:	681b      	ldr	r3, [r3, #0]
 8000aa2:	4605      	mov	r5, r0
 8000aa4:	68d8      	ldr	r0, [r3, #12]
 8000aa6:	b14c      	cbz	r4, 8000abc <__assert_func+0x24>
 8000aa8:	4b07      	ldr	r3, [pc, #28]	@ (8000ac8 <__assert_func+0x30>)
 8000aaa:	9100      	str	r1, [sp, #0]
 8000aac:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000ab0:	4906      	ldr	r1, [pc, #24]	@ (8000acc <__assert_func+0x34>)
 8000ab2:	462b      	mov	r3, r5
 8000ab4:	f000 fc88 	bl	80013c8 <fiprintf>
 8000ab8:	f000 fd70 	bl	800159c <abort>
 8000abc:	4b04      	ldr	r3, [pc, #16]	@ (8000ad0 <__assert_func+0x38>)
 8000abe:	461c      	mov	r4, r3
 8000ac0:	e7f3      	b.n	8000aaa <__assert_func+0x12>
 8000ac2:	bf00      	nop
 8000ac4:	20000054 	.word	0x20000054
 8000ac8:	0800181e 	.word	0x0800181e
 8000acc:	0800182b 	.word	0x0800182b
 8000ad0:	08001859 	.word	0x08001859

08000ad4 <_free_r>:
 8000ad4:	b538      	push	{r3, r4, r5, lr}
 8000ad6:	4605      	mov	r5, r0
 8000ad8:	2900      	cmp	r1, #0
 8000ada:	d041      	beq.n	8000b60 <_free_r+0x8c>
 8000adc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ae0:	1f0c      	subs	r4, r1, #4
 8000ae2:	2b00      	cmp	r3, #0
 8000ae4:	bfb8      	it	lt
 8000ae6:	18e4      	addlt	r4, r4, r3
 8000ae8:	f000 f8e8 	bl	8000cbc <__malloc_lock>
 8000aec:	4a1d      	ldr	r2, [pc, #116]	@ (8000b64 <_free_r+0x90>)
 8000aee:	6813      	ldr	r3, [r2, #0]
 8000af0:	b933      	cbnz	r3, 8000b00 <_free_r+0x2c>
 8000af2:	6063      	str	r3, [r4, #4]
 8000af4:	6014      	str	r4, [r2, #0]
 8000af6:	4628      	mov	r0, r5
 8000af8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000afc:	f000 b8e4 	b.w	8000cc8 <__malloc_unlock>
 8000b00:	42a3      	cmp	r3, r4
 8000b02:	d908      	bls.n	8000b16 <_free_r+0x42>
 8000b04:	6820      	ldr	r0, [r4, #0]
 8000b06:	1821      	adds	r1, r4, r0
 8000b08:	428b      	cmp	r3, r1
 8000b0a:	bf01      	itttt	eq
 8000b0c:	6819      	ldreq	r1, [r3, #0]
 8000b0e:	685b      	ldreq	r3, [r3, #4]
 8000b10:	1809      	addeq	r1, r1, r0
 8000b12:	6021      	streq	r1, [r4, #0]
 8000b14:	e7ed      	b.n	8000af2 <_free_r+0x1e>
 8000b16:	461a      	mov	r2, r3
 8000b18:	685b      	ldr	r3, [r3, #4]
 8000b1a:	b10b      	cbz	r3, 8000b20 <_free_r+0x4c>
 8000b1c:	42a3      	cmp	r3, r4
 8000b1e:	d9fa      	bls.n	8000b16 <_free_r+0x42>
 8000b20:	6811      	ldr	r1, [r2, #0]
 8000b22:	1850      	adds	r0, r2, r1
 8000b24:	42a0      	cmp	r0, r4
 8000b26:	d10b      	bne.n	8000b40 <_free_r+0x6c>
 8000b28:	6820      	ldr	r0, [r4, #0]
 8000b2a:	4401      	add	r1, r0
 8000b2c:	1850      	adds	r0, r2, r1
 8000b2e:	4283      	cmp	r3, r0
 8000b30:	6011      	str	r1, [r2, #0]
 8000b32:	d1e0      	bne.n	8000af6 <_free_r+0x22>
 8000b34:	6818      	ldr	r0, [r3, #0]
 8000b36:	685b      	ldr	r3, [r3, #4]
 8000b38:	6053      	str	r3, [r2, #4]
 8000b3a:	4408      	add	r0, r1
 8000b3c:	6010      	str	r0, [r2, #0]
 8000b3e:	e7da      	b.n	8000af6 <_free_r+0x22>
 8000b40:	d902      	bls.n	8000b48 <_free_r+0x74>
 8000b42:	230c      	movs	r3, #12
 8000b44:	602b      	str	r3, [r5, #0]
 8000b46:	e7d6      	b.n	8000af6 <_free_r+0x22>
 8000b48:	6820      	ldr	r0, [r4, #0]
 8000b4a:	1821      	adds	r1, r4, r0
 8000b4c:	428b      	cmp	r3, r1
 8000b4e:	bf04      	itt	eq
 8000b50:	6819      	ldreq	r1, [r3, #0]
 8000b52:	685b      	ldreq	r3, [r3, #4]
 8000b54:	6063      	str	r3, [r4, #4]
 8000b56:	bf04      	itt	eq
 8000b58:	1809      	addeq	r1, r1, r0
 8000b5a:	6021      	streq	r1, [r4, #0]
 8000b5c:	6054      	str	r4, [r2, #4]
 8000b5e:	e7ca      	b.n	8000af6 <_free_r+0x22>
 8000b60:	bd38      	pop	{r3, r4, r5, pc}
 8000b62:	bf00      	nop
 8000b64:	2000020c 	.word	0x2000020c

08000b68 <malloc>:
 8000b68:	4b02      	ldr	r3, [pc, #8]	@ (8000b74 <malloc+0xc>)
 8000b6a:	4601      	mov	r1, r0
 8000b6c:	6818      	ldr	r0, [r3, #0]
 8000b6e:	f000 b825 	b.w	8000bbc <_malloc_r>
 8000b72:	bf00      	nop
 8000b74:	20000054 	.word	0x20000054

08000b78 <sbrk_aligned>:
 8000b78:	b570      	push	{r4, r5, r6, lr}
 8000b7a:	4e0f      	ldr	r6, [pc, #60]	@ (8000bb8 <sbrk_aligned+0x40>)
 8000b7c:	460c      	mov	r4, r1
 8000b7e:	6831      	ldr	r1, [r6, #0]
 8000b80:	4605      	mov	r5, r0
 8000b82:	b911      	cbnz	r1, 8000b8a <sbrk_aligned+0x12>
 8000b84:	f000 fcfa 	bl	800157c <_sbrk_r>
 8000b88:	6030      	str	r0, [r6, #0]
 8000b8a:	4621      	mov	r1, r4
 8000b8c:	4628      	mov	r0, r5
 8000b8e:	f000 fcf5 	bl	800157c <_sbrk_r>
 8000b92:	1c43      	adds	r3, r0, #1
 8000b94:	d103      	bne.n	8000b9e <sbrk_aligned+0x26>
 8000b96:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8000b9a:	4620      	mov	r0, r4
 8000b9c:	bd70      	pop	{r4, r5, r6, pc}
 8000b9e:	1cc4      	adds	r4, r0, #3
 8000ba0:	f024 0403 	bic.w	r4, r4, #3
 8000ba4:	42a0      	cmp	r0, r4
 8000ba6:	d0f8      	beq.n	8000b9a <sbrk_aligned+0x22>
 8000ba8:	1a21      	subs	r1, r4, r0
 8000baa:	4628      	mov	r0, r5
 8000bac:	f000 fce6 	bl	800157c <_sbrk_r>
 8000bb0:	3001      	adds	r0, #1
 8000bb2:	d1f2      	bne.n	8000b9a <sbrk_aligned+0x22>
 8000bb4:	e7ef      	b.n	8000b96 <sbrk_aligned+0x1e>
 8000bb6:	bf00      	nop
 8000bb8:	20000208 	.word	0x20000208

08000bbc <_malloc_r>:
 8000bbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000bc0:	1ccd      	adds	r5, r1, #3
 8000bc2:	f025 0503 	bic.w	r5, r5, #3
 8000bc6:	3508      	adds	r5, #8
 8000bc8:	2d0c      	cmp	r5, #12
 8000bca:	bf38      	it	cc
 8000bcc:	250c      	movcc	r5, #12
 8000bce:	2d00      	cmp	r5, #0
 8000bd0:	4606      	mov	r6, r0
 8000bd2:	db01      	blt.n	8000bd8 <_malloc_r+0x1c>
 8000bd4:	42a9      	cmp	r1, r5
 8000bd6:	d904      	bls.n	8000be2 <_malloc_r+0x26>
 8000bd8:	230c      	movs	r3, #12
 8000bda:	6033      	str	r3, [r6, #0]
 8000bdc:	2000      	movs	r0, #0
 8000bde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000be2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000cb8 <_malloc_r+0xfc>
 8000be6:	f000 f869 	bl	8000cbc <__malloc_lock>
 8000bea:	f8d8 3000 	ldr.w	r3, [r8]
 8000bee:	461c      	mov	r4, r3
 8000bf0:	bb44      	cbnz	r4, 8000c44 <_malloc_r+0x88>
 8000bf2:	4629      	mov	r1, r5
 8000bf4:	4630      	mov	r0, r6
 8000bf6:	f7ff ffbf 	bl	8000b78 <sbrk_aligned>
 8000bfa:	1c43      	adds	r3, r0, #1
 8000bfc:	4604      	mov	r4, r0
 8000bfe:	d158      	bne.n	8000cb2 <_malloc_r+0xf6>
 8000c00:	f8d8 4000 	ldr.w	r4, [r8]
 8000c04:	4627      	mov	r7, r4
 8000c06:	2f00      	cmp	r7, #0
 8000c08:	d143      	bne.n	8000c92 <_malloc_r+0xd6>
 8000c0a:	2c00      	cmp	r4, #0
 8000c0c:	d04b      	beq.n	8000ca6 <_malloc_r+0xea>
 8000c0e:	6823      	ldr	r3, [r4, #0]
 8000c10:	4639      	mov	r1, r7
 8000c12:	4630      	mov	r0, r6
 8000c14:	eb04 0903 	add.w	r9, r4, r3
 8000c18:	f000 fcb0 	bl	800157c <_sbrk_r>
 8000c1c:	4581      	cmp	r9, r0
 8000c1e:	d142      	bne.n	8000ca6 <_malloc_r+0xea>
 8000c20:	6821      	ldr	r1, [r4, #0]
 8000c22:	1a6d      	subs	r5, r5, r1
 8000c24:	4629      	mov	r1, r5
 8000c26:	4630      	mov	r0, r6
 8000c28:	f7ff ffa6 	bl	8000b78 <sbrk_aligned>
 8000c2c:	3001      	adds	r0, #1
 8000c2e:	d03a      	beq.n	8000ca6 <_malloc_r+0xea>
 8000c30:	6823      	ldr	r3, [r4, #0]
 8000c32:	442b      	add	r3, r5
 8000c34:	6023      	str	r3, [r4, #0]
 8000c36:	f8d8 3000 	ldr.w	r3, [r8]
 8000c3a:	685a      	ldr	r2, [r3, #4]
 8000c3c:	bb62      	cbnz	r2, 8000c98 <_malloc_r+0xdc>
 8000c3e:	f8c8 7000 	str.w	r7, [r8]
 8000c42:	e00f      	b.n	8000c64 <_malloc_r+0xa8>
 8000c44:	6822      	ldr	r2, [r4, #0]
 8000c46:	1b52      	subs	r2, r2, r5
 8000c48:	d420      	bmi.n	8000c8c <_malloc_r+0xd0>
 8000c4a:	2a0b      	cmp	r2, #11
 8000c4c:	d917      	bls.n	8000c7e <_malloc_r+0xc2>
 8000c4e:	1961      	adds	r1, r4, r5
 8000c50:	42a3      	cmp	r3, r4
 8000c52:	6025      	str	r5, [r4, #0]
 8000c54:	bf18      	it	ne
 8000c56:	6059      	strne	r1, [r3, #4]
 8000c58:	6863      	ldr	r3, [r4, #4]
 8000c5a:	bf08      	it	eq
 8000c5c:	f8c8 1000 	streq.w	r1, [r8]
 8000c60:	5162      	str	r2, [r4, r5]
 8000c62:	604b      	str	r3, [r1, #4]
 8000c64:	4630      	mov	r0, r6
 8000c66:	f000 f82f 	bl	8000cc8 <__malloc_unlock>
 8000c6a:	f104 000b 	add.w	r0, r4, #11
 8000c6e:	1d23      	adds	r3, r4, #4
 8000c70:	f020 0007 	bic.w	r0, r0, #7
 8000c74:	1ac2      	subs	r2, r0, r3
 8000c76:	bf1c      	itt	ne
 8000c78:	1a1b      	subne	r3, r3, r0
 8000c7a:	50a3      	strne	r3, [r4, r2]
 8000c7c:	e7af      	b.n	8000bde <_malloc_r+0x22>
 8000c7e:	6862      	ldr	r2, [r4, #4]
 8000c80:	42a3      	cmp	r3, r4
 8000c82:	bf0c      	ite	eq
 8000c84:	f8c8 2000 	streq.w	r2, [r8]
 8000c88:	605a      	strne	r2, [r3, #4]
 8000c8a:	e7eb      	b.n	8000c64 <_malloc_r+0xa8>
 8000c8c:	4623      	mov	r3, r4
 8000c8e:	6864      	ldr	r4, [r4, #4]
 8000c90:	e7ae      	b.n	8000bf0 <_malloc_r+0x34>
 8000c92:	463c      	mov	r4, r7
 8000c94:	687f      	ldr	r7, [r7, #4]
 8000c96:	e7b6      	b.n	8000c06 <_malloc_r+0x4a>
 8000c98:	461a      	mov	r2, r3
 8000c9a:	685b      	ldr	r3, [r3, #4]
 8000c9c:	42a3      	cmp	r3, r4
 8000c9e:	d1fb      	bne.n	8000c98 <_malloc_r+0xdc>
 8000ca0:	2300      	movs	r3, #0
 8000ca2:	6053      	str	r3, [r2, #4]
 8000ca4:	e7de      	b.n	8000c64 <_malloc_r+0xa8>
 8000ca6:	230c      	movs	r3, #12
 8000ca8:	6033      	str	r3, [r6, #0]
 8000caa:	4630      	mov	r0, r6
 8000cac:	f000 f80c 	bl	8000cc8 <__malloc_unlock>
 8000cb0:	e794      	b.n	8000bdc <_malloc_r+0x20>
 8000cb2:	6005      	str	r5, [r0, #0]
 8000cb4:	e7d6      	b.n	8000c64 <_malloc_r+0xa8>
 8000cb6:	bf00      	nop
 8000cb8:	2000020c 	.word	0x2000020c

08000cbc <__malloc_lock>:
 8000cbc:	4801      	ldr	r0, [pc, #4]	@ (8000cc4 <__malloc_lock+0x8>)
 8000cbe:	f7ff bee8 	b.w	8000a92 <__retarget_lock_acquire_recursive>
 8000cc2:	bf00      	nop
 8000cc4:	20000204 	.word	0x20000204

08000cc8 <__malloc_unlock>:
 8000cc8:	4801      	ldr	r0, [pc, #4]	@ (8000cd0 <__malloc_unlock+0x8>)
 8000cca:	f7ff bee3 	b.w	8000a94 <__retarget_lock_release_recursive>
 8000cce:	bf00      	nop
 8000cd0:	20000204 	.word	0x20000204

08000cd4 <__sfputc_r>:
 8000cd4:	6893      	ldr	r3, [r2, #8]
 8000cd6:	3b01      	subs	r3, #1
 8000cd8:	2b00      	cmp	r3, #0
 8000cda:	b410      	push	{r4}
 8000cdc:	6093      	str	r3, [r2, #8]
 8000cde:	da08      	bge.n	8000cf2 <__sfputc_r+0x1e>
 8000ce0:	6994      	ldr	r4, [r2, #24]
 8000ce2:	42a3      	cmp	r3, r4
 8000ce4:	db01      	blt.n	8000cea <__sfputc_r+0x16>
 8000ce6:	290a      	cmp	r1, #10
 8000ce8:	d103      	bne.n	8000cf2 <__sfputc_r+0x1e>
 8000cea:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000cee:	f000 bbb1 	b.w	8001454 <__swbuf_r>
 8000cf2:	6813      	ldr	r3, [r2, #0]
 8000cf4:	1c58      	adds	r0, r3, #1
 8000cf6:	6010      	str	r0, [r2, #0]
 8000cf8:	7019      	strb	r1, [r3, #0]
 8000cfa:	4608      	mov	r0, r1
 8000cfc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000d00:	4770      	bx	lr

08000d02 <__sfputs_r>:
 8000d02:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d04:	4606      	mov	r6, r0
 8000d06:	460f      	mov	r7, r1
 8000d08:	4614      	mov	r4, r2
 8000d0a:	18d5      	adds	r5, r2, r3
 8000d0c:	42ac      	cmp	r4, r5
 8000d0e:	d101      	bne.n	8000d14 <__sfputs_r+0x12>
 8000d10:	2000      	movs	r0, #0
 8000d12:	e007      	b.n	8000d24 <__sfputs_r+0x22>
 8000d14:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d18:	463a      	mov	r2, r7
 8000d1a:	4630      	mov	r0, r6
 8000d1c:	f7ff ffda 	bl	8000cd4 <__sfputc_r>
 8000d20:	1c43      	adds	r3, r0, #1
 8000d22:	d1f3      	bne.n	8000d0c <__sfputs_r+0xa>
 8000d24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000d28 <_vfiprintf_r>:
 8000d28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d2c:	460d      	mov	r5, r1
 8000d2e:	b09d      	sub	sp, #116	@ 0x74
 8000d30:	4614      	mov	r4, r2
 8000d32:	4698      	mov	r8, r3
 8000d34:	4606      	mov	r6, r0
 8000d36:	b118      	cbz	r0, 8000d40 <_vfiprintf_r+0x18>
 8000d38:	6a03      	ldr	r3, [r0, #32]
 8000d3a:	b90b      	cbnz	r3, 8000d40 <_vfiprintf_r+0x18>
 8000d3c:	f7ff fd9c 	bl	8000878 <__sinit>
 8000d40:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000d42:	07d9      	lsls	r1, r3, #31
 8000d44:	d405      	bmi.n	8000d52 <_vfiprintf_r+0x2a>
 8000d46:	89ab      	ldrh	r3, [r5, #12]
 8000d48:	059a      	lsls	r2, r3, #22
 8000d4a:	d402      	bmi.n	8000d52 <_vfiprintf_r+0x2a>
 8000d4c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d4e:	f7ff fea0 	bl	8000a92 <__retarget_lock_acquire_recursive>
 8000d52:	89ab      	ldrh	r3, [r5, #12]
 8000d54:	071b      	lsls	r3, r3, #28
 8000d56:	d501      	bpl.n	8000d5c <_vfiprintf_r+0x34>
 8000d58:	692b      	ldr	r3, [r5, #16]
 8000d5a:	b99b      	cbnz	r3, 8000d84 <_vfiprintf_r+0x5c>
 8000d5c:	4629      	mov	r1, r5
 8000d5e:	4630      	mov	r0, r6
 8000d60:	f000 fbb6 	bl	80014d0 <__swsetup_r>
 8000d64:	b170      	cbz	r0, 8000d84 <_vfiprintf_r+0x5c>
 8000d66:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000d68:	07dc      	lsls	r4, r3, #31
 8000d6a:	d504      	bpl.n	8000d76 <_vfiprintf_r+0x4e>
 8000d6c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000d70:	b01d      	add	sp, #116	@ 0x74
 8000d72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d76:	89ab      	ldrh	r3, [r5, #12]
 8000d78:	0598      	lsls	r0, r3, #22
 8000d7a:	d4f7      	bmi.n	8000d6c <_vfiprintf_r+0x44>
 8000d7c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d7e:	f7ff fe89 	bl	8000a94 <__retarget_lock_release_recursive>
 8000d82:	e7f3      	b.n	8000d6c <_vfiprintf_r+0x44>
 8000d84:	2300      	movs	r3, #0
 8000d86:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d88:	2320      	movs	r3, #32
 8000d8a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000d8e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d92:	2330      	movs	r3, #48	@ 0x30
 8000d94:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000f44 <_vfiprintf_r+0x21c>
 8000d98:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000d9c:	f04f 0901 	mov.w	r9, #1
 8000da0:	4623      	mov	r3, r4
 8000da2:	469a      	mov	sl, r3
 8000da4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000da8:	b10a      	cbz	r2, 8000dae <_vfiprintf_r+0x86>
 8000daa:	2a25      	cmp	r2, #37	@ 0x25
 8000dac:	d1f9      	bne.n	8000da2 <_vfiprintf_r+0x7a>
 8000dae:	ebba 0b04 	subs.w	fp, sl, r4
 8000db2:	d00b      	beq.n	8000dcc <_vfiprintf_r+0xa4>
 8000db4:	465b      	mov	r3, fp
 8000db6:	4622      	mov	r2, r4
 8000db8:	4629      	mov	r1, r5
 8000dba:	4630      	mov	r0, r6
 8000dbc:	f7ff ffa1 	bl	8000d02 <__sfputs_r>
 8000dc0:	3001      	adds	r0, #1
 8000dc2:	f000 80a7 	beq.w	8000f14 <_vfiprintf_r+0x1ec>
 8000dc6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000dc8:	445a      	add	r2, fp
 8000dca:	9209      	str	r2, [sp, #36]	@ 0x24
 8000dcc:	f89a 3000 	ldrb.w	r3, [sl]
 8000dd0:	2b00      	cmp	r3, #0
 8000dd2:	f000 809f 	beq.w	8000f14 <_vfiprintf_r+0x1ec>
 8000dd6:	2300      	movs	r3, #0
 8000dd8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000ddc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000de0:	f10a 0a01 	add.w	sl, sl, #1
 8000de4:	9304      	str	r3, [sp, #16]
 8000de6:	9307      	str	r3, [sp, #28]
 8000de8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000dec:	931a      	str	r3, [sp, #104]	@ 0x68
 8000dee:	4654      	mov	r4, sl
 8000df0:	2205      	movs	r2, #5
 8000df2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000df6:	4853      	ldr	r0, [pc, #332]	@ (8000f44 <_vfiprintf_r+0x21c>)
 8000df8:	f7ff fa0a 	bl	8000210 <memchr>
 8000dfc:	9a04      	ldr	r2, [sp, #16]
 8000dfe:	b9d8      	cbnz	r0, 8000e38 <_vfiprintf_r+0x110>
 8000e00:	06d1      	lsls	r1, r2, #27
 8000e02:	bf44      	itt	mi
 8000e04:	2320      	movmi	r3, #32
 8000e06:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000e0a:	0713      	lsls	r3, r2, #28
 8000e0c:	bf44      	itt	mi
 8000e0e:	232b      	movmi	r3, #43	@ 0x2b
 8000e10:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000e14:	f89a 3000 	ldrb.w	r3, [sl]
 8000e18:	2b2a      	cmp	r3, #42	@ 0x2a
 8000e1a:	d015      	beq.n	8000e48 <_vfiprintf_r+0x120>
 8000e1c:	9a07      	ldr	r2, [sp, #28]
 8000e1e:	4654      	mov	r4, sl
 8000e20:	2000      	movs	r0, #0
 8000e22:	f04f 0c0a 	mov.w	ip, #10
 8000e26:	4621      	mov	r1, r4
 8000e28:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000e2c:	3b30      	subs	r3, #48	@ 0x30
 8000e2e:	2b09      	cmp	r3, #9
 8000e30:	d94b      	bls.n	8000eca <_vfiprintf_r+0x1a2>
 8000e32:	b1b0      	cbz	r0, 8000e62 <_vfiprintf_r+0x13a>
 8000e34:	9207      	str	r2, [sp, #28]
 8000e36:	e014      	b.n	8000e62 <_vfiprintf_r+0x13a>
 8000e38:	eba0 0308 	sub.w	r3, r0, r8
 8000e3c:	fa09 f303 	lsl.w	r3, r9, r3
 8000e40:	4313      	orrs	r3, r2
 8000e42:	9304      	str	r3, [sp, #16]
 8000e44:	46a2      	mov	sl, r4
 8000e46:	e7d2      	b.n	8000dee <_vfiprintf_r+0xc6>
 8000e48:	9b03      	ldr	r3, [sp, #12]
 8000e4a:	1d19      	adds	r1, r3, #4
 8000e4c:	681b      	ldr	r3, [r3, #0]
 8000e4e:	9103      	str	r1, [sp, #12]
 8000e50:	2b00      	cmp	r3, #0
 8000e52:	bfbb      	ittet	lt
 8000e54:	425b      	neglt	r3, r3
 8000e56:	f042 0202 	orrlt.w	r2, r2, #2
 8000e5a:	9307      	strge	r3, [sp, #28]
 8000e5c:	9307      	strlt	r3, [sp, #28]
 8000e5e:	bfb8      	it	lt
 8000e60:	9204      	strlt	r2, [sp, #16]
 8000e62:	7823      	ldrb	r3, [r4, #0]
 8000e64:	2b2e      	cmp	r3, #46	@ 0x2e
 8000e66:	d10a      	bne.n	8000e7e <_vfiprintf_r+0x156>
 8000e68:	7863      	ldrb	r3, [r4, #1]
 8000e6a:	2b2a      	cmp	r3, #42	@ 0x2a
 8000e6c:	d132      	bne.n	8000ed4 <_vfiprintf_r+0x1ac>
 8000e6e:	9b03      	ldr	r3, [sp, #12]
 8000e70:	1d1a      	adds	r2, r3, #4
 8000e72:	681b      	ldr	r3, [r3, #0]
 8000e74:	9203      	str	r2, [sp, #12]
 8000e76:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000e7a:	3402      	adds	r4, #2
 8000e7c:	9305      	str	r3, [sp, #20]
 8000e7e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000f54 <_vfiprintf_r+0x22c>
 8000e82:	7821      	ldrb	r1, [r4, #0]
 8000e84:	2203      	movs	r2, #3
 8000e86:	4650      	mov	r0, sl
 8000e88:	f7ff f9c2 	bl	8000210 <memchr>
 8000e8c:	b138      	cbz	r0, 8000e9e <_vfiprintf_r+0x176>
 8000e8e:	9b04      	ldr	r3, [sp, #16]
 8000e90:	eba0 000a 	sub.w	r0, r0, sl
 8000e94:	2240      	movs	r2, #64	@ 0x40
 8000e96:	4082      	lsls	r2, r0
 8000e98:	4313      	orrs	r3, r2
 8000e9a:	3401      	adds	r4, #1
 8000e9c:	9304      	str	r3, [sp, #16]
 8000e9e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ea2:	4829      	ldr	r0, [pc, #164]	@ (8000f48 <_vfiprintf_r+0x220>)
 8000ea4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000ea8:	2206      	movs	r2, #6
 8000eaa:	f7ff f9b1 	bl	8000210 <memchr>
 8000eae:	2800      	cmp	r0, #0
 8000eb0:	d03f      	beq.n	8000f32 <_vfiprintf_r+0x20a>
 8000eb2:	4b26      	ldr	r3, [pc, #152]	@ (8000f4c <_vfiprintf_r+0x224>)
 8000eb4:	bb1b      	cbnz	r3, 8000efe <_vfiprintf_r+0x1d6>
 8000eb6:	9b03      	ldr	r3, [sp, #12]
 8000eb8:	3307      	adds	r3, #7
 8000eba:	f023 0307 	bic.w	r3, r3, #7
 8000ebe:	3308      	adds	r3, #8
 8000ec0:	9303      	str	r3, [sp, #12]
 8000ec2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000ec4:	443b      	add	r3, r7
 8000ec6:	9309      	str	r3, [sp, #36]	@ 0x24
 8000ec8:	e76a      	b.n	8000da0 <_vfiprintf_r+0x78>
 8000eca:	fb0c 3202 	mla	r2, ip, r2, r3
 8000ece:	460c      	mov	r4, r1
 8000ed0:	2001      	movs	r0, #1
 8000ed2:	e7a8      	b.n	8000e26 <_vfiprintf_r+0xfe>
 8000ed4:	2300      	movs	r3, #0
 8000ed6:	3401      	adds	r4, #1
 8000ed8:	9305      	str	r3, [sp, #20]
 8000eda:	4619      	mov	r1, r3
 8000edc:	f04f 0c0a 	mov.w	ip, #10
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ee6:	3a30      	subs	r2, #48	@ 0x30
 8000ee8:	2a09      	cmp	r2, #9
 8000eea:	d903      	bls.n	8000ef4 <_vfiprintf_r+0x1cc>
 8000eec:	2b00      	cmp	r3, #0
 8000eee:	d0c6      	beq.n	8000e7e <_vfiprintf_r+0x156>
 8000ef0:	9105      	str	r1, [sp, #20]
 8000ef2:	e7c4      	b.n	8000e7e <_vfiprintf_r+0x156>
 8000ef4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000ef8:	4604      	mov	r4, r0
 8000efa:	2301      	movs	r3, #1
 8000efc:	e7f0      	b.n	8000ee0 <_vfiprintf_r+0x1b8>
 8000efe:	ab03      	add	r3, sp, #12
 8000f00:	9300      	str	r3, [sp, #0]
 8000f02:	462a      	mov	r2, r5
 8000f04:	4b12      	ldr	r3, [pc, #72]	@ (8000f50 <_vfiprintf_r+0x228>)
 8000f06:	a904      	add	r1, sp, #16
 8000f08:	4630      	mov	r0, r6
 8000f0a:	f3af 8000 	nop.w
 8000f0e:	4607      	mov	r7, r0
 8000f10:	1c78      	adds	r0, r7, #1
 8000f12:	d1d6      	bne.n	8000ec2 <_vfiprintf_r+0x19a>
 8000f14:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000f16:	07d9      	lsls	r1, r3, #31
 8000f18:	d405      	bmi.n	8000f26 <_vfiprintf_r+0x1fe>
 8000f1a:	89ab      	ldrh	r3, [r5, #12]
 8000f1c:	059a      	lsls	r2, r3, #22
 8000f1e:	d402      	bmi.n	8000f26 <_vfiprintf_r+0x1fe>
 8000f20:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000f22:	f7ff fdb7 	bl	8000a94 <__retarget_lock_release_recursive>
 8000f26:	89ab      	ldrh	r3, [r5, #12]
 8000f28:	065b      	lsls	r3, r3, #25
 8000f2a:	f53f af1f 	bmi.w	8000d6c <_vfiprintf_r+0x44>
 8000f2e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000f30:	e71e      	b.n	8000d70 <_vfiprintf_r+0x48>
 8000f32:	ab03      	add	r3, sp, #12
 8000f34:	9300      	str	r3, [sp, #0]
 8000f36:	462a      	mov	r2, r5
 8000f38:	4b05      	ldr	r3, [pc, #20]	@ (8000f50 <_vfiprintf_r+0x228>)
 8000f3a:	a904      	add	r1, sp, #16
 8000f3c:	4630      	mov	r0, r6
 8000f3e:	f000 f879 	bl	8001034 <_printf_i>
 8000f42:	e7e4      	b.n	8000f0e <_vfiprintf_r+0x1e6>
 8000f44:	0800185a 	.word	0x0800185a
 8000f48:	08001864 	.word	0x08001864
 8000f4c:	00000000 	.word	0x00000000
 8000f50:	08000d03 	.word	0x08000d03
 8000f54:	08001860 	.word	0x08001860

08000f58 <_printf_common>:
 8000f58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f5c:	4616      	mov	r6, r2
 8000f5e:	4698      	mov	r8, r3
 8000f60:	688a      	ldr	r2, [r1, #8]
 8000f62:	690b      	ldr	r3, [r1, #16]
 8000f64:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000f68:	4293      	cmp	r3, r2
 8000f6a:	bfb8      	it	lt
 8000f6c:	4613      	movlt	r3, r2
 8000f6e:	6033      	str	r3, [r6, #0]
 8000f70:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000f74:	4607      	mov	r7, r0
 8000f76:	460c      	mov	r4, r1
 8000f78:	b10a      	cbz	r2, 8000f7e <_printf_common+0x26>
 8000f7a:	3301      	adds	r3, #1
 8000f7c:	6033      	str	r3, [r6, #0]
 8000f7e:	6823      	ldr	r3, [r4, #0]
 8000f80:	0699      	lsls	r1, r3, #26
 8000f82:	bf42      	ittt	mi
 8000f84:	6833      	ldrmi	r3, [r6, #0]
 8000f86:	3302      	addmi	r3, #2
 8000f88:	6033      	strmi	r3, [r6, #0]
 8000f8a:	6825      	ldr	r5, [r4, #0]
 8000f8c:	f015 0506 	ands.w	r5, r5, #6
 8000f90:	d106      	bne.n	8000fa0 <_printf_common+0x48>
 8000f92:	f104 0a19 	add.w	sl, r4, #25
 8000f96:	68e3      	ldr	r3, [r4, #12]
 8000f98:	6832      	ldr	r2, [r6, #0]
 8000f9a:	1a9b      	subs	r3, r3, r2
 8000f9c:	42ab      	cmp	r3, r5
 8000f9e:	dc26      	bgt.n	8000fee <_printf_common+0x96>
 8000fa0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000fa4:	6822      	ldr	r2, [r4, #0]
 8000fa6:	3b00      	subs	r3, #0
 8000fa8:	bf18      	it	ne
 8000faa:	2301      	movne	r3, #1
 8000fac:	0692      	lsls	r2, r2, #26
 8000fae:	d42b      	bmi.n	8001008 <_printf_common+0xb0>
 8000fb0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000fb4:	4641      	mov	r1, r8
 8000fb6:	4638      	mov	r0, r7
 8000fb8:	47c8      	blx	r9
 8000fba:	3001      	adds	r0, #1
 8000fbc:	d01e      	beq.n	8000ffc <_printf_common+0xa4>
 8000fbe:	6823      	ldr	r3, [r4, #0]
 8000fc0:	6922      	ldr	r2, [r4, #16]
 8000fc2:	f003 0306 	and.w	r3, r3, #6
 8000fc6:	2b04      	cmp	r3, #4
 8000fc8:	bf02      	ittt	eq
 8000fca:	68e5      	ldreq	r5, [r4, #12]
 8000fcc:	6833      	ldreq	r3, [r6, #0]
 8000fce:	1aed      	subeq	r5, r5, r3
 8000fd0:	68a3      	ldr	r3, [r4, #8]
 8000fd2:	bf0c      	ite	eq
 8000fd4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000fd8:	2500      	movne	r5, #0
 8000fda:	4293      	cmp	r3, r2
 8000fdc:	bfc4      	itt	gt
 8000fde:	1a9b      	subgt	r3, r3, r2
 8000fe0:	18ed      	addgt	r5, r5, r3
 8000fe2:	2600      	movs	r6, #0
 8000fe4:	341a      	adds	r4, #26
 8000fe6:	42b5      	cmp	r5, r6
 8000fe8:	d11a      	bne.n	8001020 <_printf_common+0xc8>
 8000fea:	2000      	movs	r0, #0
 8000fec:	e008      	b.n	8001000 <_printf_common+0xa8>
 8000fee:	2301      	movs	r3, #1
 8000ff0:	4652      	mov	r2, sl
 8000ff2:	4641      	mov	r1, r8
 8000ff4:	4638      	mov	r0, r7
 8000ff6:	47c8      	blx	r9
 8000ff8:	3001      	adds	r0, #1
 8000ffa:	d103      	bne.n	8001004 <_printf_common+0xac>
 8000ffc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001000:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001004:	3501      	adds	r5, #1
 8001006:	e7c6      	b.n	8000f96 <_printf_common+0x3e>
 8001008:	18e1      	adds	r1, r4, r3
 800100a:	1c5a      	adds	r2, r3, #1
 800100c:	2030      	movs	r0, #48	@ 0x30
 800100e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001012:	4422      	add	r2, r4
 8001014:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001018:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800101c:	3302      	adds	r3, #2
 800101e:	e7c7      	b.n	8000fb0 <_printf_common+0x58>
 8001020:	2301      	movs	r3, #1
 8001022:	4622      	mov	r2, r4
 8001024:	4641      	mov	r1, r8
 8001026:	4638      	mov	r0, r7
 8001028:	47c8      	blx	r9
 800102a:	3001      	adds	r0, #1
 800102c:	d0e6      	beq.n	8000ffc <_printf_common+0xa4>
 800102e:	3601      	adds	r6, #1
 8001030:	e7d9      	b.n	8000fe6 <_printf_common+0x8e>
	...

08001034 <_printf_i>:
 8001034:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001038:	7e0f      	ldrb	r7, [r1, #24]
 800103a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800103c:	2f78      	cmp	r7, #120	@ 0x78
 800103e:	4691      	mov	r9, r2
 8001040:	4680      	mov	r8, r0
 8001042:	460c      	mov	r4, r1
 8001044:	469a      	mov	sl, r3
 8001046:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800104a:	d807      	bhi.n	800105c <_printf_i+0x28>
 800104c:	2f62      	cmp	r7, #98	@ 0x62
 800104e:	d80a      	bhi.n	8001066 <_printf_i+0x32>
 8001050:	2f00      	cmp	r7, #0
 8001052:	f000 80d1 	beq.w	80011f8 <_printf_i+0x1c4>
 8001056:	2f58      	cmp	r7, #88	@ 0x58
 8001058:	f000 80b8 	beq.w	80011cc <_printf_i+0x198>
 800105c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001060:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001064:	e03a      	b.n	80010dc <_printf_i+0xa8>
 8001066:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800106a:	2b15      	cmp	r3, #21
 800106c:	d8f6      	bhi.n	800105c <_printf_i+0x28>
 800106e:	a101      	add	r1, pc, #4	@ (adr r1, 8001074 <_printf_i+0x40>)
 8001070:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001074:	080010cd 	.word	0x080010cd
 8001078:	080010e1 	.word	0x080010e1
 800107c:	0800105d 	.word	0x0800105d
 8001080:	0800105d 	.word	0x0800105d
 8001084:	0800105d 	.word	0x0800105d
 8001088:	0800105d 	.word	0x0800105d
 800108c:	080010e1 	.word	0x080010e1
 8001090:	0800105d 	.word	0x0800105d
 8001094:	0800105d 	.word	0x0800105d
 8001098:	0800105d 	.word	0x0800105d
 800109c:	0800105d 	.word	0x0800105d
 80010a0:	080011df 	.word	0x080011df
 80010a4:	0800110b 	.word	0x0800110b
 80010a8:	08001199 	.word	0x08001199
 80010ac:	0800105d 	.word	0x0800105d
 80010b0:	0800105d 	.word	0x0800105d
 80010b4:	08001201 	.word	0x08001201
 80010b8:	0800105d 	.word	0x0800105d
 80010bc:	0800110b 	.word	0x0800110b
 80010c0:	0800105d 	.word	0x0800105d
 80010c4:	0800105d 	.word	0x0800105d
 80010c8:	080011a1 	.word	0x080011a1
 80010cc:	6833      	ldr	r3, [r6, #0]
 80010ce:	1d1a      	adds	r2, r3, #4
 80010d0:	681b      	ldr	r3, [r3, #0]
 80010d2:	6032      	str	r2, [r6, #0]
 80010d4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80010d8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80010dc:	2301      	movs	r3, #1
 80010de:	e09c      	b.n	800121a <_printf_i+0x1e6>
 80010e0:	6833      	ldr	r3, [r6, #0]
 80010e2:	6820      	ldr	r0, [r4, #0]
 80010e4:	1d19      	adds	r1, r3, #4
 80010e6:	6031      	str	r1, [r6, #0]
 80010e8:	0606      	lsls	r6, r0, #24
 80010ea:	d501      	bpl.n	80010f0 <_printf_i+0xbc>
 80010ec:	681d      	ldr	r5, [r3, #0]
 80010ee:	e003      	b.n	80010f8 <_printf_i+0xc4>
 80010f0:	0645      	lsls	r5, r0, #25
 80010f2:	d5fb      	bpl.n	80010ec <_printf_i+0xb8>
 80010f4:	f9b3 5000 	ldrsh.w	r5, [r3]
 80010f8:	2d00      	cmp	r5, #0
 80010fa:	da03      	bge.n	8001104 <_printf_i+0xd0>
 80010fc:	232d      	movs	r3, #45	@ 0x2d
 80010fe:	426d      	negs	r5, r5
 8001100:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001104:	4858      	ldr	r0, [pc, #352]	@ (8001268 <_printf_i+0x234>)
 8001106:	230a      	movs	r3, #10
 8001108:	e011      	b.n	800112e <_printf_i+0xfa>
 800110a:	6821      	ldr	r1, [r4, #0]
 800110c:	6833      	ldr	r3, [r6, #0]
 800110e:	0608      	lsls	r0, r1, #24
 8001110:	f853 5b04 	ldr.w	r5, [r3], #4
 8001114:	d402      	bmi.n	800111c <_printf_i+0xe8>
 8001116:	0649      	lsls	r1, r1, #25
 8001118:	bf48      	it	mi
 800111a:	b2ad      	uxthmi	r5, r5
 800111c:	2f6f      	cmp	r7, #111	@ 0x6f
 800111e:	4852      	ldr	r0, [pc, #328]	@ (8001268 <_printf_i+0x234>)
 8001120:	6033      	str	r3, [r6, #0]
 8001122:	bf14      	ite	ne
 8001124:	230a      	movne	r3, #10
 8001126:	2308      	moveq	r3, #8
 8001128:	2100      	movs	r1, #0
 800112a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800112e:	6866      	ldr	r6, [r4, #4]
 8001130:	60a6      	str	r6, [r4, #8]
 8001132:	2e00      	cmp	r6, #0
 8001134:	db05      	blt.n	8001142 <_printf_i+0x10e>
 8001136:	6821      	ldr	r1, [r4, #0]
 8001138:	432e      	orrs	r6, r5
 800113a:	f021 0104 	bic.w	r1, r1, #4
 800113e:	6021      	str	r1, [r4, #0]
 8001140:	d04b      	beq.n	80011da <_printf_i+0x1a6>
 8001142:	4616      	mov	r6, r2
 8001144:	fbb5 f1f3 	udiv	r1, r5, r3
 8001148:	fb03 5711 	mls	r7, r3, r1, r5
 800114c:	5dc7      	ldrb	r7, [r0, r7]
 800114e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001152:	462f      	mov	r7, r5
 8001154:	42bb      	cmp	r3, r7
 8001156:	460d      	mov	r5, r1
 8001158:	d9f4      	bls.n	8001144 <_printf_i+0x110>
 800115a:	2b08      	cmp	r3, #8
 800115c:	d10b      	bne.n	8001176 <_printf_i+0x142>
 800115e:	6823      	ldr	r3, [r4, #0]
 8001160:	07df      	lsls	r7, r3, #31
 8001162:	d508      	bpl.n	8001176 <_printf_i+0x142>
 8001164:	6923      	ldr	r3, [r4, #16]
 8001166:	6861      	ldr	r1, [r4, #4]
 8001168:	4299      	cmp	r1, r3
 800116a:	bfde      	ittt	le
 800116c:	2330      	movle	r3, #48	@ 0x30
 800116e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001172:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8001176:	1b92      	subs	r2, r2, r6
 8001178:	6122      	str	r2, [r4, #16]
 800117a:	f8cd a000 	str.w	sl, [sp]
 800117e:	464b      	mov	r3, r9
 8001180:	aa03      	add	r2, sp, #12
 8001182:	4621      	mov	r1, r4
 8001184:	4640      	mov	r0, r8
 8001186:	f7ff fee7 	bl	8000f58 <_printf_common>
 800118a:	3001      	adds	r0, #1
 800118c:	d14a      	bne.n	8001224 <_printf_i+0x1f0>
 800118e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001192:	b004      	add	sp, #16
 8001194:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001198:	6823      	ldr	r3, [r4, #0]
 800119a:	f043 0320 	orr.w	r3, r3, #32
 800119e:	6023      	str	r3, [r4, #0]
 80011a0:	4832      	ldr	r0, [pc, #200]	@ (800126c <_printf_i+0x238>)
 80011a2:	2778      	movs	r7, #120	@ 0x78
 80011a4:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80011a8:	6823      	ldr	r3, [r4, #0]
 80011aa:	6831      	ldr	r1, [r6, #0]
 80011ac:	061f      	lsls	r7, r3, #24
 80011ae:	f851 5b04 	ldr.w	r5, [r1], #4
 80011b2:	d402      	bmi.n	80011ba <_printf_i+0x186>
 80011b4:	065f      	lsls	r7, r3, #25
 80011b6:	bf48      	it	mi
 80011b8:	b2ad      	uxthmi	r5, r5
 80011ba:	6031      	str	r1, [r6, #0]
 80011bc:	07d9      	lsls	r1, r3, #31
 80011be:	bf44      	itt	mi
 80011c0:	f043 0320 	orrmi.w	r3, r3, #32
 80011c4:	6023      	strmi	r3, [r4, #0]
 80011c6:	b11d      	cbz	r5, 80011d0 <_printf_i+0x19c>
 80011c8:	2310      	movs	r3, #16
 80011ca:	e7ad      	b.n	8001128 <_printf_i+0xf4>
 80011cc:	4826      	ldr	r0, [pc, #152]	@ (8001268 <_printf_i+0x234>)
 80011ce:	e7e9      	b.n	80011a4 <_printf_i+0x170>
 80011d0:	6823      	ldr	r3, [r4, #0]
 80011d2:	f023 0320 	bic.w	r3, r3, #32
 80011d6:	6023      	str	r3, [r4, #0]
 80011d8:	e7f6      	b.n	80011c8 <_printf_i+0x194>
 80011da:	4616      	mov	r6, r2
 80011dc:	e7bd      	b.n	800115a <_printf_i+0x126>
 80011de:	6833      	ldr	r3, [r6, #0]
 80011e0:	6825      	ldr	r5, [r4, #0]
 80011e2:	6961      	ldr	r1, [r4, #20]
 80011e4:	1d18      	adds	r0, r3, #4
 80011e6:	6030      	str	r0, [r6, #0]
 80011e8:	062e      	lsls	r6, r5, #24
 80011ea:	681b      	ldr	r3, [r3, #0]
 80011ec:	d501      	bpl.n	80011f2 <_printf_i+0x1be>
 80011ee:	6019      	str	r1, [r3, #0]
 80011f0:	e002      	b.n	80011f8 <_printf_i+0x1c4>
 80011f2:	0668      	lsls	r0, r5, #25
 80011f4:	d5fb      	bpl.n	80011ee <_printf_i+0x1ba>
 80011f6:	8019      	strh	r1, [r3, #0]
 80011f8:	2300      	movs	r3, #0
 80011fa:	6123      	str	r3, [r4, #16]
 80011fc:	4616      	mov	r6, r2
 80011fe:	e7bc      	b.n	800117a <_printf_i+0x146>
 8001200:	6833      	ldr	r3, [r6, #0]
 8001202:	1d1a      	adds	r2, r3, #4
 8001204:	6032      	str	r2, [r6, #0]
 8001206:	681e      	ldr	r6, [r3, #0]
 8001208:	6862      	ldr	r2, [r4, #4]
 800120a:	2100      	movs	r1, #0
 800120c:	4630      	mov	r0, r6
 800120e:	f7fe ffff 	bl	8000210 <memchr>
 8001212:	b108      	cbz	r0, 8001218 <_printf_i+0x1e4>
 8001214:	1b80      	subs	r0, r0, r6
 8001216:	6060      	str	r0, [r4, #4]
 8001218:	6863      	ldr	r3, [r4, #4]
 800121a:	6123      	str	r3, [r4, #16]
 800121c:	2300      	movs	r3, #0
 800121e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001222:	e7aa      	b.n	800117a <_printf_i+0x146>
 8001224:	6923      	ldr	r3, [r4, #16]
 8001226:	4632      	mov	r2, r6
 8001228:	4649      	mov	r1, r9
 800122a:	4640      	mov	r0, r8
 800122c:	47d0      	blx	sl
 800122e:	3001      	adds	r0, #1
 8001230:	d0ad      	beq.n	800118e <_printf_i+0x15a>
 8001232:	6823      	ldr	r3, [r4, #0]
 8001234:	079b      	lsls	r3, r3, #30
 8001236:	d413      	bmi.n	8001260 <_printf_i+0x22c>
 8001238:	68e0      	ldr	r0, [r4, #12]
 800123a:	9b03      	ldr	r3, [sp, #12]
 800123c:	4298      	cmp	r0, r3
 800123e:	bfb8      	it	lt
 8001240:	4618      	movlt	r0, r3
 8001242:	e7a6      	b.n	8001192 <_printf_i+0x15e>
 8001244:	2301      	movs	r3, #1
 8001246:	4632      	mov	r2, r6
 8001248:	4649      	mov	r1, r9
 800124a:	4640      	mov	r0, r8
 800124c:	47d0      	blx	sl
 800124e:	3001      	adds	r0, #1
 8001250:	d09d      	beq.n	800118e <_printf_i+0x15a>
 8001252:	3501      	adds	r5, #1
 8001254:	68e3      	ldr	r3, [r4, #12]
 8001256:	9903      	ldr	r1, [sp, #12]
 8001258:	1a5b      	subs	r3, r3, r1
 800125a:	42ab      	cmp	r3, r5
 800125c:	dcf2      	bgt.n	8001244 <_printf_i+0x210>
 800125e:	e7eb      	b.n	8001238 <_printf_i+0x204>
 8001260:	2500      	movs	r5, #0
 8001262:	f104 0619 	add.w	r6, r4, #25
 8001266:	e7f5      	b.n	8001254 <_printf_i+0x220>
 8001268:	0800186b 	.word	0x0800186b
 800126c:	0800187c 	.word	0x0800187c

08001270 <__sflush_r>:
 8001270:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001274:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001278:	0716      	lsls	r6, r2, #28
 800127a:	4605      	mov	r5, r0
 800127c:	460c      	mov	r4, r1
 800127e:	d454      	bmi.n	800132a <__sflush_r+0xba>
 8001280:	684b      	ldr	r3, [r1, #4]
 8001282:	2b00      	cmp	r3, #0
 8001284:	dc02      	bgt.n	800128c <__sflush_r+0x1c>
 8001286:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001288:	2b00      	cmp	r3, #0
 800128a:	dd48      	ble.n	800131e <__sflush_r+0xae>
 800128c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800128e:	2e00      	cmp	r6, #0
 8001290:	d045      	beq.n	800131e <__sflush_r+0xae>
 8001292:	2300      	movs	r3, #0
 8001294:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001298:	682f      	ldr	r7, [r5, #0]
 800129a:	6a21      	ldr	r1, [r4, #32]
 800129c:	602b      	str	r3, [r5, #0]
 800129e:	d030      	beq.n	8001302 <__sflush_r+0x92>
 80012a0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80012a2:	89a3      	ldrh	r3, [r4, #12]
 80012a4:	0759      	lsls	r1, r3, #29
 80012a6:	d505      	bpl.n	80012b4 <__sflush_r+0x44>
 80012a8:	6863      	ldr	r3, [r4, #4]
 80012aa:	1ad2      	subs	r2, r2, r3
 80012ac:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80012ae:	b10b      	cbz	r3, 80012b4 <__sflush_r+0x44>
 80012b0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80012b2:	1ad2      	subs	r2, r2, r3
 80012b4:	2300      	movs	r3, #0
 80012b6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80012b8:	6a21      	ldr	r1, [r4, #32]
 80012ba:	4628      	mov	r0, r5
 80012bc:	47b0      	blx	r6
 80012be:	1c43      	adds	r3, r0, #1
 80012c0:	89a3      	ldrh	r3, [r4, #12]
 80012c2:	d106      	bne.n	80012d2 <__sflush_r+0x62>
 80012c4:	6829      	ldr	r1, [r5, #0]
 80012c6:	291d      	cmp	r1, #29
 80012c8:	d82b      	bhi.n	8001322 <__sflush_r+0xb2>
 80012ca:	4a2a      	ldr	r2, [pc, #168]	@ (8001374 <__sflush_r+0x104>)
 80012cc:	40ca      	lsrs	r2, r1
 80012ce:	07d6      	lsls	r6, r2, #31
 80012d0:	d527      	bpl.n	8001322 <__sflush_r+0xb2>
 80012d2:	2200      	movs	r2, #0
 80012d4:	6062      	str	r2, [r4, #4]
 80012d6:	04d9      	lsls	r1, r3, #19
 80012d8:	6922      	ldr	r2, [r4, #16]
 80012da:	6022      	str	r2, [r4, #0]
 80012dc:	d504      	bpl.n	80012e8 <__sflush_r+0x78>
 80012de:	1c42      	adds	r2, r0, #1
 80012e0:	d101      	bne.n	80012e6 <__sflush_r+0x76>
 80012e2:	682b      	ldr	r3, [r5, #0]
 80012e4:	b903      	cbnz	r3, 80012e8 <__sflush_r+0x78>
 80012e6:	6560      	str	r0, [r4, #84]	@ 0x54
 80012e8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80012ea:	602f      	str	r7, [r5, #0]
 80012ec:	b1b9      	cbz	r1, 800131e <__sflush_r+0xae>
 80012ee:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80012f2:	4299      	cmp	r1, r3
 80012f4:	d002      	beq.n	80012fc <__sflush_r+0x8c>
 80012f6:	4628      	mov	r0, r5
 80012f8:	f7ff fbec 	bl	8000ad4 <_free_r>
 80012fc:	2300      	movs	r3, #0
 80012fe:	6363      	str	r3, [r4, #52]	@ 0x34
 8001300:	e00d      	b.n	800131e <__sflush_r+0xae>
 8001302:	2301      	movs	r3, #1
 8001304:	4628      	mov	r0, r5
 8001306:	47b0      	blx	r6
 8001308:	4602      	mov	r2, r0
 800130a:	1c50      	adds	r0, r2, #1
 800130c:	d1c9      	bne.n	80012a2 <__sflush_r+0x32>
 800130e:	682b      	ldr	r3, [r5, #0]
 8001310:	2b00      	cmp	r3, #0
 8001312:	d0c6      	beq.n	80012a2 <__sflush_r+0x32>
 8001314:	2b1d      	cmp	r3, #29
 8001316:	d001      	beq.n	800131c <__sflush_r+0xac>
 8001318:	2b16      	cmp	r3, #22
 800131a:	d11e      	bne.n	800135a <__sflush_r+0xea>
 800131c:	602f      	str	r7, [r5, #0]
 800131e:	2000      	movs	r0, #0
 8001320:	e022      	b.n	8001368 <__sflush_r+0xf8>
 8001322:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001326:	b21b      	sxth	r3, r3
 8001328:	e01b      	b.n	8001362 <__sflush_r+0xf2>
 800132a:	690f      	ldr	r7, [r1, #16]
 800132c:	2f00      	cmp	r7, #0
 800132e:	d0f6      	beq.n	800131e <__sflush_r+0xae>
 8001330:	0793      	lsls	r3, r2, #30
 8001332:	680e      	ldr	r6, [r1, #0]
 8001334:	bf08      	it	eq
 8001336:	694b      	ldreq	r3, [r1, #20]
 8001338:	600f      	str	r7, [r1, #0]
 800133a:	bf18      	it	ne
 800133c:	2300      	movne	r3, #0
 800133e:	eba6 0807 	sub.w	r8, r6, r7
 8001342:	608b      	str	r3, [r1, #8]
 8001344:	f1b8 0f00 	cmp.w	r8, #0
 8001348:	dde9      	ble.n	800131e <__sflush_r+0xae>
 800134a:	6a21      	ldr	r1, [r4, #32]
 800134c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800134e:	4643      	mov	r3, r8
 8001350:	463a      	mov	r2, r7
 8001352:	4628      	mov	r0, r5
 8001354:	47b0      	blx	r6
 8001356:	2800      	cmp	r0, #0
 8001358:	dc08      	bgt.n	800136c <__sflush_r+0xfc>
 800135a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800135e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001362:	81a3      	strh	r3, [r4, #12]
 8001364:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001368:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800136c:	4407      	add	r7, r0
 800136e:	eba8 0800 	sub.w	r8, r8, r0
 8001372:	e7e7      	b.n	8001344 <__sflush_r+0xd4>
 8001374:	20400001 	.word	0x20400001

08001378 <_fflush_r>:
 8001378:	b538      	push	{r3, r4, r5, lr}
 800137a:	690b      	ldr	r3, [r1, #16]
 800137c:	4605      	mov	r5, r0
 800137e:	460c      	mov	r4, r1
 8001380:	b913      	cbnz	r3, 8001388 <_fflush_r+0x10>
 8001382:	2500      	movs	r5, #0
 8001384:	4628      	mov	r0, r5
 8001386:	bd38      	pop	{r3, r4, r5, pc}
 8001388:	b118      	cbz	r0, 8001392 <_fflush_r+0x1a>
 800138a:	6a03      	ldr	r3, [r0, #32]
 800138c:	b90b      	cbnz	r3, 8001392 <_fflush_r+0x1a>
 800138e:	f7ff fa73 	bl	8000878 <__sinit>
 8001392:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001396:	2b00      	cmp	r3, #0
 8001398:	d0f3      	beq.n	8001382 <_fflush_r+0xa>
 800139a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800139c:	07d0      	lsls	r0, r2, #31
 800139e:	d404      	bmi.n	80013aa <_fflush_r+0x32>
 80013a0:	0599      	lsls	r1, r3, #22
 80013a2:	d402      	bmi.n	80013aa <_fflush_r+0x32>
 80013a4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80013a6:	f7ff fb74 	bl	8000a92 <__retarget_lock_acquire_recursive>
 80013aa:	4628      	mov	r0, r5
 80013ac:	4621      	mov	r1, r4
 80013ae:	f7ff ff5f 	bl	8001270 <__sflush_r>
 80013b2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80013b4:	07da      	lsls	r2, r3, #31
 80013b6:	4605      	mov	r5, r0
 80013b8:	d4e4      	bmi.n	8001384 <_fflush_r+0xc>
 80013ba:	89a3      	ldrh	r3, [r4, #12]
 80013bc:	059b      	lsls	r3, r3, #22
 80013be:	d4e1      	bmi.n	8001384 <_fflush_r+0xc>
 80013c0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80013c2:	f7ff fb67 	bl	8000a94 <__retarget_lock_release_recursive>
 80013c6:	e7dd      	b.n	8001384 <_fflush_r+0xc>

080013c8 <fiprintf>:
 80013c8:	b40e      	push	{r1, r2, r3}
 80013ca:	b503      	push	{r0, r1, lr}
 80013cc:	4601      	mov	r1, r0
 80013ce:	ab03      	add	r3, sp, #12
 80013d0:	4805      	ldr	r0, [pc, #20]	@ (80013e8 <fiprintf+0x20>)
 80013d2:	f853 2b04 	ldr.w	r2, [r3], #4
 80013d6:	6800      	ldr	r0, [r0, #0]
 80013d8:	9301      	str	r3, [sp, #4]
 80013da:	f7ff fca5 	bl	8000d28 <_vfiprintf_r>
 80013de:	b002      	add	sp, #8
 80013e0:	f85d eb04 	ldr.w	lr, [sp], #4
 80013e4:	b003      	add	sp, #12
 80013e6:	4770      	bx	lr
 80013e8:	20000054 	.word	0x20000054

080013ec <_putc_r>:
 80013ec:	b570      	push	{r4, r5, r6, lr}
 80013ee:	460d      	mov	r5, r1
 80013f0:	4614      	mov	r4, r2
 80013f2:	4606      	mov	r6, r0
 80013f4:	b118      	cbz	r0, 80013fe <_putc_r+0x12>
 80013f6:	6a03      	ldr	r3, [r0, #32]
 80013f8:	b90b      	cbnz	r3, 80013fe <_putc_r+0x12>
 80013fa:	f7ff fa3d 	bl	8000878 <__sinit>
 80013fe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001400:	07d8      	lsls	r0, r3, #31
 8001402:	d405      	bmi.n	8001410 <_putc_r+0x24>
 8001404:	89a3      	ldrh	r3, [r4, #12]
 8001406:	0599      	lsls	r1, r3, #22
 8001408:	d402      	bmi.n	8001410 <_putc_r+0x24>
 800140a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800140c:	f7ff fb41 	bl	8000a92 <__retarget_lock_acquire_recursive>
 8001410:	68a3      	ldr	r3, [r4, #8]
 8001412:	3b01      	subs	r3, #1
 8001414:	2b00      	cmp	r3, #0
 8001416:	60a3      	str	r3, [r4, #8]
 8001418:	da05      	bge.n	8001426 <_putc_r+0x3a>
 800141a:	69a2      	ldr	r2, [r4, #24]
 800141c:	4293      	cmp	r3, r2
 800141e:	db12      	blt.n	8001446 <_putc_r+0x5a>
 8001420:	b2eb      	uxtb	r3, r5
 8001422:	2b0a      	cmp	r3, #10
 8001424:	d00f      	beq.n	8001446 <_putc_r+0x5a>
 8001426:	6823      	ldr	r3, [r4, #0]
 8001428:	1c5a      	adds	r2, r3, #1
 800142a:	6022      	str	r2, [r4, #0]
 800142c:	701d      	strb	r5, [r3, #0]
 800142e:	b2ed      	uxtb	r5, r5
 8001430:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001432:	07da      	lsls	r2, r3, #31
 8001434:	d405      	bmi.n	8001442 <_putc_r+0x56>
 8001436:	89a3      	ldrh	r3, [r4, #12]
 8001438:	059b      	lsls	r3, r3, #22
 800143a:	d402      	bmi.n	8001442 <_putc_r+0x56>
 800143c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800143e:	f7ff fb29 	bl	8000a94 <__retarget_lock_release_recursive>
 8001442:	4628      	mov	r0, r5
 8001444:	bd70      	pop	{r4, r5, r6, pc}
 8001446:	4629      	mov	r1, r5
 8001448:	4622      	mov	r2, r4
 800144a:	4630      	mov	r0, r6
 800144c:	f000 f802 	bl	8001454 <__swbuf_r>
 8001450:	4605      	mov	r5, r0
 8001452:	e7ed      	b.n	8001430 <_putc_r+0x44>

08001454 <__swbuf_r>:
 8001454:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001456:	460e      	mov	r6, r1
 8001458:	4614      	mov	r4, r2
 800145a:	4605      	mov	r5, r0
 800145c:	b118      	cbz	r0, 8001466 <__swbuf_r+0x12>
 800145e:	6a03      	ldr	r3, [r0, #32]
 8001460:	b90b      	cbnz	r3, 8001466 <__swbuf_r+0x12>
 8001462:	f7ff fa09 	bl	8000878 <__sinit>
 8001466:	69a3      	ldr	r3, [r4, #24]
 8001468:	60a3      	str	r3, [r4, #8]
 800146a:	89a3      	ldrh	r3, [r4, #12]
 800146c:	071a      	lsls	r2, r3, #28
 800146e:	d501      	bpl.n	8001474 <__swbuf_r+0x20>
 8001470:	6923      	ldr	r3, [r4, #16]
 8001472:	b943      	cbnz	r3, 8001486 <__swbuf_r+0x32>
 8001474:	4621      	mov	r1, r4
 8001476:	4628      	mov	r0, r5
 8001478:	f000 f82a 	bl	80014d0 <__swsetup_r>
 800147c:	b118      	cbz	r0, 8001486 <__swbuf_r+0x32>
 800147e:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8001482:	4638      	mov	r0, r7
 8001484:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001486:	6823      	ldr	r3, [r4, #0]
 8001488:	6922      	ldr	r2, [r4, #16]
 800148a:	1a98      	subs	r0, r3, r2
 800148c:	6963      	ldr	r3, [r4, #20]
 800148e:	b2f6      	uxtb	r6, r6
 8001490:	4283      	cmp	r3, r0
 8001492:	4637      	mov	r7, r6
 8001494:	dc05      	bgt.n	80014a2 <__swbuf_r+0x4e>
 8001496:	4621      	mov	r1, r4
 8001498:	4628      	mov	r0, r5
 800149a:	f7ff ff6d 	bl	8001378 <_fflush_r>
 800149e:	2800      	cmp	r0, #0
 80014a0:	d1ed      	bne.n	800147e <__swbuf_r+0x2a>
 80014a2:	68a3      	ldr	r3, [r4, #8]
 80014a4:	3b01      	subs	r3, #1
 80014a6:	60a3      	str	r3, [r4, #8]
 80014a8:	6823      	ldr	r3, [r4, #0]
 80014aa:	1c5a      	adds	r2, r3, #1
 80014ac:	6022      	str	r2, [r4, #0]
 80014ae:	701e      	strb	r6, [r3, #0]
 80014b0:	6962      	ldr	r2, [r4, #20]
 80014b2:	1c43      	adds	r3, r0, #1
 80014b4:	429a      	cmp	r2, r3
 80014b6:	d004      	beq.n	80014c2 <__swbuf_r+0x6e>
 80014b8:	89a3      	ldrh	r3, [r4, #12]
 80014ba:	07db      	lsls	r3, r3, #31
 80014bc:	d5e1      	bpl.n	8001482 <__swbuf_r+0x2e>
 80014be:	2e0a      	cmp	r6, #10
 80014c0:	d1df      	bne.n	8001482 <__swbuf_r+0x2e>
 80014c2:	4621      	mov	r1, r4
 80014c4:	4628      	mov	r0, r5
 80014c6:	f7ff ff57 	bl	8001378 <_fflush_r>
 80014ca:	2800      	cmp	r0, #0
 80014cc:	d0d9      	beq.n	8001482 <__swbuf_r+0x2e>
 80014ce:	e7d6      	b.n	800147e <__swbuf_r+0x2a>

080014d0 <__swsetup_r>:
 80014d0:	b538      	push	{r3, r4, r5, lr}
 80014d2:	4b29      	ldr	r3, [pc, #164]	@ (8001578 <__swsetup_r+0xa8>)
 80014d4:	4605      	mov	r5, r0
 80014d6:	6818      	ldr	r0, [r3, #0]
 80014d8:	460c      	mov	r4, r1
 80014da:	b118      	cbz	r0, 80014e4 <__swsetup_r+0x14>
 80014dc:	6a03      	ldr	r3, [r0, #32]
 80014de:	b90b      	cbnz	r3, 80014e4 <__swsetup_r+0x14>
 80014e0:	f7ff f9ca 	bl	8000878 <__sinit>
 80014e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80014e8:	0719      	lsls	r1, r3, #28
 80014ea:	d422      	bmi.n	8001532 <__swsetup_r+0x62>
 80014ec:	06da      	lsls	r2, r3, #27
 80014ee:	d407      	bmi.n	8001500 <__swsetup_r+0x30>
 80014f0:	2209      	movs	r2, #9
 80014f2:	602a      	str	r2, [r5, #0]
 80014f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80014f8:	81a3      	strh	r3, [r4, #12]
 80014fa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80014fe:	e033      	b.n	8001568 <__swsetup_r+0x98>
 8001500:	0758      	lsls	r0, r3, #29
 8001502:	d512      	bpl.n	800152a <__swsetup_r+0x5a>
 8001504:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001506:	b141      	cbz	r1, 800151a <__swsetup_r+0x4a>
 8001508:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800150c:	4299      	cmp	r1, r3
 800150e:	d002      	beq.n	8001516 <__swsetup_r+0x46>
 8001510:	4628      	mov	r0, r5
 8001512:	f7ff fadf 	bl	8000ad4 <_free_r>
 8001516:	2300      	movs	r3, #0
 8001518:	6363      	str	r3, [r4, #52]	@ 0x34
 800151a:	89a3      	ldrh	r3, [r4, #12]
 800151c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001520:	81a3      	strh	r3, [r4, #12]
 8001522:	2300      	movs	r3, #0
 8001524:	6063      	str	r3, [r4, #4]
 8001526:	6923      	ldr	r3, [r4, #16]
 8001528:	6023      	str	r3, [r4, #0]
 800152a:	89a3      	ldrh	r3, [r4, #12]
 800152c:	f043 0308 	orr.w	r3, r3, #8
 8001530:	81a3      	strh	r3, [r4, #12]
 8001532:	6923      	ldr	r3, [r4, #16]
 8001534:	b94b      	cbnz	r3, 800154a <__swsetup_r+0x7a>
 8001536:	89a3      	ldrh	r3, [r4, #12]
 8001538:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800153c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001540:	d003      	beq.n	800154a <__swsetup_r+0x7a>
 8001542:	4621      	mov	r1, r4
 8001544:	4628      	mov	r0, r5
 8001546:	f000 f856 	bl	80015f6 <__smakebuf_r>
 800154a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800154e:	f013 0201 	ands.w	r2, r3, #1
 8001552:	d00a      	beq.n	800156a <__swsetup_r+0x9a>
 8001554:	2200      	movs	r2, #0
 8001556:	60a2      	str	r2, [r4, #8]
 8001558:	6962      	ldr	r2, [r4, #20]
 800155a:	4252      	negs	r2, r2
 800155c:	61a2      	str	r2, [r4, #24]
 800155e:	6922      	ldr	r2, [r4, #16]
 8001560:	b942      	cbnz	r2, 8001574 <__swsetup_r+0xa4>
 8001562:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001566:	d1c5      	bne.n	80014f4 <__swsetup_r+0x24>
 8001568:	bd38      	pop	{r3, r4, r5, pc}
 800156a:	0799      	lsls	r1, r3, #30
 800156c:	bf58      	it	pl
 800156e:	6962      	ldrpl	r2, [r4, #20]
 8001570:	60a2      	str	r2, [r4, #8]
 8001572:	e7f4      	b.n	800155e <__swsetup_r+0x8e>
 8001574:	2000      	movs	r0, #0
 8001576:	e7f7      	b.n	8001568 <__swsetup_r+0x98>
 8001578:	20000054 	.word	0x20000054

0800157c <_sbrk_r>:
 800157c:	b538      	push	{r3, r4, r5, lr}
 800157e:	4d06      	ldr	r5, [pc, #24]	@ (8001598 <_sbrk_r+0x1c>)
 8001580:	2300      	movs	r3, #0
 8001582:	4604      	mov	r4, r0
 8001584:	4608      	mov	r0, r1
 8001586:	602b      	str	r3, [r5, #0]
 8001588:	f7ff f84c 	bl	8000624 <_sbrk>
 800158c:	1c43      	adds	r3, r0, #1
 800158e:	d102      	bne.n	8001596 <_sbrk_r+0x1a>
 8001590:	682b      	ldr	r3, [r5, #0]
 8001592:	b103      	cbz	r3, 8001596 <_sbrk_r+0x1a>
 8001594:	6023      	str	r3, [r4, #0]
 8001596:	bd38      	pop	{r3, r4, r5, pc}
 8001598:	20000200 	.word	0x20000200

0800159c <abort>:
 800159c:	b508      	push	{r3, lr}
 800159e:	2006      	movs	r0, #6
 80015a0:	f000 f88e 	bl	80016c0 <raise>
 80015a4:	2001      	movs	r0, #1
 80015a6:	f7fe ffc5 	bl	8000534 <_exit>

080015aa <__swhatbuf_r>:
 80015aa:	b570      	push	{r4, r5, r6, lr}
 80015ac:	460c      	mov	r4, r1
 80015ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80015b2:	2900      	cmp	r1, #0
 80015b4:	b096      	sub	sp, #88	@ 0x58
 80015b6:	4615      	mov	r5, r2
 80015b8:	461e      	mov	r6, r3
 80015ba:	da0d      	bge.n	80015d8 <__swhatbuf_r+0x2e>
 80015bc:	89a3      	ldrh	r3, [r4, #12]
 80015be:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80015c2:	f04f 0100 	mov.w	r1, #0
 80015c6:	bf14      	ite	ne
 80015c8:	2340      	movne	r3, #64	@ 0x40
 80015ca:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80015ce:	2000      	movs	r0, #0
 80015d0:	6031      	str	r1, [r6, #0]
 80015d2:	602b      	str	r3, [r5, #0]
 80015d4:	b016      	add	sp, #88	@ 0x58
 80015d6:	bd70      	pop	{r4, r5, r6, pc}
 80015d8:	466a      	mov	r2, sp
 80015da:	f000 f879 	bl	80016d0 <_fstat_r>
 80015de:	2800      	cmp	r0, #0
 80015e0:	dbec      	blt.n	80015bc <__swhatbuf_r+0x12>
 80015e2:	9901      	ldr	r1, [sp, #4]
 80015e4:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80015e8:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80015ec:	4259      	negs	r1, r3
 80015ee:	4159      	adcs	r1, r3
 80015f0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80015f4:	e7eb      	b.n	80015ce <__swhatbuf_r+0x24>

080015f6 <__smakebuf_r>:
 80015f6:	898b      	ldrh	r3, [r1, #12]
 80015f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80015fa:	079d      	lsls	r5, r3, #30
 80015fc:	4606      	mov	r6, r0
 80015fe:	460c      	mov	r4, r1
 8001600:	d507      	bpl.n	8001612 <__smakebuf_r+0x1c>
 8001602:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001606:	6023      	str	r3, [r4, #0]
 8001608:	6123      	str	r3, [r4, #16]
 800160a:	2301      	movs	r3, #1
 800160c:	6163      	str	r3, [r4, #20]
 800160e:	b003      	add	sp, #12
 8001610:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001612:	ab01      	add	r3, sp, #4
 8001614:	466a      	mov	r2, sp
 8001616:	f7ff ffc8 	bl	80015aa <__swhatbuf_r>
 800161a:	9f00      	ldr	r7, [sp, #0]
 800161c:	4605      	mov	r5, r0
 800161e:	4639      	mov	r1, r7
 8001620:	4630      	mov	r0, r6
 8001622:	f7ff facb 	bl	8000bbc <_malloc_r>
 8001626:	b948      	cbnz	r0, 800163c <__smakebuf_r+0x46>
 8001628:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800162c:	059a      	lsls	r2, r3, #22
 800162e:	d4ee      	bmi.n	800160e <__smakebuf_r+0x18>
 8001630:	f023 0303 	bic.w	r3, r3, #3
 8001634:	f043 0302 	orr.w	r3, r3, #2
 8001638:	81a3      	strh	r3, [r4, #12]
 800163a:	e7e2      	b.n	8001602 <__smakebuf_r+0xc>
 800163c:	89a3      	ldrh	r3, [r4, #12]
 800163e:	6020      	str	r0, [r4, #0]
 8001640:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001644:	81a3      	strh	r3, [r4, #12]
 8001646:	9b01      	ldr	r3, [sp, #4]
 8001648:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800164c:	b15b      	cbz	r3, 8001666 <__smakebuf_r+0x70>
 800164e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001652:	4630      	mov	r0, r6
 8001654:	f000 f84e 	bl	80016f4 <_isatty_r>
 8001658:	b128      	cbz	r0, 8001666 <__smakebuf_r+0x70>
 800165a:	89a3      	ldrh	r3, [r4, #12]
 800165c:	f023 0303 	bic.w	r3, r3, #3
 8001660:	f043 0301 	orr.w	r3, r3, #1
 8001664:	81a3      	strh	r3, [r4, #12]
 8001666:	89a3      	ldrh	r3, [r4, #12]
 8001668:	431d      	orrs	r5, r3
 800166a:	81a5      	strh	r5, [r4, #12]
 800166c:	e7cf      	b.n	800160e <__smakebuf_r+0x18>

0800166e <_raise_r>:
 800166e:	291f      	cmp	r1, #31
 8001670:	b538      	push	{r3, r4, r5, lr}
 8001672:	4605      	mov	r5, r0
 8001674:	460c      	mov	r4, r1
 8001676:	d904      	bls.n	8001682 <_raise_r+0x14>
 8001678:	2316      	movs	r3, #22
 800167a:	6003      	str	r3, [r0, #0]
 800167c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001680:	bd38      	pop	{r3, r4, r5, pc}
 8001682:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8001684:	b112      	cbz	r2, 800168c <_raise_r+0x1e>
 8001686:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800168a:	b94b      	cbnz	r3, 80016a0 <_raise_r+0x32>
 800168c:	4628      	mov	r0, r5
 800168e:	f000 f853 	bl	8001738 <_getpid_r>
 8001692:	4622      	mov	r2, r4
 8001694:	4601      	mov	r1, r0
 8001696:	4628      	mov	r0, r5
 8001698:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800169c:	f000 b83a 	b.w	8001714 <_kill_r>
 80016a0:	2b01      	cmp	r3, #1
 80016a2:	d00a      	beq.n	80016ba <_raise_r+0x4c>
 80016a4:	1c59      	adds	r1, r3, #1
 80016a6:	d103      	bne.n	80016b0 <_raise_r+0x42>
 80016a8:	2316      	movs	r3, #22
 80016aa:	6003      	str	r3, [r0, #0]
 80016ac:	2001      	movs	r0, #1
 80016ae:	e7e7      	b.n	8001680 <_raise_r+0x12>
 80016b0:	2100      	movs	r1, #0
 80016b2:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80016b6:	4620      	mov	r0, r4
 80016b8:	4798      	blx	r3
 80016ba:	2000      	movs	r0, #0
 80016bc:	e7e0      	b.n	8001680 <_raise_r+0x12>
	...

080016c0 <raise>:
 80016c0:	4b02      	ldr	r3, [pc, #8]	@ (80016cc <raise+0xc>)
 80016c2:	4601      	mov	r1, r0
 80016c4:	6818      	ldr	r0, [r3, #0]
 80016c6:	f7ff bfd2 	b.w	800166e <_raise_r>
 80016ca:	bf00      	nop
 80016cc:	20000054 	.word	0x20000054

080016d0 <_fstat_r>:
 80016d0:	b538      	push	{r3, r4, r5, lr}
 80016d2:	4d07      	ldr	r5, [pc, #28]	@ (80016f0 <_fstat_r+0x20>)
 80016d4:	2300      	movs	r3, #0
 80016d6:	4604      	mov	r4, r0
 80016d8:	4608      	mov	r0, r1
 80016da:	4611      	mov	r1, r2
 80016dc:	602b      	str	r3, [r5, #0]
 80016de:	f7fe ff79 	bl	80005d4 <_fstat>
 80016e2:	1c43      	adds	r3, r0, #1
 80016e4:	d102      	bne.n	80016ec <_fstat_r+0x1c>
 80016e6:	682b      	ldr	r3, [r5, #0]
 80016e8:	b103      	cbz	r3, 80016ec <_fstat_r+0x1c>
 80016ea:	6023      	str	r3, [r4, #0]
 80016ec:	bd38      	pop	{r3, r4, r5, pc}
 80016ee:	bf00      	nop
 80016f0:	20000200 	.word	0x20000200

080016f4 <_isatty_r>:
 80016f4:	b538      	push	{r3, r4, r5, lr}
 80016f6:	4d06      	ldr	r5, [pc, #24]	@ (8001710 <_isatty_r+0x1c>)
 80016f8:	2300      	movs	r3, #0
 80016fa:	4604      	mov	r4, r0
 80016fc:	4608      	mov	r0, r1
 80016fe:	602b      	str	r3, [r5, #0]
 8001700:	f7fe ff78 	bl	80005f4 <_isatty>
 8001704:	1c43      	adds	r3, r0, #1
 8001706:	d102      	bne.n	800170e <_isatty_r+0x1a>
 8001708:	682b      	ldr	r3, [r5, #0]
 800170a:	b103      	cbz	r3, 800170e <_isatty_r+0x1a>
 800170c:	6023      	str	r3, [r4, #0]
 800170e:	bd38      	pop	{r3, r4, r5, pc}
 8001710:	20000200 	.word	0x20000200

08001714 <_kill_r>:
 8001714:	b538      	push	{r3, r4, r5, lr}
 8001716:	4d07      	ldr	r5, [pc, #28]	@ (8001734 <_kill_r+0x20>)
 8001718:	2300      	movs	r3, #0
 800171a:	4604      	mov	r4, r0
 800171c:	4608      	mov	r0, r1
 800171e:	4611      	mov	r1, r2
 8001720:	602b      	str	r3, [r5, #0]
 8001722:	f7fe fef7 	bl	8000514 <_kill>
 8001726:	1c43      	adds	r3, r0, #1
 8001728:	d102      	bne.n	8001730 <_kill_r+0x1c>
 800172a:	682b      	ldr	r3, [r5, #0]
 800172c:	b103      	cbz	r3, 8001730 <_kill_r+0x1c>
 800172e:	6023      	str	r3, [r4, #0]
 8001730:	bd38      	pop	{r3, r4, r5, pc}
 8001732:	bf00      	nop
 8001734:	20000200 	.word	0x20000200

08001738 <_getpid_r>:
 8001738:	f7fe bee4 	b.w	8000504 <_getpid>

0800173c <_init>:
 800173c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800173e:	bf00      	nop
 8001740:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001742:	bc08      	pop	{r3}
 8001744:	469e      	mov	lr, r3
 8001746:	4770      	bx	lr

08001748 <_fini>:
 8001748:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800174a:	bf00      	nop
 800174c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800174e:	bc08      	pop	{r3}
 8001750:	469e      	mov	lr, r3
 8001752:	4770      	bx	lr
