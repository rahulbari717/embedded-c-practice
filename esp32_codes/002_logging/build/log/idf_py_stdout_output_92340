Command: ninja flash
[1/12] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[2/12] Linking C static library esp-idf/spiffs/libspiffs.a
[3/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
FAILED: esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj 
/home/lenovo/.espressif/tools/xtensa-esp-elf/esp-14.2.0_20241119/xtensa-esp-elf/bin/xtensa-esp32-elf-gcc -DESP_PLATFORM -DIDF_VER=\"v5.5-dev-2881-ga25e7ab59e\" -DMBEDTLS_CONFIG_FILE=\"mbedtls/esp_config.h\" -DSOC_MMU_PAGE_SIZE=CONFIG_MMU_PAGE_SIZE -DSOC_XTAL_FREQ_MHZ=CONFIG_XTAL_FREQ -DUNITY_INCLUDE_CONFIG_H -D_GLIBCXX_HAVE_POSIX_SEMAPHORE -D_GLIBCXX_USE_POSIX_SEMAPHORE -D_GNU_SOURCE -D_POSIX_READER_WRITER_LOCKS -I/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/build/config -I/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main -I/home/lenovo/esp/esp-idf/components/newlib/platform_include -I/home/lenovo/esp/esp-idf/components/freertos/config/include -I/home/lenovo/esp/esp-idf/components/freertos/config/include/freertos -I/home/lenovo/esp/esp-idf/components/freertos/config/xtensa/include -I/home/lenovo/esp/esp-idf/components/freertos/FreeRTOS-Kernel/include -I/home/lenovo/esp/esp-idf/components/freertos/FreeRTOS-Kernel/portable/xtensa/include -I/home/lenovo/esp/esp-idf/components/freertos/FreeRTOS-Kernel/portable/xtensa/include/freertos -I/home/lenovo/esp/esp-idf/components/freertos/esp_additions/include -I/home/lenovo/esp/esp-idf/components/esp_hw_support/include -I/home/lenovo/esp/esp-idf/components/esp_hw_support/include/soc -I/home/lenovo/esp/esp-idf/components/esp_hw_support/include/soc/esp32 -I/home/lenovo/esp/esp-idf/components/esp_hw_support/dma/include -I/home/lenovo/esp/esp-idf/components/esp_hw_support/ldo/include -I/home/lenovo/esp/esp-idf/components/esp_hw_support/debug_probe/include -I/home/lenovo/esp/esp-idf/components/esp_hw_support/mspi_timing_tuning/include -I/home/lenovo/esp/esp-idf/components/esp_hw_support/power_supply/include -I/home/lenovo/esp/esp-idf/components/esp_hw_support/port/esp32/. -I/home/lenovo/esp/esp-idf/components/esp_hw_support/port/esp32/include -I/home/lenovo/esp/esp-idf/components/heap/include -I/home/lenovo/esp/esp-idf/components/heap/tlsf -I/home/lenovo/esp/esp-idf/components/log/include -I/home/lenovo/esp/esp-idf/components/soc/include -I/home/lenovo/esp/esp-idf/components/soc/esp32 -I/home/lenovo/esp/esp-idf/components/soc/esp32/include -I/home/lenovo/esp/esp-idf/components/soc/esp32/register -I/home/lenovo/esp/esp-idf/components/hal/platform_port/include -I/home/lenovo/esp/esp-idf/components/hal/esp32/include -I/home/lenovo/esp/esp-idf/components/hal/include -I/home/lenovo/esp/esp-idf/components/esp_rom/include -I/home/lenovo/esp/esp-idf/components/esp_rom/esp32/include -I/home/lenovo/esp/esp-idf/components/esp_rom/esp32/include/esp32 -I/home/lenovo/esp/esp-idf/components/esp_rom/esp32 -I/home/lenovo/esp/esp-idf/components/esp_common/include -I/home/lenovo/esp/esp-idf/components/esp_system/include -I/home/lenovo/esp/esp-idf/components/esp_system/port/soc -I/home/lenovo/esp/esp-idf/components/esp_system/port/include/private -I/home/lenovo/esp/esp-idf/components/xtensa/esp32/include -I/home/lenovo/esp/esp-idf/components/xtensa/include -I/home/lenovo/esp/esp-idf/components/xtensa/deprecated_include -I/home/lenovo/esp/esp-idf/components/lwip/include -I/home/lenovo/esp/esp-idf/components/lwip/include/apps -I/home/lenovo/esp/esp-idf/components/lwip/include/apps/sntp -I/home/lenovo/esp/esp-idf/components/lwip/lwip/src/include -I/home/lenovo/esp/esp-idf/components/lwip/port/include -I/home/lenovo/esp/esp-idf/components/lwip/port/freertos/include -I/home/lenovo/esp/esp-idf/components/lwip/port/esp32xx/include -I/home/lenovo/esp/esp-idf/components/lwip/port/esp32xx/include/arch -I/home/lenovo/esp/esp-idf/components/lwip/port/esp32xx/include/sys -I/home/lenovo/esp/esp-idf/components/esp_driver_gpio/include -I/home/lenovo/esp/esp-idf/components/esp_pm/include -I/home/lenovo/esp/esp-idf/components/mbedtls/port/include -I/home/lenovo/esp/esp-idf/components/mbedtls/mbedtls/include -I/home/lenovo/esp/esp-idf/components/mbedtls/mbedtls/library -I/home/lenovo/esp/esp-idf/components/mbedtls/esp_crt_bundle/include -I/home/lenovo/esp/esp-idf/components/mbedtls/mbedtls/3rdparty/everest/include -I/home/lenovo/esp/esp-idf/components/mbedtls/mbedtls/3rdparty/p256-m -I/home/lenovo/esp/esp-idf/components/mbedtls/mbedtls/3rdparty/p256-m/p256-m -I/home/lenovo/esp/esp-idf/components/esp_app_format/include -I/home/lenovo/esp/esp-idf/components/esp_bootloader_format/include -I/home/lenovo/esp/esp-idf/components/app_update/include -I/home/lenovo/esp/esp-idf/components/bootloader_support/include -I/home/lenovo/esp/esp-idf/components/bootloader_support/bootloader_flash/include -I/home/lenovo/esp/esp-idf/components/esp_partition/include -I/home/lenovo/esp/esp-idf/components/efuse/include -I/home/lenovo/esp/esp-idf/components/efuse/esp32/include -I/home/lenovo/esp/esp-idf/components/esp_mm/include -I/home/lenovo/esp/esp-idf/components/spi_flash/include -I/home/lenovo/esp/esp-idf/components/esp_security/include -I/home/lenovo/esp/esp-idf/components/pthread/include -I/home/lenovo/esp/esp-idf/components/esp_timer/include -I/home/lenovo/esp/esp-idf/components/esp_driver_gptimer/include -I/home/lenovo/esp/esp-idf/components/esp_ringbuf/include -I/home/lenovo/esp/esp-idf/components/esp_driver_uart/include -I/home/lenovo/esp/esp-idf/components/vfs/include -I/home/lenovo/esp/esp-idf/components/app_trace/include -I/home/lenovo/esp/esp-idf/components/esp_event/include -I/home/lenovo/esp/esp-idf/components/nvs_flash/include -I/home/lenovo/esp/esp-idf/components/esp_phy/include -I/home/lenovo/esp/esp-idf/components/esp_phy/esp32/include -I/home/lenovo/esp/esp-idf/components/esp_driver_usb_serial_jtag/include -I/home/lenovo/esp/esp-idf/components/esp_vfs_console/include -I/home/lenovo/esp/esp-idf/components/esp_netif/include -I/home/lenovo/esp/esp-idf/components/wpa_supplicant/include -I/home/lenovo/esp/esp-idf/components/wpa_supplicant/port/include -I/home/lenovo/esp/esp-idf/components/wpa_supplicant/esp_supplicant/include -I/home/lenovo/esp/esp-idf/components/esp_coex/include -I/home/lenovo/esp/esp-idf/components/esp_wifi/include -I/home/lenovo/esp/esp-idf/components/esp_wifi/include/local -I/home/lenovo/esp/esp-idf/components/esp_wifi/wifi_apps/include -I/home/lenovo/esp/esp-idf/components/esp_wifi/wifi_apps/nan_app/include -I/home/lenovo/esp/esp-idf/components/esp_driver_spi/include -I/home/lenovo/esp/esp-idf/components/esp_gdbstub/include -I/home/lenovo/esp/esp-idf/components/unity/include -I/home/lenovo/esp/esp-idf/components/unity/unity/src -I/home/lenovo/esp/esp-idf/components/cmock/CMock/src -I/home/lenovo/esp/esp-idf/components/console -I/home/lenovo/esp/esp-idf/components/esp_driver_pcnt/include -I/home/lenovo/esp/esp-idf/components/esp_driver_mcpwm/include -I/home/lenovo/esp/esp-idf/components/esp_driver_ana_cmpr/include -I/home/lenovo/esp/esp-idf/components/esp_driver_i2s/include -I/home/lenovo/esp/esp-idf/components/sdmmc/include -I/home/lenovo/esp/esp-idf/components/esp_driver_sdmmc/include -I/home/lenovo/esp/esp-idf/components/esp_driver_sdspi/include -I/home/lenovo/esp/esp-idf/components/esp_driver_sdio/include -I/home/lenovo/esp/esp-idf/components/esp_driver_dac/include -I/home/lenovo/esp/esp-idf/components/esp_driver_rmt/include -I/home/lenovo/esp/esp-idf/components/esp_driver_tsens/include -I/home/lenovo/esp/esp-idf/components/esp_driver_sdm/include -I/home/lenovo/esp/esp-idf/components/esp_driver_i2c/include -I/home/lenovo/esp/esp-idf/components/esp_driver_ledc/include -I/home/lenovo/esp/esp-idf/components/esp_driver_parlio/include -I/home/lenovo/esp/esp-idf/components/driver/deprecated -I/home/lenovo/esp/esp-idf/components/driver/i2c/include -I/home/lenovo/esp/esp-idf/components/driver/touch_sensor/include -I/home/lenovo/esp/esp-idf/components/driver/twai/include -I/home/lenovo/esp/esp-idf/components/driver/touch_sensor/esp32/include -I/home/lenovo/esp/esp-idf/components/http_parser -I/home/lenovo/esp/esp-idf/components/esp-tls -I/home/lenovo/esp/esp-idf/components/esp-tls/esp-tls-crypto -I/home/lenovo/esp/esp-idf/components/esp_adc/include -I/home/lenovo/esp/esp-idf/components/esp_adc/interface -I/home/lenovo/esp/esp-idf/components/esp_adc/esp32/include -I/home/lenovo/esp/esp-idf/components/esp_adc/deprecated/include -I/home/lenovo/esp/esp-idf/components/esp_driver_bitscrambler/include -I/home/lenovo/esp/esp-idf/components/esp_driver_isp/include -I/home/lenovo/esp/esp-idf/components/esp_driver_cam/include -I/home/lenovo/esp/esp-idf/components/esp_driver_cam/interface -I/home/lenovo/esp/esp-idf/components/esp_psram/include -I/home/lenovo/esp/esp-idf/components/esp_driver_jpeg/include -I/home/lenovo/esp/esp-idf/components/esp_driver_ppa/include -I/home/lenovo/esp/esp-idf/components/esp_driver_touch_sens/include -I/home/lenovo/esp/esp-idf/components/esp_driver_touch_sens/hw_ver1/include -I/home/lenovo/esp/esp-idf/components/esp_driver_twai/include -I/home/lenovo/esp/esp-idf/components/esp_eth/include -I/home/lenovo/esp/esp-idf/components/esp_hid/include -I/home/lenovo/esp/esp-idf/components/tcp_transport/include -I/home/lenovo/esp/esp-idf/components/esp_http_client/include -I/home/lenovo/esp/esp-idf/components/esp_http_server/include -I/home/lenovo/esp/esp-idf/components/esp_https_ota/include -I/home/lenovo/esp/esp-idf/components/esp_https_server/include -I/home/lenovo/esp/esp-idf/components/esp_lcd/include -I/home/lenovo/esp/esp-idf/components/esp_lcd/interface -I/home/lenovo/esp/esp-idf/components/protobuf-c/protobuf-c -I/home/lenovo/esp/esp-idf/components/protocomm/include/common -I/home/lenovo/esp/esp-idf/components/protocomm/include/security -I/home/lenovo/esp/esp-idf/components/protocomm/include/transports -I/home/lenovo/esp/esp-idf/components/protocomm/include/crypto/srp6a -I/home/lenovo/esp/esp-idf/components/protocomm/proto-c -I/home/lenovo/esp/esp-idf/components/esp_local_ctrl/include -I/home/lenovo/esp/esp-idf/components/espcoredump/include -I/home/lenovo/esp/esp-idf/components/espcoredump/include/port/xtensa -I/home/lenovo/esp/esp-idf/components/wear_levelling/include -I/home/lenovo/esp/esp-idf/components/fatfs/diskio -I/home/lenovo/esp/esp-idf/components/fatfs/src -I/home/lenovo/esp/esp-idf/components/fatfs/vfs -I/home/lenovo/esp/esp-idf/components/idf_test/include -I/home/lenovo/esp/esp-idf/components/idf_test/include/esp32 -I/home/lenovo/esp/esp-idf/components/ieee802154/include -I/home/lenovo/esp/esp-idf/components/json/cJSON -I/home/lenovo/esp/esp-idf/components/mqtt/esp-mqtt/include -I/home/lenovo/esp/esp-idf/components/nvs_sec_provider/include -I/home/lenovo/esp/esp-idf/components/perfmon/include -I/home/lenovo/esp/esp-idf/components/rt/include -I/home/lenovo/esp/esp-idf/components/spiffs/include -I/home/lenovo/esp/esp-idf/components/wifi_provisioning/include -mlongcalls -Wno-frame-address  -fno-builtin-memcpy -fno-builtin-memset -fno-builtin-bzero -fno-builtin-stpcpy -fno-builtin-strncpy -fdiagnostics-color=always -ffunction-sections -fdata-sections -Wall -Werror=all -Wno-error=unused-function -Wno-error=unused-variable -Wno-error=unused-but-set-variable -Wno-error=deprecated-declarations -Wextra -Wno-error=extra -Wno-unused-parameter -Wno-sign-compare -Wno-enum-conversion -gdwarf-4 -ggdb -Og -fno-shrink-wrap -fmacro-prefix-map=/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging=. -fmacro-prefix-map=/home/lenovo/esp/esp-idf=/IDF -fstrict-volatile-bitfields -fno-jump-tables -fno-tree-switch-conversion -std=gnu17 -Wno-old-style-declaration -MD -MT esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj -MF esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj.d -o esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj -c /home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:4:8: error: type defaults to 'int' in declaration of 'tag' [-Wimplicit-int]
    4 | const *tag = "main";
      |        ^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:4:14: error: initialization of 'const int *' from incompatible pointer type 'char *' [-Wincompatible-pointer-types]
    4 | const *tag = "main";
      |              ^~~~~~
In file included from /home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:2:
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c: In function 'app_main':
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:10:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   10 |     ESP_LOGI(tag, "This is an Information...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:218:111: note: in definition of macro 'ESP_LOG_LEVEL'
  218 |         if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_ERROR)        { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_ERROR),   tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:125:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  125 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:10:5: note: in expansion of macro 'ESP_LOGI'
   10 |     ESP_LOGI(tag, "This is an Information...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:10:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   10 |     ESP_LOGI(tag, "This is an Information...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:219:111: note: in definition of macro 'ESP_LOG_LEVEL'
  219 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_WARN)    { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_WARN),    tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:125:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  125 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:10:5: note: in expansion of macro 'ESP_LOGI'
   10 |     ESP_LOGI(tag, "This is an Information...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:10:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   10 |     ESP_LOGI(tag, "This is an Information...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:220:111: note: in definition of macro 'ESP_LOG_LEVEL'
  220 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_DEBUG)   { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_DEBUG),   tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:125:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  125 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:10:5: note: in expansion of macro 'ESP_LOGI'
   10 |     ESP_LOGI(tag, "This is an Information...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:10:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   10 |     ESP_LOGI(tag, "This is an Information...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:221:111: note: in definition of macro 'ESP_LOG_LEVEL'
  221 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_VERBOSE) { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_VERBOSE), tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:125:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  125 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:10:5: note: in expansion of macro 'ESP_LOGI'
   10 |     ESP_LOGI(tag, "This is an Information...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:10:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   10 |     ESP_LOGI(tag, "This is an Information...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:222:111: note: in definition of macro 'ESP_LOG_LEVEL'
  222 |         else                                                  { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_INFO),    tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:125:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  125 | #define ESP_LOGI(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_INFO, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:10:5: note: in expansion of macro 'ESP_LOGI'
   10 |     ESP_LOGI(tag, "This is an Information...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:11:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   11 |     ESP_LOGW(tag, "This is an Warning ...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:218:111: note: in definition of macro 'ESP_LOG_LEVEL'
  218 |         if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_ERROR)        { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_ERROR),   tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:123:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  123 | #define ESP_LOGW(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_WARN, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:11:5: note: in expansion of macro 'ESP_LOGW'
   11 |     ESP_LOGW(tag, "This is an Warning ...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:11:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   11 |     ESP_LOGW(tag, "This is an Warning ...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:219:111: note: in definition of macro 'ESP_LOG_LEVEL'
  219 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_WARN)    { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_WARN),    tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:123:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  123 | #define ESP_LOGW(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_WARN, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:11:5: note: in expansion of macro 'ESP_LOGW'
   11 |     ESP_LOGW(tag, "This is an Warning ...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:11:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   11 |     ESP_LOGW(tag, "This is an Warning ...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:220:111: note: in definition of macro 'ESP_LOG_LEVEL'
  220 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_DEBUG)   { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_DEBUG),   tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:123:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  123 | #define ESP_LOGW(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_WARN, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:11:5: note: in expansion of macro 'ESP_LOGW'
   11 |     ESP_LOGW(tag, "This is an Warning ...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:11:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   11 |     ESP_LOGW(tag, "This is an Warning ...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:221:111: note: in definition of macro 'ESP_LOG_LEVEL'
  221 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_VERBOSE) { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_VERBOSE), tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:123:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  123 | #define ESP_LOGW(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_WARN, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:11:5: note: in expansion of macro 'ESP_LOGW'
   11 |     ESP_LOGW(tag, "This is an Warning ...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:11:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   11 |     ESP_LOGW(tag, "This is an Warning ...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:222:111: note: in definition of macro 'ESP_LOG_LEVEL'
  222 |         else                                                  { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_INFO),    tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:123:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  123 | #define ESP_LOGW(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_WARN, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:11:5: note: in expansion of macro 'ESP_LOGW'
   11 |     ESP_LOGW(tag, "This is an Warning ...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:12:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   12 |     ESP_LOGD(tag, "This is an Debug...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:218:111: note: in definition of macro 'ESP_LOG_LEVEL'
  218 |         if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_ERROR)        { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_ERROR),   tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:127:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  127 | #define ESP_LOGD(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_DEBUG, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:12:5: note: in expansion of macro 'ESP_LOGD'
   12 |     ESP_LOGD(tag, "This is an Debug...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:12:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   12 |     ESP_LOGD(tag, "This is an Debug...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:219:111: note: in definition of macro 'ESP_LOG_LEVEL'
  219 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_WARN)    { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_WARN),    tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:127:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  127 | #define ESP_LOGD(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_DEBUG, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:12:5: note: in expansion of macro 'ESP_LOGD'
   12 |     ESP_LOGD(tag, "This is an Debug...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:12:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   12 |     ESP_LOGD(tag, "This is an Debug...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:220:111: note: in definition of macro 'ESP_LOG_LEVEL'
  220 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_DEBUG)   { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_DEBUG),   tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:127:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  127 | #define ESP_LOGD(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_DEBUG, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:12:5: note: in expansion of macro 'ESP_LOGD'
   12 |     ESP_LOGD(tag, "This is an Debug...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:12:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   12 |     ESP_LOGD(tag, "This is an Debug...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:221:111: note: in definition of macro 'ESP_LOG_LEVEL'
  221 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_VERBOSE) { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_VERBOSE), tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:127:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  127 | #define ESP_LOGD(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_DEBUG, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:12:5: note: in expansion of macro 'ESP_LOGD'
   12 |     ESP_LOGD(tag, "This is an Debug...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:12:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   12 |     ESP_LOGD(tag, "This is an Debug...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:222:111: note: in definition of macro 'ESP_LOG_LEVEL'
  222 |         else                                                  { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_INFO),    tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:127:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  127 | #define ESP_LOGD(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_DEBUG, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:12:5: note: in expansion of macro 'ESP_LOGD'
   12 |     ESP_LOGD(tag, "This is an Debug...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:13:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   13 |     ESP_LOGE(tag, "This is an Error...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:218:111: note: in definition of macro 'ESP_LOG_LEVEL'
  218 |         if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_ERROR)        { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_ERROR),   tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:121:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  121 | #define ESP_LOGE(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_ERROR, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:13:5: note: in expansion of macro 'ESP_LOGE'
   13 |     ESP_LOGE(tag, "This is an Error...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:13:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   13 |     ESP_LOGE(tag, "This is an Error...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:219:111: note: in definition of macro 'ESP_LOG_LEVEL'
  219 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_WARN)    { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_WARN),    tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:121:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  121 | #define ESP_LOGE(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_ERROR, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:13:5: note: in expansion of macro 'ESP_LOGE'
   13 |     ESP_LOGE(tag, "This is an Error...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:13:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   13 |     ESP_LOGE(tag, "This is an Error...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:220:111: note: in definition of macro 'ESP_LOG_LEVEL'
  220 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_DEBUG)   { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_DEBUG),   tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:121:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  121 | #define ESP_LOGE(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_ERROR, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:13:5: note: in expansion of macro 'ESP_LOGE'
   13 |     ESP_LOGE(tag, "This is an Error...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:13:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   13 |     ESP_LOGE(tag, "This is an Error...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:221:111: note: in definition of macro 'ESP_LOG_LEVEL'
  221 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_VERBOSE) { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_VERBOSE), tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:121:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  121 | #define ESP_LOGE(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_ERROR, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:13:5: note: in expansion of macro 'ESP_LOGE'
   13 |     ESP_LOGE(tag, "This is an Error...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:13:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   13 |     ESP_LOGE(tag, "This is an Error...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:222:111: note: in definition of macro 'ESP_LOG_LEVEL'
  222 |         else                                                  { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_INFO),    tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:121:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  121 | #define ESP_LOGE(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_ERROR, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:13:5: note: in expansion of macro 'ESP_LOGE'
   13 |     ESP_LOGE(tag, "This is an Error...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:14:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   14 |     ESP_LOGV(tag, "This is an Verbose...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:218:111: note: in definition of macro 'ESP_LOG_LEVEL'
  218 |         if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_ERROR)        { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_ERROR),   tag, LOG_FORMAT(E, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:129:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  129 | #define ESP_LOGV(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_VERBOSE, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:14:5: note: in expansion of macro 'ESP_LOGV'
   14 |     ESP_LOGV(tag, "This is an Verbose...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:14:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   14 |     ESP_LOGV(tag, "This is an Verbose...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:219:111: note: in definition of macro 'ESP_LOG_LEVEL'
  219 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_WARN)    { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_WARN),    tag, LOG_FORMAT(W, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:129:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  129 | #define ESP_LOGV(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_VERBOSE, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:14:5: note: in expansion of macro 'ESP_LOGV'
   14 |     ESP_LOGV(tag, "This is an Verbose...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:14:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   14 |     ESP_LOGV(tag, "This is an Verbose...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:220:111: note: in definition of macro 'ESP_LOG_LEVEL'
  220 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_DEBUG)   { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_DEBUG),   tag, LOG_FORMAT(D, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:129:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  129 | #define ESP_LOGV(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_VERBOSE, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:14:5: note: in expansion of macro 'ESP_LOGV'
   14 |     ESP_LOGV(tag, "This is an Verbose...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:14:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   14 |     ESP_LOGV(tag, "This is an Verbose...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:221:111: note: in definition of macro 'ESP_LOG_LEVEL'
  221 |         else if (ESP_LOG_GET_LEVEL(configs)==ESP_LOG_VERBOSE) { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_VERBOSE), tag, LOG_FORMAT(V, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:129:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  129 | #define ESP_LOGV(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_VERBOSE, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:14:5: note: in expansion of macro 'ESP_LOGV'
   14 |     ESP_LOGV(tag, "This is an Verbose...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:14:14: error: passing argument 2 of 'esp_log' from incompatible pointer type [-Wincompatible-pointer-types]
   14 |     ESP_LOGV(tag, "This is an Verbose...");
      |              ^~~
      |              |
      |              const int *
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:222:111: note: in definition of macro 'ESP_LOG_LEVEL'
  222 |         else                                                  { esp_log(ESP_LOG_CONFIG_INIT(ESP_LOG_INFO),    tag, LOG_FORMAT(I, format), esp_log_timestamp(), tag, ##__VA_ARGS__); } \
      |                                                                                                               ^~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:129:41: note: in expansion of macro 'ESP_LOG_LEVEL_LOCAL'
  129 | #define ESP_LOGV(tag, format, ...) do { ESP_LOG_LEVEL_LOCAL(ESP_LOG_VERBOSE, tag, format, ##__VA_ARGS__); } while(0)
      |                                         ^~~~~~~~~~~~~~~~~~~
/home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/main/main.c:14:5: note: in expansion of macro 'ESP_LOGV'
   14 |     ESP_LOGV(tag, "This is an Verbose...");
      |     ^~~~~~~~
/home/lenovo/esp/esp-idf/components/log/include/esp_log.h:36:51: note: expected 'const char *' but argument is of type 'const int *'
   36 | void esp_log(esp_log_config_t config, const char* tag, const char* format, ...);
      |                                       ~~~~~~~~~~~~^~~
[4/12] Performing build step for 'bootloader'
[1/1] cd /home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/build/bootloader/esp-idf/esptool_py && /home/lenovo/.espressif/python_env/idf5.5_py3.12_env/bin/python /home/lenovo/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/lenovo/Documents/embedded-c-practice/esp32_codes/002_logging/build/bootloader/bootloader.bin
Bootloader binary size 0x6650 bytes. 0x9b0 bytes (9%) free.
ninja: build stopped: subcommand failed.
