/*
 * task_handler.c
 *
 *  Created on: Apr 5, 2025
 *      Author: Rahul Bari
 */

#include "main.h"

void menu_task(void *param)
{
	while(1){

	}
}

void led_task(void *param)
{
	while(1){

	}
}

void rtc_task(void *param)
{
	while(1){

	}
}

void print_task(void *param)
{
	while(1){

	}
}

void cmd_task(void *param)
{
	BaseType_t ret;
	command_t cmd;

	while(1){
		/* Implement notify wait */
		ret = xTaskNotifyWait(0, 0, NULL, PortMAX_DELAY);
		if(ret == pdTRUE){
			/* process the user data (commnad) stored in input data queue */
			process_command(&cmd);
		}
	}
}

void process_command(command_t *cmd)
{
	extract_command(cmd);

	switch(curr_state)
	{
		case sMainMenu :
			/* Notify menu task with command */
			xTaskNotify(handle_menu_task, (uint32) cmd, eSetValueWithOverwrite);

		break;

		case sLedEffect :
			/* Notify Led task with command */
			xTaskNotify(handle_led_task, (uint32) cmd, eSetValueWithOverwrite);
				break;

		case sRtcMenu :
					/* Todo */
				break;

		case sRtcTimeConfig :
					/* Todo */
				break;

		case sRtcDateConfig :
							/* Todo */
						break;

		case sRtcReport :
							/* Todo */
						break;

	}

}


