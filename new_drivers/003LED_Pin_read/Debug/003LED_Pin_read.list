
003LED_Pin_read.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012c8  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000054  08001498  08001498  00002498  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014ec  080014ec  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  080014ec  080014ec  000024ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080014f4  080014f4  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014f4  080014f4  000024f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080014f8  080014f8  000024f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  080014fc  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  2000005c  08001558  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  08001558  000031cc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009b7  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000368  00000000  00000000  00003a43  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000120  00000000  00000000  00003db0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000c5  00000000  00000000  00003ed0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002d7a  00000000  00000000  00003f95  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001245  00000000  00000000  00006d0f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009ab4  00000000  00000000  00007f54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00011a08  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b70  00000000  00000000  00011a4c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000070  00000000  00000000  000125bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001480 	.word	0x08001480

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	08001480 	.word	0x08001480

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <delay>:
#define LED_PIN             5   // PA5 for LED
#define BUTTON_PIN          0   // PA0 for User Button
#define DELAY_TIME          1000000

void delay(volatile uint32_t time)
{
 80002b0:	b480      	push	{r7}
 80002b2:	b083      	sub	sp, #12
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
    while (time--);
 80002b8:	bf00      	nop
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	1e5a      	subs	r2, r3, #1
 80002be:	607a      	str	r2, [r7, #4]
 80002c0:	2b00      	cmp	r3, #0
 80002c2:	d1fa      	bne.n	80002ba <delay+0xa>
}
 80002c4:	bf00      	nop
 80002c6:	bf00      	nop
 80002c8:	370c      	adds	r7, #12
 80002ca:	46bd      	mov	sp, r7
 80002cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d0:	4770      	bx	lr
	...

080002d4 <main>:

int main(void)
{
 80002d4:	b580      	push	{r7, lr}
 80002d6:	b082      	sub	sp, #8
 80002d8:	af00      	add	r7, sp, #0
    static uint8_t count = 0;

    // 1. Enable GPIOA clock (bit 0 of RCC_AHB1ENR)
    RCC_AHB1ENR |= (1 << 0);
 80002da:	4b20      	ldr	r3, [pc, #128]	@ (800035c <main+0x88>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	4a1f      	ldr	r2, [pc, #124]	@ (800035c <main+0x88>)
 80002e0:	f043 0301 	orr.w	r3, r3, #1
 80002e4:	6013      	str	r3, [r2, #0]

    // 2. Configure PA5 as Output
    GPIOA_MODER &= ~(3 << (LED_PIN * 2));   // Clear mode bits
 80002e6:	4b1e      	ldr	r3, [pc, #120]	@ (8000360 <main+0x8c>)
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	4a1d      	ldr	r2, [pc, #116]	@ (8000360 <main+0x8c>)
 80002ec:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 80002f0:	6013      	str	r3, [r2, #0]
    GPIOA_MODER |=  (1 << (LED_PIN * 2));   // Set as output (01)
 80002f2:	4b1b      	ldr	r3, [pc, #108]	@ (8000360 <main+0x8c>)
 80002f4:	681b      	ldr	r3, [r3, #0]
 80002f6:	4a1a      	ldr	r2, [pc, #104]	@ (8000360 <main+0x8c>)
 80002f8:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80002fc:	6013      	str	r3, [r2, #0]

    // 3. Configure PA0 as Input (default is input after reset, but we make sure)
    GPIOA_MODER &= ~(3 << (BUTTON_PIN * 2)); // 00: Input mode
 80002fe:	4b18      	ldr	r3, [pc, #96]	@ (8000360 <main+0x8c>)
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	4a17      	ldr	r2, [pc, #92]	@ (8000360 <main+0x8c>)
 8000304:	f023 0303 	bic.w	r3, r3, #3
 8000308:	6013      	str	r3, [r2, #0]

    while (1)
    {
        // 4. Read PA0 button pin state
        uint8_t volatile pinStatus = (GPIOA_IDR >> BUTTON_PIN) & 0x01;
 800030a:	4b16      	ldr	r3, [pc, #88]	@ (8000364 <main+0x90>)
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	b2db      	uxtb	r3, r3
 8000310:	f003 0301 	and.w	r3, r3, #1
 8000314:	b2db      	uxtb	r3, r3
 8000316:	71fb      	strb	r3, [r7, #7]

        if (pinStatus == 0) // Button pressed (active low)
 8000318:	79fb      	ldrb	r3, [r7, #7]
 800031a:	b2db      	uxtb	r3, r3
 800031c:	2b00      	cmp	r3, #0
 800031e:	d110      	bne.n	8000342 <main+0x6e>
        {
            GPIOA_ODR |= (1 << LED_PIN); // LED ON
 8000320:	4b11      	ldr	r3, [pc, #68]	@ (8000368 <main+0x94>)
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	4a10      	ldr	r2, [pc, #64]	@ (8000368 <main+0x94>)
 8000326:	f043 0320 	orr.w	r3, r3, #32
 800032a:	6013      	str	r3, [r2, #0]
            printf("LED ON  | Count ==> %d\n", count++);
 800032c:	4b0f      	ldr	r3, [pc, #60]	@ (800036c <main+0x98>)
 800032e:	781b      	ldrb	r3, [r3, #0]
 8000330:	1c5a      	adds	r2, r3, #1
 8000332:	b2d1      	uxtb	r1, r2
 8000334:	4a0d      	ldr	r2, [pc, #52]	@ (800036c <main+0x98>)
 8000336:	7011      	strb	r1, [r2, #0]
 8000338:	4619      	mov	r1, r3
 800033a:	480d      	ldr	r0, [pc, #52]	@ (8000370 <main+0x9c>)
 800033c:	f000 f9d6 	bl	80006ec <iprintf>
 8000340:	e008      	b.n	8000354 <main+0x80>
        }
        else
        {
            GPIOA_ODR &= ~(1 << LED_PIN); // LED OFF
 8000342:	4b09      	ldr	r3, [pc, #36]	@ (8000368 <main+0x94>)
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	4a08      	ldr	r2, [pc, #32]	@ (8000368 <main+0x94>)
 8000348:	f023 0320 	bic.w	r3, r3, #32
 800034c:	6013      	str	r3, [r2, #0]
            printf("LED OFF\n");
 800034e:	4809      	ldr	r0, [pc, #36]	@ (8000374 <main+0xa0>)
 8000350:	f000 fa34 	bl	80007bc <puts>
        }

        delay(DELAY_TIME);
 8000354:	4808      	ldr	r0, [pc, #32]	@ (8000378 <main+0xa4>)
 8000356:	f7ff ffab 	bl	80002b0 <delay>
    {
 800035a:	e7d6      	b.n	800030a <main+0x36>
 800035c:	40023830 	.word	0x40023830
 8000360:	40020000 	.word	0x40020000
 8000364:	40020010 	.word	0x40020010
 8000368:	40020014 	.word	0x40020014
 800036c:	20000078 	.word	0x20000078
 8000370:	08001498 	.word	0x08001498
 8000374:	080014b0 	.word	0x080014b0
 8000378:	000f4240 	.word	0x000f4240

0800037c <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 800037c:	b480      	push	{r7}
 800037e:	b083      	sub	sp, #12
 8000380:	af00      	add	r7, sp, #0
 8000382:	4603      	mov	r3, r0
 8000384:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000386:	4b0f      	ldr	r3, [pc, #60]	@ (80003c4 <ITM_SendChar+0x48>)
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	4a0e      	ldr	r2, [pc, #56]	@ (80003c4 <ITM_SendChar+0x48>)
 800038c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000390:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000392:	4b0d      	ldr	r3, [pc, #52]	@ (80003c8 <ITM_SendChar+0x4c>)
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	4a0c      	ldr	r2, [pc, #48]	@ (80003c8 <ITM_SendChar+0x4c>)
 8000398:	f043 0301 	orr.w	r3, r3, #1
 800039c:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800039e:	bf00      	nop
 80003a0:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	f003 0301 	and.w	r3, r3, #1
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	d0f8      	beq.n	80003a0 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003ae:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80003b2:	79fb      	ldrb	r3, [r7, #7]
 80003b4:	6013      	str	r3, [r2, #0]
}
 80003b6:	bf00      	nop
 80003b8:	370c      	adds	r7, #12
 80003ba:	46bd      	mov	sp, r7
 80003bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c0:	4770      	bx	lr
 80003c2:	bf00      	nop
 80003c4:	e000edfc 	.word	0xe000edfc
 80003c8:	e0000e00 	.word	0xe0000e00

080003cc <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003cc:	b580      	push	{r7, lr}
 80003ce:	b086      	sub	sp, #24
 80003d0:	af00      	add	r7, sp, #0
 80003d2:	60f8      	str	r0, [r7, #12]
 80003d4:	60b9      	str	r1, [r7, #8]
 80003d6:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003d8:	2300      	movs	r3, #0
 80003da:	617b      	str	r3, [r7, #20]
 80003dc:	e00a      	b.n	80003f4 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80003de:	f3af 8000 	nop.w
 80003e2:	4601      	mov	r1, r0
 80003e4:	68bb      	ldr	r3, [r7, #8]
 80003e6:	1c5a      	adds	r2, r3, #1
 80003e8:	60ba      	str	r2, [r7, #8]
 80003ea:	b2ca      	uxtb	r2, r1
 80003ec:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ee:	697b      	ldr	r3, [r7, #20]
 80003f0:	3301      	adds	r3, #1
 80003f2:	617b      	str	r3, [r7, #20]
 80003f4:	697a      	ldr	r2, [r7, #20]
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	429a      	cmp	r2, r3
 80003fa:	dbf0      	blt.n	80003de <_read+0x12>
	}

return len;
 80003fc:	687b      	ldr	r3, [r7, #4]
}
 80003fe:	4618      	mov	r0, r3
 8000400:	3718      	adds	r7, #24
 8000402:	46bd      	mov	sp, r7
 8000404:	bd80      	pop	{r7, pc}

08000406 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000406:	b580      	push	{r7, lr}
 8000408:	b086      	sub	sp, #24
 800040a:	af00      	add	r7, sp, #0
 800040c:	60f8      	str	r0, [r7, #12]
 800040e:	60b9      	str	r1, [r7, #8]
 8000410:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000412:	2300      	movs	r3, #0
 8000414:	617b      	str	r3, [r7, #20]
 8000416:	e009      	b.n	800042c <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000418:	68bb      	ldr	r3, [r7, #8]
 800041a:	1c5a      	adds	r2, r3, #1
 800041c:	60ba      	str	r2, [r7, #8]
 800041e:	781b      	ldrb	r3, [r3, #0]
 8000420:	4618      	mov	r0, r3
 8000422:	f7ff ffab 	bl	800037c <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000426:	697b      	ldr	r3, [r7, #20]
 8000428:	3301      	adds	r3, #1
 800042a:	617b      	str	r3, [r7, #20]
 800042c:	697a      	ldr	r2, [r7, #20]
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	429a      	cmp	r2, r3
 8000432:	dbf1      	blt.n	8000418 <_write+0x12>
	}
	return len;
 8000434:	687b      	ldr	r3, [r7, #4]
}
 8000436:	4618      	mov	r0, r3
 8000438:	3718      	adds	r7, #24
 800043a:	46bd      	mov	sp, r7
 800043c:	bd80      	pop	{r7, pc}

0800043e <_close>:

int _close(int file)
{
 800043e:	b480      	push	{r7}
 8000440:	b083      	sub	sp, #12
 8000442:	af00      	add	r7, sp, #0
 8000444:	6078      	str	r0, [r7, #4]
	return -1;
 8000446:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 800044a:	4618      	mov	r0, r3
 800044c:	370c      	adds	r7, #12
 800044e:	46bd      	mov	sp, r7
 8000450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000454:	4770      	bx	lr

08000456 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000456:	b480      	push	{r7}
 8000458:	b083      	sub	sp, #12
 800045a:	af00      	add	r7, sp, #0
 800045c:	6078      	str	r0, [r7, #4]
 800045e:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000460:	683b      	ldr	r3, [r7, #0]
 8000462:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000466:	605a      	str	r2, [r3, #4]
	return 0;
 8000468:	2300      	movs	r3, #0
}
 800046a:	4618      	mov	r0, r3
 800046c:	370c      	adds	r7, #12
 800046e:	46bd      	mov	sp, r7
 8000470:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000474:	4770      	bx	lr

08000476 <_isatty>:

int _isatty(int file)
{
 8000476:	b480      	push	{r7}
 8000478:	b083      	sub	sp, #12
 800047a:	af00      	add	r7, sp, #0
 800047c:	6078      	str	r0, [r7, #4]
	return 1;
 800047e:	2301      	movs	r3, #1
}
 8000480:	4618      	mov	r0, r3
 8000482:	370c      	adds	r7, #12
 8000484:	46bd      	mov	sp, r7
 8000486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800048a:	4770      	bx	lr

0800048c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800048c:	b480      	push	{r7}
 800048e:	b085      	sub	sp, #20
 8000490:	af00      	add	r7, sp, #0
 8000492:	60f8      	str	r0, [r7, #12]
 8000494:	60b9      	str	r1, [r7, #8]
 8000496:	607a      	str	r2, [r7, #4]
	return 0;
 8000498:	2300      	movs	r3, #0
}
 800049a:	4618      	mov	r0, r3
 800049c:	3714      	adds	r7, #20
 800049e:	46bd      	mov	sp, r7
 80004a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a4:	4770      	bx	lr
	...

080004a8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004a8:	b580      	push	{r7, lr}
 80004aa:	b086      	sub	sp, #24
 80004ac:	af00      	add	r7, sp, #0
 80004ae:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004b0:	4a14      	ldr	r2, [pc, #80]	@ (8000504 <_sbrk+0x5c>)
 80004b2:	4b15      	ldr	r3, [pc, #84]	@ (8000508 <_sbrk+0x60>)
 80004b4:	1ad3      	subs	r3, r2, r3
 80004b6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004b8:	697b      	ldr	r3, [r7, #20]
 80004ba:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004bc:	4b13      	ldr	r3, [pc, #76]	@ (800050c <_sbrk+0x64>)
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	2b00      	cmp	r3, #0
 80004c2:	d102      	bne.n	80004ca <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004c4:	4b11      	ldr	r3, [pc, #68]	@ (800050c <_sbrk+0x64>)
 80004c6:	4a12      	ldr	r2, [pc, #72]	@ (8000510 <_sbrk+0x68>)
 80004c8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004ca:	4b10      	ldr	r3, [pc, #64]	@ (800050c <_sbrk+0x64>)
 80004cc:	681a      	ldr	r2, [r3, #0]
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	4413      	add	r3, r2
 80004d2:	693a      	ldr	r2, [r7, #16]
 80004d4:	429a      	cmp	r2, r3
 80004d6:	d207      	bcs.n	80004e8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004d8:	f000 fa9e 	bl	8000a18 <__errno>
 80004dc:	4603      	mov	r3, r0
 80004de:	220c      	movs	r2, #12
 80004e0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004e2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80004e6:	e009      	b.n	80004fc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004e8:	4b08      	ldr	r3, [pc, #32]	@ (800050c <_sbrk+0x64>)
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004ee:	4b07      	ldr	r3, [pc, #28]	@ (800050c <_sbrk+0x64>)
 80004f0:	681a      	ldr	r2, [r3, #0]
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	4413      	add	r3, r2
 80004f6:	4a05      	ldr	r2, [pc, #20]	@ (800050c <_sbrk+0x64>)
 80004f8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004fa:	68fb      	ldr	r3, [r7, #12]
}
 80004fc:	4618      	mov	r0, r3
 80004fe:	3718      	adds	r7, #24
 8000500:	46bd      	mov	sp, r7
 8000502:	bd80      	pop	{r7, pc}
 8000504:	20020000 	.word	0x20020000
 8000508:	00000400 	.word	0x00000400
 800050c:	2000007c 	.word	0x2000007c
 8000510:	200001d0 	.word	0x200001d0

08000514 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000514:	480d      	ldr	r0, [pc, #52]	@ (800054c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000516:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000518:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800051c:	480c      	ldr	r0, [pc, #48]	@ (8000550 <LoopForever+0x6>)
  ldr r1, =_edata
 800051e:	490d      	ldr	r1, [pc, #52]	@ (8000554 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000520:	4a0d      	ldr	r2, [pc, #52]	@ (8000558 <LoopForever+0xe>)
  movs r3, #0
 8000522:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000524:	e002      	b.n	800052c <LoopCopyDataInit>

08000526 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000526:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000528:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800052a:	3304      	adds	r3, #4

0800052c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800052c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800052e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000530:	d3f9      	bcc.n	8000526 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000532:	4a0a      	ldr	r2, [pc, #40]	@ (800055c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000534:	4c0a      	ldr	r4, [pc, #40]	@ (8000560 <LoopForever+0x16>)
  movs r3, #0
 8000536:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000538:	e001      	b.n	800053e <LoopFillZerobss>

0800053a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800053a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800053c:	3204      	adds	r2, #4

0800053e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800053e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000540:	d3fb      	bcc.n	800053a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000542:	f000 fa6f 	bl	8000a24 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000546:	f7ff fec5 	bl	80002d4 <main>

0800054a <LoopForever>:

LoopForever:
  b LoopForever
 800054a:	e7fe      	b.n	800054a <LoopForever>
  ldr   r0, =_estack
 800054c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000550:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000554:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000558:	080014fc 	.word	0x080014fc
  ldr r2, =_sbss
 800055c:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000560:	200001cc 	.word	0x200001cc

08000564 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000564:	e7fe      	b.n	8000564 <ADC_IRQHandler>
	...

08000568 <std>:
 8000568:	2300      	movs	r3, #0
 800056a:	b510      	push	{r4, lr}
 800056c:	4604      	mov	r4, r0
 800056e:	e9c0 3300 	strd	r3, r3, [r0]
 8000572:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000576:	6083      	str	r3, [r0, #8]
 8000578:	8181      	strh	r1, [r0, #12]
 800057a:	6643      	str	r3, [r0, #100]	@ 0x64
 800057c:	81c2      	strh	r2, [r0, #14]
 800057e:	6183      	str	r3, [r0, #24]
 8000580:	4619      	mov	r1, r3
 8000582:	2208      	movs	r2, #8
 8000584:	305c      	adds	r0, #92	@ 0x5c
 8000586:	f000 f9f9 	bl	800097c <memset>
 800058a:	4b0d      	ldr	r3, [pc, #52]	@ (80005c0 <std+0x58>)
 800058c:	6263      	str	r3, [r4, #36]	@ 0x24
 800058e:	4b0d      	ldr	r3, [pc, #52]	@ (80005c4 <std+0x5c>)
 8000590:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000592:	4b0d      	ldr	r3, [pc, #52]	@ (80005c8 <std+0x60>)
 8000594:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000596:	4b0d      	ldr	r3, [pc, #52]	@ (80005cc <std+0x64>)
 8000598:	6323      	str	r3, [r4, #48]	@ 0x30
 800059a:	4b0d      	ldr	r3, [pc, #52]	@ (80005d0 <std+0x68>)
 800059c:	6224      	str	r4, [r4, #32]
 800059e:	429c      	cmp	r4, r3
 80005a0:	d006      	beq.n	80005b0 <std+0x48>
 80005a2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80005a6:	4294      	cmp	r4, r2
 80005a8:	d002      	beq.n	80005b0 <std+0x48>
 80005aa:	33d0      	adds	r3, #208	@ 0xd0
 80005ac:	429c      	cmp	r4, r3
 80005ae:	d105      	bne.n	80005bc <std+0x54>
 80005b0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80005b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005b8:	f000 ba58 	b.w	8000a6c <__retarget_lock_init_recursive>
 80005bc:	bd10      	pop	{r4, pc}
 80005be:	bf00      	nop
 80005c0:	080007cd 	.word	0x080007cd
 80005c4:	080007ef 	.word	0x080007ef
 80005c8:	08000827 	.word	0x08000827
 80005cc:	0800084b 	.word	0x0800084b
 80005d0:	20000080 	.word	0x20000080

080005d4 <stdio_exit_handler>:
 80005d4:	4a02      	ldr	r2, [pc, #8]	@ (80005e0 <stdio_exit_handler+0xc>)
 80005d6:	4903      	ldr	r1, [pc, #12]	@ (80005e4 <stdio_exit_handler+0x10>)
 80005d8:	4803      	ldr	r0, [pc, #12]	@ (80005e8 <stdio_exit_handler+0x14>)
 80005da:	f000 b869 	b.w	80006b0 <_fwalk_sglue>
 80005de:	bf00      	nop
 80005e0:	20000000 	.word	0x20000000
 80005e4:	08001309 	.word	0x08001309
 80005e8:	20000010 	.word	0x20000010

080005ec <cleanup_stdio>:
 80005ec:	6841      	ldr	r1, [r0, #4]
 80005ee:	4b0c      	ldr	r3, [pc, #48]	@ (8000620 <cleanup_stdio+0x34>)
 80005f0:	4299      	cmp	r1, r3
 80005f2:	b510      	push	{r4, lr}
 80005f4:	4604      	mov	r4, r0
 80005f6:	d001      	beq.n	80005fc <cleanup_stdio+0x10>
 80005f8:	f000 fe86 	bl	8001308 <_fflush_r>
 80005fc:	68a1      	ldr	r1, [r4, #8]
 80005fe:	4b09      	ldr	r3, [pc, #36]	@ (8000624 <cleanup_stdio+0x38>)
 8000600:	4299      	cmp	r1, r3
 8000602:	d002      	beq.n	800060a <cleanup_stdio+0x1e>
 8000604:	4620      	mov	r0, r4
 8000606:	f000 fe7f 	bl	8001308 <_fflush_r>
 800060a:	68e1      	ldr	r1, [r4, #12]
 800060c:	4b06      	ldr	r3, [pc, #24]	@ (8000628 <cleanup_stdio+0x3c>)
 800060e:	4299      	cmp	r1, r3
 8000610:	d004      	beq.n	800061c <cleanup_stdio+0x30>
 8000612:	4620      	mov	r0, r4
 8000614:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000618:	f000 be76 	b.w	8001308 <_fflush_r>
 800061c:	bd10      	pop	{r4, pc}
 800061e:	bf00      	nop
 8000620:	20000080 	.word	0x20000080
 8000624:	200000e8 	.word	0x200000e8
 8000628:	20000150 	.word	0x20000150

0800062c <global_stdio_init.part.0>:
 800062c:	b510      	push	{r4, lr}
 800062e:	4b0b      	ldr	r3, [pc, #44]	@ (800065c <global_stdio_init.part.0+0x30>)
 8000630:	4c0b      	ldr	r4, [pc, #44]	@ (8000660 <global_stdio_init.part.0+0x34>)
 8000632:	4a0c      	ldr	r2, [pc, #48]	@ (8000664 <global_stdio_init.part.0+0x38>)
 8000634:	601a      	str	r2, [r3, #0]
 8000636:	4620      	mov	r0, r4
 8000638:	2200      	movs	r2, #0
 800063a:	2104      	movs	r1, #4
 800063c:	f7ff ff94 	bl	8000568 <std>
 8000640:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000644:	2201      	movs	r2, #1
 8000646:	2109      	movs	r1, #9
 8000648:	f7ff ff8e 	bl	8000568 <std>
 800064c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000650:	2202      	movs	r2, #2
 8000652:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000656:	2112      	movs	r1, #18
 8000658:	f7ff bf86 	b.w	8000568 <std>
 800065c:	200001b8 	.word	0x200001b8
 8000660:	20000080 	.word	0x20000080
 8000664:	080005d5 	.word	0x080005d5

08000668 <__sfp_lock_acquire>:
 8000668:	4801      	ldr	r0, [pc, #4]	@ (8000670 <__sfp_lock_acquire+0x8>)
 800066a:	f000 ba00 	b.w	8000a6e <__retarget_lock_acquire_recursive>
 800066e:	bf00      	nop
 8000670:	200001c1 	.word	0x200001c1

08000674 <__sfp_lock_release>:
 8000674:	4801      	ldr	r0, [pc, #4]	@ (800067c <__sfp_lock_release+0x8>)
 8000676:	f000 b9fb 	b.w	8000a70 <__retarget_lock_release_recursive>
 800067a:	bf00      	nop
 800067c:	200001c1 	.word	0x200001c1

08000680 <__sinit>:
 8000680:	b510      	push	{r4, lr}
 8000682:	4604      	mov	r4, r0
 8000684:	f7ff fff0 	bl	8000668 <__sfp_lock_acquire>
 8000688:	6a23      	ldr	r3, [r4, #32]
 800068a:	b11b      	cbz	r3, 8000694 <__sinit+0x14>
 800068c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000690:	f7ff bff0 	b.w	8000674 <__sfp_lock_release>
 8000694:	4b04      	ldr	r3, [pc, #16]	@ (80006a8 <__sinit+0x28>)
 8000696:	6223      	str	r3, [r4, #32]
 8000698:	4b04      	ldr	r3, [pc, #16]	@ (80006ac <__sinit+0x2c>)
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	2b00      	cmp	r3, #0
 800069e:	d1f5      	bne.n	800068c <__sinit+0xc>
 80006a0:	f7ff ffc4 	bl	800062c <global_stdio_init.part.0>
 80006a4:	e7f2      	b.n	800068c <__sinit+0xc>
 80006a6:	bf00      	nop
 80006a8:	080005ed 	.word	0x080005ed
 80006ac:	200001b8 	.word	0x200001b8

080006b0 <_fwalk_sglue>:
 80006b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006b4:	4607      	mov	r7, r0
 80006b6:	4688      	mov	r8, r1
 80006b8:	4614      	mov	r4, r2
 80006ba:	2600      	movs	r6, #0
 80006bc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006c0:	f1b9 0901 	subs.w	r9, r9, #1
 80006c4:	d505      	bpl.n	80006d2 <_fwalk_sglue+0x22>
 80006c6:	6824      	ldr	r4, [r4, #0]
 80006c8:	2c00      	cmp	r4, #0
 80006ca:	d1f7      	bne.n	80006bc <_fwalk_sglue+0xc>
 80006cc:	4630      	mov	r0, r6
 80006ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006d2:	89ab      	ldrh	r3, [r5, #12]
 80006d4:	2b01      	cmp	r3, #1
 80006d6:	d907      	bls.n	80006e8 <_fwalk_sglue+0x38>
 80006d8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006dc:	3301      	adds	r3, #1
 80006de:	d003      	beq.n	80006e8 <_fwalk_sglue+0x38>
 80006e0:	4629      	mov	r1, r5
 80006e2:	4638      	mov	r0, r7
 80006e4:	47c0      	blx	r8
 80006e6:	4306      	orrs	r6, r0
 80006e8:	3568      	adds	r5, #104	@ 0x68
 80006ea:	e7e9      	b.n	80006c0 <_fwalk_sglue+0x10>

080006ec <iprintf>:
 80006ec:	b40f      	push	{r0, r1, r2, r3}
 80006ee:	b507      	push	{r0, r1, r2, lr}
 80006f0:	4906      	ldr	r1, [pc, #24]	@ (800070c <iprintf+0x20>)
 80006f2:	ab04      	add	r3, sp, #16
 80006f4:	6808      	ldr	r0, [r1, #0]
 80006f6:	f853 2b04 	ldr.w	r2, [r3], #4
 80006fa:	6881      	ldr	r1, [r0, #8]
 80006fc:	9301      	str	r3, [sp, #4]
 80006fe:	f000 fadb 	bl	8000cb8 <_vfiprintf_r>
 8000702:	b003      	add	sp, #12
 8000704:	f85d eb04 	ldr.w	lr, [sp], #4
 8000708:	b004      	add	sp, #16
 800070a:	4770      	bx	lr
 800070c:	2000000c 	.word	0x2000000c

08000710 <_puts_r>:
 8000710:	6a03      	ldr	r3, [r0, #32]
 8000712:	b570      	push	{r4, r5, r6, lr}
 8000714:	6884      	ldr	r4, [r0, #8]
 8000716:	4605      	mov	r5, r0
 8000718:	460e      	mov	r6, r1
 800071a:	b90b      	cbnz	r3, 8000720 <_puts_r+0x10>
 800071c:	f7ff ffb0 	bl	8000680 <__sinit>
 8000720:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000722:	07db      	lsls	r3, r3, #31
 8000724:	d405      	bmi.n	8000732 <_puts_r+0x22>
 8000726:	89a3      	ldrh	r3, [r4, #12]
 8000728:	0598      	lsls	r0, r3, #22
 800072a:	d402      	bmi.n	8000732 <_puts_r+0x22>
 800072c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800072e:	f000 f99e 	bl	8000a6e <__retarget_lock_acquire_recursive>
 8000732:	89a3      	ldrh	r3, [r4, #12]
 8000734:	0719      	lsls	r1, r3, #28
 8000736:	d502      	bpl.n	800073e <_puts_r+0x2e>
 8000738:	6923      	ldr	r3, [r4, #16]
 800073a:	2b00      	cmp	r3, #0
 800073c:	d135      	bne.n	80007aa <_puts_r+0x9a>
 800073e:	4621      	mov	r1, r4
 8000740:	4628      	mov	r0, r5
 8000742:	f000 f8c5 	bl	80008d0 <__swsetup_r>
 8000746:	b380      	cbz	r0, 80007aa <_puts_r+0x9a>
 8000748:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 800074c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800074e:	07da      	lsls	r2, r3, #31
 8000750:	d405      	bmi.n	800075e <_puts_r+0x4e>
 8000752:	89a3      	ldrh	r3, [r4, #12]
 8000754:	059b      	lsls	r3, r3, #22
 8000756:	d402      	bmi.n	800075e <_puts_r+0x4e>
 8000758:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800075a:	f000 f989 	bl	8000a70 <__retarget_lock_release_recursive>
 800075e:	4628      	mov	r0, r5
 8000760:	bd70      	pop	{r4, r5, r6, pc}
 8000762:	2b00      	cmp	r3, #0
 8000764:	da04      	bge.n	8000770 <_puts_r+0x60>
 8000766:	69a2      	ldr	r2, [r4, #24]
 8000768:	429a      	cmp	r2, r3
 800076a:	dc17      	bgt.n	800079c <_puts_r+0x8c>
 800076c:	290a      	cmp	r1, #10
 800076e:	d015      	beq.n	800079c <_puts_r+0x8c>
 8000770:	6823      	ldr	r3, [r4, #0]
 8000772:	1c5a      	adds	r2, r3, #1
 8000774:	6022      	str	r2, [r4, #0]
 8000776:	7019      	strb	r1, [r3, #0]
 8000778:	68a3      	ldr	r3, [r4, #8]
 800077a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800077e:	3b01      	subs	r3, #1
 8000780:	60a3      	str	r3, [r4, #8]
 8000782:	2900      	cmp	r1, #0
 8000784:	d1ed      	bne.n	8000762 <_puts_r+0x52>
 8000786:	2b00      	cmp	r3, #0
 8000788:	da11      	bge.n	80007ae <_puts_r+0x9e>
 800078a:	4622      	mov	r2, r4
 800078c:	210a      	movs	r1, #10
 800078e:	4628      	mov	r0, r5
 8000790:	f000 f85f 	bl	8000852 <__swbuf_r>
 8000794:	3001      	adds	r0, #1
 8000796:	d0d7      	beq.n	8000748 <_puts_r+0x38>
 8000798:	250a      	movs	r5, #10
 800079a:	e7d7      	b.n	800074c <_puts_r+0x3c>
 800079c:	4622      	mov	r2, r4
 800079e:	4628      	mov	r0, r5
 80007a0:	f000 f857 	bl	8000852 <__swbuf_r>
 80007a4:	3001      	adds	r0, #1
 80007a6:	d1e7      	bne.n	8000778 <_puts_r+0x68>
 80007a8:	e7ce      	b.n	8000748 <_puts_r+0x38>
 80007aa:	3e01      	subs	r6, #1
 80007ac:	e7e4      	b.n	8000778 <_puts_r+0x68>
 80007ae:	6823      	ldr	r3, [r4, #0]
 80007b0:	1c5a      	adds	r2, r3, #1
 80007b2:	6022      	str	r2, [r4, #0]
 80007b4:	220a      	movs	r2, #10
 80007b6:	701a      	strb	r2, [r3, #0]
 80007b8:	e7ee      	b.n	8000798 <_puts_r+0x88>
	...

080007bc <puts>:
 80007bc:	4b02      	ldr	r3, [pc, #8]	@ (80007c8 <puts+0xc>)
 80007be:	4601      	mov	r1, r0
 80007c0:	6818      	ldr	r0, [r3, #0]
 80007c2:	f7ff bfa5 	b.w	8000710 <_puts_r>
 80007c6:	bf00      	nop
 80007c8:	2000000c 	.word	0x2000000c

080007cc <__sread>:
 80007cc:	b510      	push	{r4, lr}
 80007ce:	460c      	mov	r4, r1
 80007d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007d4:	f000 f8fc 	bl	80009d0 <_read_r>
 80007d8:	2800      	cmp	r0, #0
 80007da:	bfab      	itete	ge
 80007dc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80007de:	89a3      	ldrhlt	r3, [r4, #12]
 80007e0:	181b      	addge	r3, r3, r0
 80007e2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80007e6:	bfac      	ite	ge
 80007e8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80007ea:	81a3      	strhlt	r3, [r4, #12]
 80007ec:	bd10      	pop	{r4, pc}

080007ee <__swrite>:
 80007ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007f2:	461f      	mov	r7, r3
 80007f4:	898b      	ldrh	r3, [r1, #12]
 80007f6:	05db      	lsls	r3, r3, #23
 80007f8:	4605      	mov	r5, r0
 80007fa:	460c      	mov	r4, r1
 80007fc:	4616      	mov	r6, r2
 80007fe:	d505      	bpl.n	800080c <__swrite+0x1e>
 8000800:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000804:	2302      	movs	r3, #2
 8000806:	2200      	movs	r2, #0
 8000808:	f000 f8d0 	bl	80009ac <_lseek_r>
 800080c:	89a3      	ldrh	r3, [r4, #12]
 800080e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000812:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000816:	81a3      	strh	r3, [r4, #12]
 8000818:	4632      	mov	r2, r6
 800081a:	463b      	mov	r3, r7
 800081c:	4628      	mov	r0, r5
 800081e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000822:	f000 b8e7 	b.w	80009f4 <_write_r>

08000826 <__sseek>:
 8000826:	b510      	push	{r4, lr}
 8000828:	460c      	mov	r4, r1
 800082a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800082e:	f000 f8bd 	bl	80009ac <_lseek_r>
 8000832:	1c43      	adds	r3, r0, #1
 8000834:	89a3      	ldrh	r3, [r4, #12]
 8000836:	bf15      	itete	ne
 8000838:	6560      	strne	r0, [r4, #84]	@ 0x54
 800083a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800083e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000842:	81a3      	strheq	r3, [r4, #12]
 8000844:	bf18      	it	ne
 8000846:	81a3      	strhne	r3, [r4, #12]
 8000848:	bd10      	pop	{r4, pc}

0800084a <__sclose>:
 800084a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800084e:	f000 b89d 	b.w	800098c <_close_r>

08000852 <__swbuf_r>:
 8000852:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000854:	460e      	mov	r6, r1
 8000856:	4614      	mov	r4, r2
 8000858:	4605      	mov	r5, r0
 800085a:	b118      	cbz	r0, 8000864 <__swbuf_r+0x12>
 800085c:	6a03      	ldr	r3, [r0, #32]
 800085e:	b90b      	cbnz	r3, 8000864 <__swbuf_r+0x12>
 8000860:	f7ff ff0e 	bl	8000680 <__sinit>
 8000864:	69a3      	ldr	r3, [r4, #24]
 8000866:	60a3      	str	r3, [r4, #8]
 8000868:	89a3      	ldrh	r3, [r4, #12]
 800086a:	071a      	lsls	r2, r3, #28
 800086c:	d501      	bpl.n	8000872 <__swbuf_r+0x20>
 800086e:	6923      	ldr	r3, [r4, #16]
 8000870:	b943      	cbnz	r3, 8000884 <__swbuf_r+0x32>
 8000872:	4621      	mov	r1, r4
 8000874:	4628      	mov	r0, r5
 8000876:	f000 f82b 	bl	80008d0 <__swsetup_r>
 800087a:	b118      	cbz	r0, 8000884 <__swbuf_r+0x32>
 800087c:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8000880:	4638      	mov	r0, r7
 8000882:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000884:	6823      	ldr	r3, [r4, #0]
 8000886:	6922      	ldr	r2, [r4, #16]
 8000888:	1a98      	subs	r0, r3, r2
 800088a:	6963      	ldr	r3, [r4, #20]
 800088c:	b2f6      	uxtb	r6, r6
 800088e:	4283      	cmp	r3, r0
 8000890:	4637      	mov	r7, r6
 8000892:	dc05      	bgt.n	80008a0 <__swbuf_r+0x4e>
 8000894:	4621      	mov	r1, r4
 8000896:	4628      	mov	r0, r5
 8000898:	f000 fd36 	bl	8001308 <_fflush_r>
 800089c:	2800      	cmp	r0, #0
 800089e:	d1ed      	bne.n	800087c <__swbuf_r+0x2a>
 80008a0:	68a3      	ldr	r3, [r4, #8]
 80008a2:	3b01      	subs	r3, #1
 80008a4:	60a3      	str	r3, [r4, #8]
 80008a6:	6823      	ldr	r3, [r4, #0]
 80008a8:	1c5a      	adds	r2, r3, #1
 80008aa:	6022      	str	r2, [r4, #0]
 80008ac:	701e      	strb	r6, [r3, #0]
 80008ae:	6962      	ldr	r2, [r4, #20]
 80008b0:	1c43      	adds	r3, r0, #1
 80008b2:	429a      	cmp	r2, r3
 80008b4:	d004      	beq.n	80008c0 <__swbuf_r+0x6e>
 80008b6:	89a3      	ldrh	r3, [r4, #12]
 80008b8:	07db      	lsls	r3, r3, #31
 80008ba:	d5e1      	bpl.n	8000880 <__swbuf_r+0x2e>
 80008bc:	2e0a      	cmp	r6, #10
 80008be:	d1df      	bne.n	8000880 <__swbuf_r+0x2e>
 80008c0:	4621      	mov	r1, r4
 80008c2:	4628      	mov	r0, r5
 80008c4:	f000 fd20 	bl	8001308 <_fflush_r>
 80008c8:	2800      	cmp	r0, #0
 80008ca:	d0d9      	beq.n	8000880 <__swbuf_r+0x2e>
 80008cc:	e7d6      	b.n	800087c <__swbuf_r+0x2a>
	...

080008d0 <__swsetup_r>:
 80008d0:	b538      	push	{r3, r4, r5, lr}
 80008d2:	4b29      	ldr	r3, [pc, #164]	@ (8000978 <__swsetup_r+0xa8>)
 80008d4:	4605      	mov	r5, r0
 80008d6:	6818      	ldr	r0, [r3, #0]
 80008d8:	460c      	mov	r4, r1
 80008da:	b118      	cbz	r0, 80008e4 <__swsetup_r+0x14>
 80008dc:	6a03      	ldr	r3, [r0, #32]
 80008de:	b90b      	cbnz	r3, 80008e4 <__swsetup_r+0x14>
 80008e0:	f7ff fece 	bl	8000680 <__sinit>
 80008e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008e8:	0719      	lsls	r1, r3, #28
 80008ea:	d422      	bmi.n	8000932 <__swsetup_r+0x62>
 80008ec:	06da      	lsls	r2, r3, #27
 80008ee:	d407      	bmi.n	8000900 <__swsetup_r+0x30>
 80008f0:	2209      	movs	r2, #9
 80008f2:	602a      	str	r2, [r5, #0]
 80008f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80008f8:	81a3      	strh	r3, [r4, #12]
 80008fa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80008fe:	e033      	b.n	8000968 <__swsetup_r+0x98>
 8000900:	0758      	lsls	r0, r3, #29
 8000902:	d512      	bpl.n	800092a <__swsetup_r+0x5a>
 8000904:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000906:	b141      	cbz	r1, 800091a <__swsetup_r+0x4a>
 8000908:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800090c:	4299      	cmp	r1, r3
 800090e:	d002      	beq.n	8000916 <__swsetup_r+0x46>
 8000910:	4628      	mov	r0, r5
 8000912:	f000 f8af 	bl	8000a74 <_free_r>
 8000916:	2300      	movs	r3, #0
 8000918:	6363      	str	r3, [r4, #52]	@ 0x34
 800091a:	89a3      	ldrh	r3, [r4, #12]
 800091c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000920:	81a3      	strh	r3, [r4, #12]
 8000922:	2300      	movs	r3, #0
 8000924:	6063      	str	r3, [r4, #4]
 8000926:	6923      	ldr	r3, [r4, #16]
 8000928:	6023      	str	r3, [r4, #0]
 800092a:	89a3      	ldrh	r3, [r4, #12]
 800092c:	f043 0308 	orr.w	r3, r3, #8
 8000930:	81a3      	strh	r3, [r4, #12]
 8000932:	6923      	ldr	r3, [r4, #16]
 8000934:	b94b      	cbnz	r3, 800094a <__swsetup_r+0x7a>
 8000936:	89a3      	ldrh	r3, [r4, #12]
 8000938:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800093c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000940:	d003      	beq.n	800094a <__swsetup_r+0x7a>
 8000942:	4621      	mov	r1, r4
 8000944:	4628      	mov	r0, r5
 8000946:	f000 fd2d 	bl	80013a4 <__smakebuf_r>
 800094a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800094e:	f013 0201 	ands.w	r2, r3, #1
 8000952:	d00a      	beq.n	800096a <__swsetup_r+0x9a>
 8000954:	2200      	movs	r2, #0
 8000956:	60a2      	str	r2, [r4, #8]
 8000958:	6962      	ldr	r2, [r4, #20]
 800095a:	4252      	negs	r2, r2
 800095c:	61a2      	str	r2, [r4, #24]
 800095e:	6922      	ldr	r2, [r4, #16]
 8000960:	b942      	cbnz	r2, 8000974 <__swsetup_r+0xa4>
 8000962:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000966:	d1c5      	bne.n	80008f4 <__swsetup_r+0x24>
 8000968:	bd38      	pop	{r3, r4, r5, pc}
 800096a:	0799      	lsls	r1, r3, #30
 800096c:	bf58      	it	pl
 800096e:	6962      	ldrpl	r2, [r4, #20]
 8000970:	60a2      	str	r2, [r4, #8]
 8000972:	e7f4      	b.n	800095e <__swsetup_r+0x8e>
 8000974:	2000      	movs	r0, #0
 8000976:	e7f7      	b.n	8000968 <__swsetup_r+0x98>
 8000978:	2000000c 	.word	0x2000000c

0800097c <memset>:
 800097c:	4402      	add	r2, r0
 800097e:	4603      	mov	r3, r0
 8000980:	4293      	cmp	r3, r2
 8000982:	d100      	bne.n	8000986 <memset+0xa>
 8000984:	4770      	bx	lr
 8000986:	f803 1b01 	strb.w	r1, [r3], #1
 800098a:	e7f9      	b.n	8000980 <memset+0x4>

0800098c <_close_r>:
 800098c:	b538      	push	{r3, r4, r5, lr}
 800098e:	4d06      	ldr	r5, [pc, #24]	@ (80009a8 <_close_r+0x1c>)
 8000990:	2300      	movs	r3, #0
 8000992:	4604      	mov	r4, r0
 8000994:	4608      	mov	r0, r1
 8000996:	602b      	str	r3, [r5, #0]
 8000998:	f7ff fd51 	bl	800043e <_close>
 800099c:	1c43      	adds	r3, r0, #1
 800099e:	d102      	bne.n	80009a6 <_close_r+0x1a>
 80009a0:	682b      	ldr	r3, [r5, #0]
 80009a2:	b103      	cbz	r3, 80009a6 <_close_r+0x1a>
 80009a4:	6023      	str	r3, [r4, #0]
 80009a6:	bd38      	pop	{r3, r4, r5, pc}
 80009a8:	200001bc 	.word	0x200001bc

080009ac <_lseek_r>:
 80009ac:	b538      	push	{r3, r4, r5, lr}
 80009ae:	4d07      	ldr	r5, [pc, #28]	@ (80009cc <_lseek_r+0x20>)
 80009b0:	4604      	mov	r4, r0
 80009b2:	4608      	mov	r0, r1
 80009b4:	4611      	mov	r1, r2
 80009b6:	2200      	movs	r2, #0
 80009b8:	602a      	str	r2, [r5, #0]
 80009ba:	461a      	mov	r2, r3
 80009bc:	f7ff fd66 	bl	800048c <_lseek>
 80009c0:	1c43      	adds	r3, r0, #1
 80009c2:	d102      	bne.n	80009ca <_lseek_r+0x1e>
 80009c4:	682b      	ldr	r3, [r5, #0]
 80009c6:	b103      	cbz	r3, 80009ca <_lseek_r+0x1e>
 80009c8:	6023      	str	r3, [r4, #0]
 80009ca:	bd38      	pop	{r3, r4, r5, pc}
 80009cc:	200001bc 	.word	0x200001bc

080009d0 <_read_r>:
 80009d0:	b538      	push	{r3, r4, r5, lr}
 80009d2:	4d07      	ldr	r5, [pc, #28]	@ (80009f0 <_read_r+0x20>)
 80009d4:	4604      	mov	r4, r0
 80009d6:	4608      	mov	r0, r1
 80009d8:	4611      	mov	r1, r2
 80009da:	2200      	movs	r2, #0
 80009dc:	602a      	str	r2, [r5, #0]
 80009de:	461a      	mov	r2, r3
 80009e0:	f7ff fcf4 	bl	80003cc <_read>
 80009e4:	1c43      	adds	r3, r0, #1
 80009e6:	d102      	bne.n	80009ee <_read_r+0x1e>
 80009e8:	682b      	ldr	r3, [r5, #0]
 80009ea:	b103      	cbz	r3, 80009ee <_read_r+0x1e>
 80009ec:	6023      	str	r3, [r4, #0]
 80009ee:	bd38      	pop	{r3, r4, r5, pc}
 80009f0:	200001bc 	.word	0x200001bc

080009f4 <_write_r>:
 80009f4:	b538      	push	{r3, r4, r5, lr}
 80009f6:	4d07      	ldr	r5, [pc, #28]	@ (8000a14 <_write_r+0x20>)
 80009f8:	4604      	mov	r4, r0
 80009fa:	4608      	mov	r0, r1
 80009fc:	4611      	mov	r1, r2
 80009fe:	2200      	movs	r2, #0
 8000a00:	602a      	str	r2, [r5, #0]
 8000a02:	461a      	mov	r2, r3
 8000a04:	f7ff fcff 	bl	8000406 <_write>
 8000a08:	1c43      	adds	r3, r0, #1
 8000a0a:	d102      	bne.n	8000a12 <_write_r+0x1e>
 8000a0c:	682b      	ldr	r3, [r5, #0]
 8000a0e:	b103      	cbz	r3, 8000a12 <_write_r+0x1e>
 8000a10:	6023      	str	r3, [r4, #0]
 8000a12:	bd38      	pop	{r3, r4, r5, pc}
 8000a14:	200001bc 	.word	0x200001bc

08000a18 <__errno>:
 8000a18:	4b01      	ldr	r3, [pc, #4]	@ (8000a20 <__errno+0x8>)
 8000a1a:	6818      	ldr	r0, [r3, #0]
 8000a1c:	4770      	bx	lr
 8000a1e:	bf00      	nop
 8000a20:	2000000c 	.word	0x2000000c

08000a24 <__libc_init_array>:
 8000a24:	b570      	push	{r4, r5, r6, lr}
 8000a26:	4d0d      	ldr	r5, [pc, #52]	@ (8000a5c <__libc_init_array+0x38>)
 8000a28:	4c0d      	ldr	r4, [pc, #52]	@ (8000a60 <__libc_init_array+0x3c>)
 8000a2a:	1b64      	subs	r4, r4, r5
 8000a2c:	10a4      	asrs	r4, r4, #2
 8000a2e:	2600      	movs	r6, #0
 8000a30:	42a6      	cmp	r6, r4
 8000a32:	d109      	bne.n	8000a48 <__libc_init_array+0x24>
 8000a34:	4d0b      	ldr	r5, [pc, #44]	@ (8000a64 <__libc_init_array+0x40>)
 8000a36:	4c0c      	ldr	r4, [pc, #48]	@ (8000a68 <__libc_init_array+0x44>)
 8000a38:	f000 fd22 	bl	8001480 <_init>
 8000a3c:	1b64      	subs	r4, r4, r5
 8000a3e:	10a4      	asrs	r4, r4, #2
 8000a40:	2600      	movs	r6, #0
 8000a42:	42a6      	cmp	r6, r4
 8000a44:	d105      	bne.n	8000a52 <__libc_init_array+0x2e>
 8000a46:	bd70      	pop	{r4, r5, r6, pc}
 8000a48:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a4c:	4798      	blx	r3
 8000a4e:	3601      	adds	r6, #1
 8000a50:	e7ee      	b.n	8000a30 <__libc_init_array+0xc>
 8000a52:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a56:	4798      	blx	r3
 8000a58:	3601      	adds	r6, #1
 8000a5a:	e7f2      	b.n	8000a42 <__libc_init_array+0x1e>
 8000a5c:	080014f4 	.word	0x080014f4
 8000a60:	080014f4 	.word	0x080014f4
 8000a64:	080014f4 	.word	0x080014f4
 8000a68:	080014f8 	.word	0x080014f8

08000a6c <__retarget_lock_init_recursive>:
 8000a6c:	4770      	bx	lr

08000a6e <__retarget_lock_acquire_recursive>:
 8000a6e:	4770      	bx	lr

08000a70 <__retarget_lock_release_recursive>:
 8000a70:	4770      	bx	lr
	...

08000a74 <_free_r>:
 8000a74:	b538      	push	{r3, r4, r5, lr}
 8000a76:	4605      	mov	r5, r0
 8000a78:	2900      	cmp	r1, #0
 8000a7a:	d041      	beq.n	8000b00 <_free_r+0x8c>
 8000a7c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a80:	1f0c      	subs	r4, r1, #4
 8000a82:	2b00      	cmp	r3, #0
 8000a84:	bfb8      	it	lt
 8000a86:	18e4      	addlt	r4, r4, r3
 8000a88:	f000 f8e0 	bl	8000c4c <__malloc_lock>
 8000a8c:	4a1d      	ldr	r2, [pc, #116]	@ (8000b04 <_free_r+0x90>)
 8000a8e:	6813      	ldr	r3, [r2, #0]
 8000a90:	b933      	cbnz	r3, 8000aa0 <_free_r+0x2c>
 8000a92:	6063      	str	r3, [r4, #4]
 8000a94:	6014      	str	r4, [r2, #0]
 8000a96:	4628      	mov	r0, r5
 8000a98:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a9c:	f000 b8dc 	b.w	8000c58 <__malloc_unlock>
 8000aa0:	42a3      	cmp	r3, r4
 8000aa2:	d908      	bls.n	8000ab6 <_free_r+0x42>
 8000aa4:	6820      	ldr	r0, [r4, #0]
 8000aa6:	1821      	adds	r1, r4, r0
 8000aa8:	428b      	cmp	r3, r1
 8000aaa:	bf01      	itttt	eq
 8000aac:	6819      	ldreq	r1, [r3, #0]
 8000aae:	685b      	ldreq	r3, [r3, #4]
 8000ab0:	1809      	addeq	r1, r1, r0
 8000ab2:	6021      	streq	r1, [r4, #0]
 8000ab4:	e7ed      	b.n	8000a92 <_free_r+0x1e>
 8000ab6:	461a      	mov	r2, r3
 8000ab8:	685b      	ldr	r3, [r3, #4]
 8000aba:	b10b      	cbz	r3, 8000ac0 <_free_r+0x4c>
 8000abc:	42a3      	cmp	r3, r4
 8000abe:	d9fa      	bls.n	8000ab6 <_free_r+0x42>
 8000ac0:	6811      	ldr	r1, [r2, #0]
 8000ac2:	1850      	adds	r0, r2, r1
 8000ac4:	42a0      	cmp	r0, r4
 8000ac6:	d10b      	bne.n	8000ae0 <_free_r+0x6c>
 8000ac8:	6820      	ldr	r0, [r4, #0]
 8000aca:	4401      	add	r1, r0
 8000acc:	1850      	adds	r0, r2, r1
 8000ace:	4283      	cmp	r3, r0
 8000ad0:	6011      	str	r1, [r2, #0]
 8000ad2:	d1e0      	bne.n	8000a96 <_free_r+0x22>
 8000ad4:	6818      	ldr	r0, [r3, #0]
 8000ad6:	685b      	ldr	r3, [r3, #4]
 8000ad8:	6053      	str	r3, [r2, #4]
 8000ada:	4408      	add	r0, r1
 8000adc:	6010      	str	r0, [r2, #0]
 8000ade:	e7da      	b.n	8000a96 <_free_r+0x22>
 8000ae0:	d902      	bls.n	8000ae8 <_free_r+0x74>
 8000ae2:	230c      	movs	r3, #12
 8000ae4:	602b      	str	r3, [r5, #0]
 8000ae6:	e7d6      	b.n	8000a96 <_free_r+0x22>
 8000ae8:	6820      	ldr	r0, [r4, #0]
 8000aea:	1821      	adds	r1, r4, r0
 8000aec:	428b      	cmp	r3, r1
 8000aee:	bf04      	itt	eq
 8000af0:	6819      	ldreq	r1, [r3, #0]
 8000af2:	685b      	ldreq	r3, [r3, #4]
 8000af4:	6063      	str	r3, [r4, #4]
 8000af6:	bf04      	itt	eq
 8000af8:	1809      	addeq	r1, r1, r0
 8000afa:	6021      	streq	r1, [r4, #0]
 8000afc:	6054      	str	r4, [r2, #4]
 8000afe:	e7ca      	b.n	8000a96 <_free_r+0x22>
 8000b00:	bd38      	pop	{r3, r4, r5, pc}
 8000b02:	bf00      	nop
 8000b04:	200001c8 	.word	0x200001c8

08000b08 <sbrk_aligned>:
 8000b08:	b570      	push	{r4, r5, r6, lr}
 8000b0a:	4e0f      	ldr	r6, [pc, #60]	@ (8000b48 <sbrk_aligned+0x40>)
 8000b0c:	460c      	mov	r4, r1
 8000b0e:	6831      	ldr	r1, [r6, #0]
 8000b10:	4605      	mov	r5, r0
 8000b12:	b911      	cbnz	r1, 8000b1a <sbrk_aligned+0x12>
 8000b14:	f000 fca4 	bl	8001460 <_sbrk_r>
 8000b18:	6030      	str	r0, [r6, #0]
 8000b1a:	4621      	mov	r1, r4
 8000b1c:	4628      	mov	r0, r5
 8000b1e:	f000 fc9f 	bl	8001460 <_sbrk_r>
 8000b22:	1c43      	adds	r3, r0, #1
 8000b24:	d103      	bne.n	8000b2e <sbrk_aligned+0x26>
 8000b26:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8000b2a:	4620      	mov	r0, r4
 8000b2c:	bd70      	pop	{r4, r5, r6, pc}
 8000b2e:	1cc4      	adds	r4, r0, #3
 8000b30:	f024 0403 	bic.w	r4, r4, #3
 8000b34:	42a0      	cmp	r0, r4
 8000b36:	d0f8      	beq.n	8000b2a <sbrk_aligned+0x22>
 8000b38:	1a21      	subs	r1, r4, r0
 8000b3a:	4628      	mov	r0, r5
 8000b3c:	f000 fc90 	bl	8001460 <_sbrk_r>
 8000b40:	3001      	adds	r0, #1
 8000b42:	d1f2      	bne.n	8000b2a <sbrk_aligned+0x22>
 8000b44:	e7ef      	b.n	8000b26 <sbrk_aligned+0x1e>
 8000b46:	bf00      	nop
 8000b48:	200001c4 	.word	0x200001c4

08000b4c <_malloc_r>:
 8000b4c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b50:	1ccd      	adds	r5, r1, #3
 8000b52:	f025 0503 	bic.w	r5, r5, #3
 8000b56:	3508      	adds	r5, #8
 8000b58:	2d0c      	cmp	r5, #12
 8000b5a:	bf38      	it	cc
 8000b5c:	250c      	movcc	r5, #12
 8000b5e:	2d00      	cmp	r5, #0
 8000b60:	4606      	mov	r6, r0
 8000b62:	db01      	blt.n	8000b68 <_malloc_r+0x1c>
 8000b64:	42a9      	cmp	r1, r5
 8000b66:	d904      	bls.n	8000b72 <_malloc_r+0x26>
 8000b68:	230c      	movs	r3, #12
 8000b6a:	6033      	str	r3, [r6, #0]
 8000b6c:	2000      	movs	r0, #0
 8000b6e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b72:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000c48 <_malloc_r+0xfc>
 8000b76:	f000 f869 	bl	8000c4c <__malloc_lock>
 8000b7a:	f8d8 3000 	ldr.w	r3, [r8]
 8000b7e:	461c      	mov	r4, r3
 8000b80:	bb44      	cbnz	r4, 8000bd4 <_malloc_r+0x88>
 8000b82:	4629      	mov	r1, r5
 8000b84:	4630      	mov	r0, r6
 8000b86:	f7ff ffbf 	bl	8000b08 <sbrk_aligned>
 8000b8a:	1c43      	adds	r3, r0, #1
 8000b8c:	4604      	mov	r4, r0
 8000b8e:	d158      	bne.n	8000c42 <_malloc_r+0xf6>
 8000b90:	f8d8 4000 	ldr.w	r4, [r8]
 8000b94:	4627      	mov	r7, r4
 8000b96:	2f00      	cmp	r7, #0
 8000b98:	d143      	bne.n	8000c22 <_malloc_r+0xd6>
 8000b9a:	2c00      	cmp	r4, #0
 8000b9c:	d04b      	beq.n	8000c36 <_malloc_r+0xea>
 8000b9e:	6823      	ldr	r3, [r4, #0]
 8000ba0:	4639      	mov	r1, r7
 8000ba2:	4630      	mov	r0, r6
 8000ba4:	eb04 0903 	add.w	r9, r4, r3
 8000ba8:	f000 fc5a 	bl	8001460 <_sbrk_r>
 8000bac:	4581      	cmp	r9, r0
 8000bae:	d142      	bne.n	8000c36 <_malloc_r+0xea>
 8000bb0:	6821      	ldr	r1, [r4, #0]
 8000bb2:	1a6d      	subs	r5, r5, r1
 8000bb4:	4629      	mov	r1, r5
 8000bb6:	4630      	mov	r0, r6
 8000bb8:	f7ff ffa6 	bl	8000b08 <sbrk_aligned>
 8000bbc:	3001      	adds	r0, #1
 8000bbe:	d03a      	beq.n	8000c36 <_malloc_r+0xea>
 8000bc0:	6823      	ldr	r3, [r4, #0]
 8000bc2:	442b      	add	r3, r5
 8000bc4:	6023      	str	r3, [r4, #0]
 8000bc6:	f8d8 3000 	ldr.w	r3, [r8]
 8000bca:	685a      	ldr	r2, [r3, #4]
 8000bcc:	bb62      	cbnz	r2, 8000c28 <_malloc_r+0xdc>
 8000bce:	f8c8 7000 	str.w	r7, [r8]
 8000bd2:	e00f      	b.n	8000bf4 <_malloc_r+0xa8>
 8000bd4:	6822      	ldr	r2, [r4, #0]
 8000bd6:	1b52      	subs	r2, r2, r5
 8000bd8:	d420      	bmi.n	8000c1c <_malloc_r+0xd0>
 8000bda:	2a0b      	cmp	r2, #11
 8000bdc:	d917      	bls.n	8000c0e <_malloc_r+0xc2>
 8000bde:	1961      	adds	r1, r4, r5
 8000be0:	42a3      	cmp	r3, r4
 8000be2:	6025      	str	r5, [r4, #0]
 8000be4:	bf18      	it	ne
 8000be6:	6059      	strne	r1, [r3, #4]
 8000be8:	6863      	ldr	r3, [r4, #4]
 8000bea:	bf08      	it	eq
 8000bec:	f8c8 1000 	streq.w	r1, [r8]
 8000bf0:	5162      	str	r2, [r4, r5]
 8000bf2:	604b      	str	r3, [r1, #4]
 8000bf4:	4630      	mov	r0, r6
 8000bf6:	f000 f82f 	bl	8000c58 <__malloc_unlock>
 8000bfa:	f104 000b 	add.w	r0, r4, #11
 8000bfe:	1d23      	adds	r3, r4, #4
 8000c00:	f020 0007 	bic.w	r0, r0, #7
 8000c04:	1ac2      	subs	r2, r0, r3
 8000c06:	bf1c      	itt	ne
 8000c08:	1a1b      	subne	r3, r3, r0
 8000c0a:	50a3      	strne	r3, [r4, r2]
 8000c0c:	e7af      	b.n	8000b6e <_malloc_r+0x22>
 8000c0e:	6862      	ldr	r2, [r4, #4]
 8000c10:	42a3      	cmp	r3, r4
 8000c12:	bf0c      	ite	eq
 8000c14:	f8c8 2000 	streq.w	r2, [r8]
 8000c18:	605a      	strne	r2, [r3, #4]
 8000c1a:	e7eb      	b.n	8000bf4 <_malloc_r+0xa8>
 8000c1c:	4623      	mov	r3, r4
 8000c1e:	6864      	ldr	r4, [r4, #4]
 8000c20:	e7ae      	b.n	8000b80 <_malloc_r+0x34>
 8000c22:	463c      	mov	r4, r7
 8000c24:	687f      	ldr	r7, [r7, #4]
 8000c26:	e7b6      	b.n	8000b96 <_malloc_r+0x4a>
 8000c28:	461a      	mov	r2, r3
 8000c2a:	685b      	ldr	r3, [r3, #4]
 8000c2c:	42a3      	cmp	r3, r4
 8000c2e:	d1fb      	bne.n	8000c28 <_malloc_r+0xdc>
 8000c30:	2300      	movs	r3, #0
 8000c32:	6053      	str	r3, [r2, #4]
 8000c34:	e7de      	b.n	8000bf4 <_malloc_r+0xa8>
 8000c36:	230c      	movs	r3, #12
 8000c38:	6033      	str	r3, [r6, #0]
 8000c3a:	4630      	mov	r0, r6
 8000c3c:	f000 f80c 	bl	8000c58 <__malloc_unlock>
 8000c40:	e794      	b.n	8000b6c <_malloc_r+0x20>
 8000c42:	6005      	str	r5, [r0, #0]
 8000c44:	e7d6      	b.n	8000bf4 <_malloc_r+0xa8>
 8000c46:	bf00      	nop
 8000c48:	200001c8 	.word	0x200001c8

08000c4c <__malloc_lock>:
 8000c4c:	4801      	ldr	r0, [pc, #4]	@ (8000c54 <__malloc_lock+0x8>)
 8000c4e:	f7ff bf0e 	b.w	8000a6e <__retarget_lock_acquire_recursive>
 8000c52:	bf00      	nop
 8000c54:	200001c0 	.word	0x200001c0

08000c58 <__malloc_unlock>:
 8000c58:	4801      	ldr	r0, [pc, #4]	@ (8000c60 <__malloc_unlock+0x8>)
 8000c5a:	f7ff bf09 	b.w	8000a70 <__retarget_lock_release_recursive>
 8000c5e:	bf00      	nop
 8000c60:	200001c0 	.word	0x200001c0

08000c64 <__sfputc_r>:
 8000c64:	6893      	ldr	r3, [r2, #8]
 8000c66:	3b01      	subs	r3, #1
 8000c68:	2b00      	cmp	r3, #0
 8000c6a:	b410      	push	{r4}
 8000c6c:	6093      	str	r3, [r2, #8]
 8000c6e:	da08      	bge.n	8000c82 <__sfputc_r+0x1e>
 8000c70:	6994      	ldr	r4, [r2, #24]
 8000c72:	42a3      	cmp	r3, r4
 8000c74:	db01      	blt.n	8000c7a <__sfputc_r+0x16>
 8000c76:	290a      	cmp	r1, #10
 8000c78:	d103      	bne.n	8000c82 <__sfputc_r+0x1e>
 8000c7a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c7e:	f7ff bde8 	b.w	8000852 <__swbuf_r>
 8000c82:	6813      	ldr	r3, [r2, #0]
 8000c84:	1c58      	adds	r0, r3, #1
 8000c86:	6010      	str	r0, [r2, #0]
 8000c88:	7019      	strb	r1, [r3, #0]
 8000c8a:	4608      	mov	r0, r1
 8000c8c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c90:	4770      	bx	lr

08000c92 <__sfputs_r>:
 8000c92:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c94:	4606      	mov	r6, r0
 8000c96:	460f      	mov	r7, r1
 8000c98:	4614      	mov	r4, r2
 8000c9a:	18d5      	adds	r5, r2, r3
 8000c9c:	42ac      	cmp	r4, r5
 8000c9e:	d101      	bne.n	8000ca4 <__sfputs_r+0x12>
 8000ca0:	2000      	movs	r0, #0
 8000ca2:	e007      	b.n	8000cb4 <__sfputs_r+0x22>
 8000ca4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ca8:	463a      	mov	r2, r7
 8000caa:	4630      	mov	r0, r6
 8000cac:	f7ff ffda 	bl	8000c64 <__sfputc_r>
 8000cb0:	1c43      	adds	r3, r0, #1
 8000cb2:	d1f3      	bne.n	8000c9c <__sfputs_r+0xa>
 8000cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000cb8 <_vfiprintf_r>:
 8000cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000cbc:	460d      	mov	r5, r1
 8000cbe:	b09d      	sub	sp, #116	@ 0x74
 8000cc0:	4614      	mov	r4, r2
 8000cc2:	4698      	mov	r8, r3
 8000cc4:	4606      	mov	r6, r0
 8000cc6:	b118      	cbz	r0, 8000cd0 <_vfiprintf_r+0x18>
 8000cc8:	6a03      	ldr	r3, [r0, #32]
 8000cca:	b90b      	cbnz	r3, 8000cd0 <_vfiprintf_r+0x18>
 8000ccc:	f7ff fcd8 	bl	8000680 <__sinit>
 8000cd0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000cd2:	07d9      	lsls	r1, r3, #31
 8000cd4:	d405      	bmi.n	8000ce2 <_vfiprintf_r+0x2a>
 8000cd6:	89ab      	ldrh	r3, [r5, #12]
 8000cd8:	059a      	lsls	r2, r3, #22
 8000cda:	d402      	bmi.n	8000ce2 <_vfiprintf_r+0x2a>
 8000cdc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000cde:	f7ff fec6 	bl	8000a6e <__retarget_lock_acquire_recursive>
 8000ce2:	89ab      	ldrh	r3, [r5, #12]
 8000ce4:	071b      	lsls	r3, r3, #28
 8000ce6:	d501      	bpl.n	8000cec <_vfiprintf_r+0x34>
 8000ce8:	692b      	ldr	r3, [r5, #16]
 8000cea:	b99b      	cbnz	r3, 8000d14 <_vfiprintf_r+0x5c>
 8000cec:	4629      	mov	r1, r5
 8000cee:	4630      	mov	r0, r6
 8000cf0:	f7ff fdee 	bl	80008d0 <__swsetup_r>
 8000cf4:	b170      	cbz	r0, 8000d14 <_vfiprintf_r+0x5c>
 8000cf6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000cf8:	07dc      	lsls	r4, r3, #31
 8000cfa:	d504      	bpl.n	8000d06 <_vfiprintf_r+0x4e>
 8000cfc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000d00:	b01d      	add	sp, #116	@ 0x74
 8000d02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d06:	89ab      	ldrh	r3, [r5, #12]
 8000d08:	0598      	lsls	r0, r3, #22
 8000d0a:	d4f7      	bmi.n	8000cfc <_vfiprintf_r+0x44>
 8000d0c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000d0e:	f7ff feaf 	bl	8000a70 <__retarget_lock_release_recursive>
 8000d12:	e7f3      	b.n	8000cfc <_vfiprintf_r+0x44>
 8000d14:	2300      	movs	r3, #0
 8000d16:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d18:	2320      	movs	r3, #32
 8000d1a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000d1e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000d22:	2330      	movs	r3, #48	@ 0x30
 8000d24:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000ed4 <_vfiprintf_r+0x21c>
 8000d28:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000d2c:	f04f 0901 	mov.w	r9, #1
 8000d30:	4623      	mov	r3, r4
 8000d32:	469a      	mov	sl, r3
 8000d34:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d38:	b10a      	cbz	r2, 8000d3e <_vfiprintf_r+0x86>
 8000d3a:	2a25      	cmp	r2, #37	@ 0x25
 8000d3c:	d1f9      	bne.n	8000d32 <_vfiprintf_r+0x7a>
 8000d3e:	ebba 0b04 	subs.w	fp, sl, r4
 8000d42:	d00b      	beq.n	8000d5c <_vfiprintf_r+0xa4>
 8000d44:	465b      	mov	r3, fp
 8000d46:	4622      	mov	r2, r4
 8000d48:	4629      	mov	r1, r5
 8000d4a:	4630      	mov	r0, r6
 8000d4c:	f7ff ffa1 	bl	8000c92 <__sfputs_r>
 8000d50:	3001      	adds	r0, #1
 8000d52:	f000 80a7 	beq.w	8000ea4 <_vfiprintf_r+0x1ec>
 8000d56:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000d58:	445a      	add	r2, fp
 8000d5a:	9209      	str	r2, [sp, #36]	@ 0x24
 8000d5c:	f89a 3000 	ldrb.w	r3, [sl]
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	f000 809f 	beq.w	8000ea4 <_vfiprintf_r+0x1ec>
 8000d66:	2300      	movs	r3, #0
 8000d68:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000d6c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d70:	f10a 0a01 	add.w	sl, sl, #1
 8000d74:	9304      	str	r3, [sp, #16]
 8000d76:	9307      	str	r3, [sp, #28]
 8000d78:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000d7c:	931a      	str	r3, [sp, #104]	@ 0x68
 8000d7e:	4654      	mov	r4, sl
 8000d80:	2205      	movs	r2, #5
 8000d82:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d86:	4853      	ldr	r0, [pc, #332]	@ (8000ed4 <_vfiprintf_r+0x21c>)
 8000d88:	f7ff fa42 	bl	8000210 <memchr>
 8000d8c:	9a04      	ldr	r2, [sp, #16]
 8000d8e:	b9d8      	cbnz	r0, 8000dc8 <_vfiprintf_r+0x110>
 8000d90:	06d1      	lsls	r1, r2, #27
 8000d92:	bf44      	itt	mi
 8000d94:	2320      	movmi	r3, #32
 8000d96:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000d9a:	0713      	lsls	r3, r2, #28
 8000d9c:	bf44      	itt	mi
 8000d9e:	232b      	movmi	r3, #43	@ 0x2b
 8000da0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000da4:	f89a 3000 	ldrb.w	r3, [sl]
 8000da8:	2b2a      	cmp	r3, #42	@ 0x2a
 8000daa:	d015      	beq.n	8000dd8 <_vfiprintf_r+0x120>
 8000dac:	9a07      	ldr	r2, [sp, #28]
 8000dae:	4654      	mov	r4, sl
 8000db0:	2000      	movs	r0, #0
 8000db2:	f04f 0c0a 	mov.w	ip, #10
 8000db6:	4621      	mov	r1, r4
 8000db8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000dbc:	3b30      	subs	r3, #48	@ 0x30
 8000dbe:	2b09      	cmp	r3, #9
 8000dc0:	d94b      	bls.n	8000e5a <_vfiprintf_r+0x1a2>
 8000dc2:	b1b0      	cbz	r0, 8000df2 <_vfiprintf_r+0x13a>
 8000dc4:	9207      	str	r2, [sp, #28]
 8000dc6:	e014      	b.n	8000df2 <_vfiprintf_r+0x13a>
 8000dc8:	eba0 0308 	sub.w	r3, r0, r8
 8000dcc:	fa09 f303 	lsl.w	r3, r9, r3
 8000dd0:	4313      	orrs	r3, r2
 8000dd2:	9304      	str	r3, [sp, #16]
 8000dd4:	46a2      	mov	sl, r4
 8000dd6:	e7d2      	b.n	8000d7e <_vfiprintf_r+0xc6>
 8000dd8:	9b03      	ldr	r3, [sp, #12]
 8000dda:	1d19      	adds	r1, r3, #4
 8000ddc:	681b      	ldr	r3, [r3, #0]
 8000dde:	9103      	str	r1, [sp, #12]
 8000de0:	2b00      	cmp	r3, #0
 8000de2:	bfbb      	ittet	lt
 8000de4:	425b      	neglt	r3, r3
 8000de6:	f042 0202 	orrlt.w	r2, r2, #2
 8000dea:	9307      	strge	r3, [sp, #28]
 8000dec:	9307      	strlt	r3, [sp, #28]
 8000dee:	bfb8      	it	lt
 8000df0:	9204      	strlt	r2, [sp, #16]
 8000df2:	7823      	ldrb	r3, [r4, #0]
 8000df4:	2b2e      	cmp	r3, #46	@ 0x2e
 8000df6:	d10a      	bne.n	8000e0e <_vfiprintf_r+0x156>
 8000df8:	7863      	ldrb	r3, [r4, #1]
 8000dfa:	2b2a      	cmp	r3, #42	@ 0x2a
 8000dfc:	d132      	bne.n	8000e64 <_vfiprintf_r+0x1ac>
 8000dfe:	9b03      	ldr	r3, [sp, #12]
 8000e00:	1d1a      	adds	r2, r3, #4
 8000e02:	681b      	ldr	r3, [r3, #0]
 8000e04:	9203      	str	r2, [sp, #12]
 8000e06:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000e0a:	3402      	adds	r4, #2
 8000e0c:	9305      	str	r3, [sp, #20]
 8000e0e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000ee4 <_vfiprintf_r+0x22c>
 8000e12:	7821      	ldrb	r1, [r4, #0]
 8000e14:	2203      	movs	r2, #3
 8000e16:	4650      	mov	r0, sl
 8000e18:	f7ff f9fa 	bl	8000210 <memchr>
 8000e1c:	b138      	cbz	r0, 8000e2e <_vfiprintf_r+0x176>
 8000e1e:	9b04      	ldr	r3, [sp, #16]
 8000e20:	eba0 000a 	sub.w	r0, r0, sl
 8000e24:	2240      	movs	r2, #64	@ 0x40
 8000e26:	4082      	lsls	r2, r0
 8000e28:	4313      	orrs	r3, r2
 8000e2a:	3401      	adds	r4, #1
 8000e2c:	9304      	str	r3, [sp, #16]
 8000e2e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e32:	4829      	ldr	r0, [pc, #164]	@ (8000ed8 <_vfiprintf_r+0x220>)
 8000e34:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000e38:	2206      	movs	r2, #6
 8000e3a:	f7ff f9e9 	bl	8000210 <memchr>
 8000e3e:	2800      	cmp	r0, #0
 8000e40:	d03f      	beq.n	8000ec2 <_vfiprintf_r+0x20a>
 8000e42:	4b26      	ldr	r3, [pc, #152]	@ (8000edc <_vfiprintf_r+0x224>)
 8000e44:	bb1b      	cbnz	r3, 8000e8e <_vfiprintf_r+0x1d6>
 8000e46:	9b03      	ldr	r3, [sp, #12]
 8000e48:	3307      	adds	r3, #7
 8000e4a:	f023 0307 	bic.w	r3, r3, #7
 8000e4e:	3308      	adds	r3, #8
 8000e50:	9303      	str	r3, [sp, #12]
 8000e52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000e54:	443b      	add	r3, r7
 8000e56:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e58:	e76a      	b.n	8000d30 <_vfiprintf_r+0x78>
 8000e5a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e5e:	460c      	mov	r4, r1
 8000e60:	2001      	movs	r0, #1
 8000e62:	e7a8      	b.n	8000db6 <_vfiprintf_r+0xfe>
 8000e64:	2300      	movs	r3, #0
 8000e66:	3401      	adds	r4, #1
 8000e68:	9305      	str	r3, [sp, #20]
 8000e6a:	4619      	mov	r1, r3
 8000e6c:	f04f 0c0a 	mov.w	ip, #10
 8000e70:	4620      	mov	r0, r4
 8000e72:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e76:	3a30      	subs	r2, #48	@ 0x30
 8000e78:	2a09      	cmp	r2, #9
 8000e7a:	d903      	bls.n	8000e84 <_vfiprintf_r+0x1cc>
 8000e7c:	2b00      	cmp	r3, #0
 8000e7e:	d0c6      	beq.n	8000e0e <_vfiprintf_r+0x156>
 8000e80:	9105      	str	r1, [sp, #20]
 8000e82:	e7c4      	b.n	8000e0e <_vfiprintf_r+0x156>
 8000e84:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e88:	4604      	mov	r4, r0
 8000e8a:	2301      	movs	r3, #1
 8000e8c:	e7f0      	b.n	8000e70 <_vfiprintf_r+0x1b8>
 8000e8e:	ab03      	add	r3, sp, #12
 8000e90:	9300      	str	r3, [sp, #0]
 8000e92:	462a      	mov	r2, r5
 8000e94:	4b12      	ldr	r3, [pc, #72]	@ (8000ee0 <_vfiprintf_r+0x228>)
 8000e96:	a904      	add	r1, sp, #16
 8000e98:	4630      	mov	r0, r6
 8000e9a:	f3af 8000 	nop.w
 8000e9e:	4607      	mov	r7, r0
 8000ea0:	1c78      	adds	r0, r7, #1
 8000ea2:	d1d6      	bne.n	8000e52 <_vfiprintf_r+0x19a>
 8000ea4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000ea6:	07d9      	lsls	r1, r3, #31
 8000ea8:	d405      	bmi.n	8000eb6 <_vfiprintf_r+0x1fe>
 8000eaa:	89ab      	ldrh	r3, [r5, #12]
 8000eac:	059a      	lsls	r2, r3, #22
 8000eae:	d402      	bmi.n	8000eb6 <_vfiprintf_r+0x1fe>
 8000eb0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000eb2:	f7ff fddd 	bl	8000a70 <__retarget_lock_release_recursive>
 8000eb6:	89ab      	ldrh	r3, [r5, #12]
 8000eb8:	065b      	lsls	r3, r3, #25
 8000eba:	f53f af1f 	bmi.w	8000cfc <_vfiprintf_r+0x44>
 8000ebe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000ec0:	e71e      	b.n	8000d00 <_vfiprintf_r+0x48>
 8000ec2:	ab03      	add	r3, sp, #12
 8000ec4:	9300      	str	r3, [sp, #0]
 8000ec6:	462a      	mov	r2, r5
 8000ec8:	4b05      	ldr	r3, [pc, #20]	@ (8000ee0 <_vfiprintf_r+0x228>)
 8000eca:	a904      	add	r1, sp, #16
 8000ecc:	4630      	mov	r0, r6
 8000ece:	f000 f879 	bl	8000fc4 <_printf_i>
 8000ed2:	e7e4      	b.n	8000e9e <_vfiprintf_r+0x1e6>
 8000ed4:	080014b8 	.word	0x080014b8
 8000ed8:	080014c2 	.word	0x080014c2
 8000edc:	00000000 	.word	0x00000000
 8000ee0:	08000c93 	.word	0x08000c93
 8000ee4:	080014be 	.word	0x080014be

08000ee8 <_printf_common>:
 8000ee8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000eec:	4616      	mov	r6, r2
 8000eee:	4698      	mov	r8, r3
 8000ef0:	688a      	ldr	r2, [r1, #8]
 8000ef2:	690b      	ldr	r3, [r1, #16]
 8000ef4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000ef8:	4293      	cmp	r3, r2
 8000efa:	bfb8      	it	lt
 8000efc:	4613      	movlt	r3, r2
 8000efe:	6033      	str	r3, [r6, #0]
 8000f00:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000f04:	4607      	mov	r7, r0
 8000f06:	460c      	mov	r4, r1
 8000f08:	b10a      	cbz	r2, 8000f0e <_printf_common+0x26>
 8000f0a:	3301      	adds	r3, #1
 8000f0c:	6033      	str	r3, [r6, #0]
 8000f0e:	6823      	ldr	r3, [r4, #0]
 8000f10:	0699      	lsls	r1, r3, #26
 8000f12:	bf42      	ittt	mi
 8000f14:	6833      	ldrmi	r3, [r6, #0]
 8000f16:	3302      	addmi	r3, #2
 8000f18:	6033      	strmi	r3, [r6, #0]
 8000f1a:	6825      	ldr	r5, [r4, #0]
 8000f1c:	f015 0506 	ands.w	r5, r5, #6
 8000f20:	d106      	bne.n	8000f30 <_printf_common+0x48>
 8000f22:	f104 0a19 	add.w	sl, r4, #25
 8000f26:	68e3      	ldr	r3, [r4, #12]
 8000f28:	6832      	ldr	r2, [r6, #0]
 8000f2a:	1a9b      	subs	r3, r3, r2
 8000f2c:	42ab      	cmp	r3, r5
 8000f2e:	dc26      	bgt.n	8000f7e <_printf_common+0x96>
 8000f30:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000f34:	6822      	ldr	r2, [r4, #0]
 8000f36:	3b00      	subs	r3, #0
 8000f38:	bf18      	it	ne
 8000f3a:	2301      	movne	r3, #1
 8000f3c:	0692      	lsls	r2, r2, #26
 8000f3e:	d42b      	bmi.n	8000f98 <_printf_common+0xb0>
 8000f40:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000f44:	4641      	mov	r1, r8
 8000f46:	4638      	mov	r0, r7
 8000f48:	47c8      	blx	r9
 8000f4a:	3001      	adds	r0, #1
 8000f4c:	d01e      	beq.n	8000f8c <_printf_common+0xa4>
 8000f4e:	6823      	ldr	r3, [r4, #0]
 8000f50:	6922      	ldr	r2, [r4, #16]
 8000f52:	f003 0306 	and.w	r3, r3, #6
 8000f56:	2b04      	cmp	r3, #4
 8000f58:	bf02      	ittt	eq
 8000f5a:	68e5      	ldreq	r5, [r4, #12]
 8000f5c:	6833      	ldreq	r3, [r6, #0]
 8000f5e:	1aed      	subeq	r5, r5, r3
 8000f60:	68a3      	ldr	r3, [r4, #8]
 8000f62:	bf0c      	ite	eq
 8000f64:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f68:	2500      	movne	r5, #0
 8000f6a:	4293      	cmp	r3, r2
 8000f6c:	bfc4      	itt	gt
 8000f6e:	1a9b      	subgt	r3, r3, r2
 8000f70:	18ed      	addgt	r5, r5, r3
 8000f72:	2600      	movs	r6, #0
 8000f74:	341a      	adds	r4, #26
 8000f76:	42b5      	cmp	r5, r6
 8000f78:	d11a      	bne.n	8000fb0 <_printf_common+0xc8>
 8000f7a:	2000      	movs	r0, #0
 8000f7c:	e008      	b.n	8000f90 <_printf_common+0xa8>
 8000f7e:	2301      	movs	r3, #1
 8000f80:	4652      	mov	r2, sl
 8000f82:	4641      	mov	r1, r8
 8000f84:	4638      	mov	r0, r7
 8000f86:	47c8      	blx	r9
 8000f88:	3001      	adds	r0, #1
 8000f8a:	d103      	bne.n	8000f94 <_printf_common+0xac>
 8000f8c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000f90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f94:	3501      	adds	r5, #1
 8000f96:	e7c6      	b.n	8000f26 <_printf_common+0x3e>
 8000f98:	18e1      	adds	r1, r4, r3
 8000f9a:	1c5a      	adds	r2, r3, #1
 8000f9c:	2030      	movs	r0, #48	@ 0x30
 8000f9e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000fa2:	4422      	add	r2, r4
 8000fa4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000fa8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000fac:	3302      	adds	r3, #2
 8000fae:	e7c7      	b.n	8000f40 <_printf_common+0x58>
 8000fb0:	2301      	movs	r3, #1
 8000fb2:	4622      	mov	r2, r4
 8000fb4:	4641      	mov	r1, r8
 8000fb6:	4638      	mov	r0, r7
 8000fb8:	47c8      	blx	r9
 8000fba:	3001      	adds	r0, #1
 8000fbc:	d0e6      	beq.n	8000f8c <_printf_common+0xa4>
 8000fbe:	3601      	adds	r6, #1
 8000fc0:	e7d9      	b.n	8000f76 <_printf_common+0x8e>
	...

08000fc4 <_printf_i>:
 8000fc4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000fc8:	7e0f      	ldrb	r7, [r1, #24]
 8000fca:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000fcc:	2f78      	cmp	r7, #120	@ 0x78
 8000fce:	4691      	mov	r9, r2
 8000fd0:	4680      	mov	r8, r0
 8000fd2:	460c      	mov	r4, r1
 8000fd4:	469a      	mov	sl, r3
 8000fd6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000fda:	d807      	bhi.n	8000fec <_printf_i+0x28>
 8000fdc:	2f62      	cmp	r7, #98	@ 0x62
 8000fde:	d80a      	bhi.n	8000ff6 <_printf_i+0x32>
 8000fe0:	2f00      	cmp	r7, #0
 8000fe2:	f000 80d1 	beq.w	8001188 <_printf_i+0x1c4>
 8000fe6:	2f58      	cmp	r7, #88	@ 0x58
 8000fe8:	f000 80b8 	beq.w	800115c <_printf_i+0x198>
 8000fec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000ff0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000ff4:	e03a      	b.n	800106c <_printf_i+0xa8>
 8000ff6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000ffa:	2b15      	cmp	r3, #21
 8000ffc:	d8f6      	bhi.n	8000fec <_printf_i+0x28>
 8000ffe:	a101      	add	r1, pc, #4	@ (adr r1, 8001004 <_printf_i+0x40>)
 8001000:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001004:	0800105d 	.word	0x0800105d
 8001008:	08001071 	.word	0x08001071
 800100c:	08000fed 	.word	0x08000fed
 8001010:	08000fed 	.word	0x08000fed
 8001014:	08000fed 	.word	0x08000fed
 8001018:	08000fed 	.word	0x08000fed
 800101c:	08001071 	.word	0x08001071
 8001020:	08000fed 	.word	0x08000fed
 8001024:	08000fed 	.word	0x08000fed
 8001028:	08000fed 	.word	0x08000fed
 800102c:	08000fed 	.word	0x08000fed
 8001030:	0800116f 	.word	0x0800116f
 8001034:	0800109b 	.word	0x0800109b
 8001038:	08001129 	.word	0x08001129
 800103c:	08000fed 	.word	0x08000fed
 8001040:	08000fed 	.word	0x08000fed
 8001044:	08001191 	.word	0x08001191
 8001048:	08000fed 	.word	0x08000fed
 800104c:	0800109b 	.word	0x0800109b
 8001050:	08000fed 	.word	0x08000fed
 8001054:	08000fed 	.word	0x08000fed
 8001058:	08001131 	.word	0x08001131
 800105c:	6833      	ldr	r3, [r6, #0]
 800105e:	1d1a      	adds	r2, r3, #4
 8001060:	681b      	ldr	r3, [r3, #0]
 8001062:	6032      	str	r2, [r6, #0]
 8001064:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001068:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800106c:	2301      	movs	r3, #1
 800106e:	e09c      	b.n	80011aa <_printf_i+0x1e6>
 8001070:	6833      	ldr	r3, [r6, #0]
 8001072:	6820      	ldr	r0, [r4, #0]
 8001074:	1d19      	adds	r1, r3, #4
 8001076:	6031      	str	r1, [r6, #0]
 8001078:	0606      	lsls	r6, r0, #24
 800107a:	d501      	bpl.n	8001080 <_printf_i+0xbc>
 800107c:	681d      	ldr	r5, [r3, #0]
 800107e:	e003      	b.n	8001088 <_printf_i+0xc4>
 8001080:	0645      	lsls	r5, r0, #25
 8001082:	d5fb      	bpl.n	800107c <_printf_i+0xb8>
 8001084:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001088:	2d00      	cmp	r5, #0
 800108a:	da03      	bge.n	8001094 <_printf_i+0xd0>
 800108c:	232d      	movs	r3, #45	@ 0x2d
 800108e:	426d      	negs	r5, r5
 8001090:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001094:	4858      	ldr	r0, [pc, #352]	@ (80011f8 <_printf_i+0x234>)
 8001096:	230a      	movs	r3, #10
 8001098:	e011      	b.n	80010be <_printf_i+0xfa>
 800109a:	6821      	ldr	r1, [r4, #0]
 800109c:	6833      	ldr	r3, [r6, #0]
 800109e:	0608      	lsls	r0, r1, #24
 80010a0:	f853 5b04 	ldr.w	r5, [r3], #4
 80010a4:	d402      	bmi.n	80010ac <_printf_i+0xe8>
 80010a6:	0649      	lsls	r1, r1, #25
 80010a8:	bf48      	it	mi
 80010aa:	b2ad      	uxthmi	r5, r5
 80010ac:	2f6f      	cmp	r7, #111	@ 0x6f
 80010ae:	4852      	ldr	r0, [pc, #328]	@ (80011f8 <_printf_i+0x234>)
 80010b0:	6033      	str	r3, [r6, #0]
 80010b2:	bf14      	ite	ne
 80010b4:	230a      	movne	r3, #10
 80010b6:	2308      	moveq	r3, #8
 80010b8:	2100      	movs	r1, #0
 80010ba:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80010be:	6866      	ldr	r6, [r4, #4]
 80010c0:	60a6      	str	r6, [r4, #8]
 80010c2:	2e00      	cmp	r6, #0
 80010c4:	db05      	blt.n	80010d2 <_printf_i+0x10e>
 80010c6:	6821      	ldr	r1, [r4, #0]
 80010c8:	432e      	orrs	r6, r5
 80010ca:	f021 0104 	bic.w	r1, r1, #4
 80010ce:	6021      	str	r1, [r4, #0]
 80010d0:	d04b      	beq.n	800116a <_printf_i+0x1a6>
 80010d2:	4616      	mov	r6, r2
 80010d4:	fbb5 f1f3 	udiv	r1, r5, r3
 80010d8:	fb03 5711 	mls	r7, r3, r1, r5
 80010dc:	5dc7      	ldrb	r7, [r0, r7]
 80010de:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80010e2:	462f      	mov	r7, r5
 80010e4:	42bb      	cmp	r3, r7
 80010e6:	460d      	mov	r5, r1
 80010e8:	d9f4      	bls.n	80010d4 <_printf_i+0x110>
 80010ea:	2b08      	cmp	r3, #8
 80010ec:	d10b      	bne.n	8001106 <_printf_i+0x142>
 80010ee:	6823      	ldr	r3, [r4, #0]
 80010f0:	07df      	lsls	r7, r3, #31
 80010f2:	d508      	bpl.n	8001106 <_printf_i+0x142>
 80010f4:	6923      	ldr	r3, [r4, #16]
 80010f6:	6861      	ldr	r1, [r4, #4]
 80010f8:	4299      	cmp	r1, r3
 80010fa:	bfde      	ittt	le
 80010fc:	2330      	movle	r3, #48	@ 0x30
 80010fe:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001102:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8001106:	1b92      	subs	r2, r2, r6
 8001108:	6122      	str	r2, [r4, #16]
 800110a:	f8cd a000 	str.w	sl, [sp]
 800110e:	464b      	mov	r3, r9
 8001110:	aa03      	add	r2, sp, #12
 8001112:	4621      	mov	r1, r4
 8001114:	4640      	mov	r0, r8
 8001116:	f7ff fee7 	bl	8000ee8 <_printf_common>
 800111a:	3001      	adds	r0, #1
 800111c:	d14a      	bne.n	80011b4 <_printf_i+0x1f0>
 800111e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001122:	b004      	add	sp, #16
 8001124:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001128:	6823      	ldr	r3, [r4, #0]
 800112a:	f043 0320 	orr.w	r3, r3, #32
 800112e:	6023      	str	r3, [r4, #0]
 8001130:	4832      	ldr	r0, [pc, #200]	@ (80011fc <_printf_i+0x238>)
 8001132:	2778      	movs	r7, #120	@ 0x78
 8001134:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001138:	6823      	ldr	r3, [r4, #0]
 800113a:	6831      	ldr	r1, [r6, #0]
 800113c:	061f      	lsls	r7, r3, #24
 800113e:	f851 5b04 	ldr.w	r5, [r1], #4
 8001142:	d402      	bmi.n	800114a <_printf_i+0x186>
 8001144:	065f      	lsls	r7, r3, #25
 8001146:	bf48      	it	mi
 8001148:	b2ad      	uxthmi	r5, r5
 800114a:	6031      	str	r1, [r6, #0]
 800114c:	07d9      	lsls	r1, r3, #31
 800114e:	bf44      	itt	mi
 8001150:	f043 0320 	orrmi.w	r3, r3, #32
 8001154:	6023      	strmi	r3, [r4, #0]
 8001156:	b11d      	cbz	r5, 8001160 <_printf_i+0x19c>
 8001158:	2310      	movs	r3, #16
 800115a:	e7ad      	b.n	80010b8 <_printf_i+0xf4>
 800115c:	4826      	ldr	r0, [pc, #152]	@ (80011f8 <_printf_i+0x234>)
 800115e:	e7e9      	b.n	8001134 <_printf_i+0x170>
 8001160:	6823      	ldr	r3, [r4, #0]
 8001162:	f023 0320 	bic.w	r3, r3, #32
 8001166:	6023      	str	r3, [r4, #0]
 8001168:	e7f6      	b.n	8001158 <_printf_i+0x194>
 800116a:	4616      	mov	r6, r2
 800116c:	e7bd      	b.n	80010ea <_printf_i+0x126>
 800116e:	6833      	ldr	r3, [r6, #0]
 8001170:	6825      	ldr	r5, [r4, #0]
 8001172:	6961      	ldr	r1, [r4, #20]
 8001174:	1d18      	adds	r0, r3, #4
 8001176:	6030      	str	r0, [r6, #0]
 8001178:	062e      	lsls	r6, r5, #24
 800117a:	681b      	ldr	r3, [r3, #0]
 800117c:	d501      	bpl.n	8001182 <_printf_i+0x1be>
 800117e:	6019      	str	r1, [r3, #0]
 8001180:	e002      	b.n	8001188 <_printf_i+0x1c4>
 8001182:	0668      	lsls	r0, r5, #25
 8001184:	d5fb      	bpl.n	800117e <_printf_i+0x1ba>
 8001186:	8019      	strh	r1, [r3, #0]
 8001188:	2300      	movs	r3, #0
 800118a:	6123      	str	r3, [r4, #16]
 800118c:	4616      	mov	r6, r2
 800118e:	e7bc      	b.n	800110a <_printf_i+0x146>
 8001190:	6833      	ldr	r3, [r6, #0]
 8001192:	1d1a      	adds	r2, r3, #4
 8001194:	6032      	str	r2, [r6, #0]
 8001196:	681e      	ldr	r6, [r3, #0]
 8001198:	6862      	ldr	r2, [r4, #4]
 800119a:	2100      	movs	r1, #0
 800119c:	4630      	mov	r0, r6
 800119e:	f7ff f837 	bl	8000210 <memchr>
 80011a2:	b108      	cbz	r0, 80011a8 <_printf_i+0x1e4>
 80011a4:	1b80      	subs	r0, r0, r6
 80011a6:	6060      	str	r0, [r4, #4]
 80011a8:	6863      	ldr	r3, [r4, #4]
 80011aa:	6123      	str	r3, [r4, #16]
 80011ac:	2300      	movs	r3, #0
 80011ae:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80011b2:	e7aa      	b.n	800110a <_printf_i+0x146>
 80011b4:	6923      	ldr	r3, [r4, #16]
 80011b6:	4632      	mov	r2, r6
 80011b8:	4649      	mov	r1, r9
 80011ba:	4640      	mov	r0, r8
 80011bc:	47d0      	blx	sl
 80011be:	3001      	adds	r0, #1
 80011c0:	d0ad      	beq.n	800111e <_printf_i+0x15a>
 80011c2:	6823      	ldr	r3, [r4, #0]
 80011c4:	079b      	lsls	r3, r3, #30
 80011c6:	d413      	bmi.n	80011f0 <_printf_i+0x22c>
 80011c8:	68e0      	ldr	r0, [r4, #12]
 80011ca:	9b03      	ldr	r3, [sp, #12]
 80011cc:	4298      	cmp	r0, r3
 80011ce:	bfb8      	it	lt
 80011d0:	4618      	movlt	r0, r3
 80011d2:	e7a6      	b.n	8001122 <_printf_i+0x15e>
 80011d4:	2301      	movs	r3, #1
 80011d6:	4632      	mov	r2, r6
 80011d8:	4649      	mov	r1, r9
 80011da:	4640      	mov	r0, r8
 80011dc:	47d0      	blx	sl
 80011de:	3001      	adds	r0, #1
 80011e0:	d09d      	beq.n	800111e <_printf_i+0x15a>
 80011e2:	3501      	adds	r5, #1
 80011e4:	68e3      	ldr	r3, [r4, #12]
 80011e6:	9903      	ldr	r1, [sp, #12]
 80011e8:	1a5b      	subs	r3, r3, r1
 80011ea:	42ab      	cmp	r3, r5
 80011ec:	dcf2      	bgt.n	80011d4 <_printf_i+0x210>
 80011ee:	e7eb      	b.n	80011c8 <_printf_i+0x204>
 80011f0:	2500      	movs	r5, #0
 80011f2:	f104 0619 	add.w	r6, r4, #25
 80011f6:	e7f5      	b.n	80011e4 <_printf_i+0x220>
 80011f8:	080014c9 	.word	0x080014c9
 80011fc:	080014da 	.word	0x080014da

08001200 <__sflush_r>:
 8001200:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001204:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001208:	0716      	lsls	r6, r2, #28
 800120a:	4605      	mov	r5, r0
 800120c:	460c      	mov	r4, r1
 800120e:	d454      	bmi.n	80012ba <__sflush_r+0xba>
 8001210:	684b      	ldr	r3, [r1, #4]
 8001212:	2b00      	cmp	r3, #0
 8001214:	dc02      	bgt.n	800121c <__sflush_r+0x1c>
 8001216:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001218:	2b00      	cmp	r3, #0
 800121a:	dd48      	ble.n	80012ae <__sflush_r+0xae>
 800121c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800121e:	2e00      	cmp	r6, #0
 8001220:	d045      	beq.n	80012ae <__sflush_r+0xae>
 8001222:	2300      	movs	r3, #0
 8001224:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001228:	682f      	ldr	r7, [r5, #0]
 800122a:	6a21      	ldr	r1, [r4, #32]
 800122c:	602b      	str	r3, [r5, #0]
 800122e:	d030      	beq.n	8001292 <__sflush_r+0x92>
 8001230:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001232:	89a3      	ldrh	r3, [r4, #12]
 8001234:	0759      	lsls	r1, r3, #29
 8001236:	d505      	bpl.n	8001244 <__sflush_r+0x44>
 8001238:	6863      	ldr	r3, [r4, #4]
 800123a:	1ad2      	subs	r2, r2, r3
 800123c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800123e:	b10b      	cbz	r3, 8001244 <__sflush_r+0x44>
 8001240:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001242:	1ad2      	subs	r2, r2, r3
 8001244:	2300      	movs	r3, #0
 8001246:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001248:	6a21      	ldr	r1, [r4, #32]
 800124a:	4628      	mov	r0, r5
 800124c:	47b0      	blx	r6
 800124e:	1c43      	adds	r3, r0, #1
 8001250:	89a3      	ldrh	r3, [r4, #12]
 8001252:	d106      	bne.n	8001262 <__sflush_r+0x62>
 8001254:	6829      	ldr	r1, [r5, #0]
 8001256:	291d      	cmp	r1, #29
 8001258:	d82b      	bhi.n	80012b2 <__sflush_r+0xb2>
 800125a:	4a2a      	ldr	r2, [pc, #168]	@ (8001304 <__sflush_r+0x104>)
 800125c:	40ca      	lsrs	r2, r1
 800125e:	07d6      	lsls	r6, r2, #31
 8001260:	d527      	bpl.n	80012b2 <__sflush_r+0xb2>
 8001262:	2200      	movs	r2, #0
 8001264:	6062      	str	r2, [r4, #4]
 8001266:	04d9      	lsls	r1, r3, #19
 8001268:	6922      	ldr	r2, [r4, #16]
 800126a:	6022      	str	r2, [r4, #0]
 800126c:	d504      	bpl.n	8001278 <__sflush_r+0x78>
 800126e:	1c42      	adds	r2, r0, #1
 8001270:	d101      	bne.n	8001276 <__sflush_r+0x76>
 8001272:	682b      	ldr	r3, [r5, #0]
 8001274:	b903      	cbnz	r3, 8001278 <__sflush_r+0x78>
 8001276:	6560      	str	r0, [r4, #84]	@ 0x54
 8001278:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800127a:	602f      	str	r7, [r5, #0]
 800127c:	b1b9      	cbz	r1, 80012ae <__sflush_r+0xae>
 800127e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001282:	4299      	cmp	r1, r3
 8001284:	d002      	beq.n	800128c <__sflush_r+0x8c>
 8001286:	4628      	mov	r0, r5
 8001288:	f7ff fbf4 	bl	8000a74 <_free_r>
 800128c:	2300      	movs	r3, #0
 800128e:	6363      	str	r3, [r4, #52]	@ 0x34
 8001290:	e00d      	b.n	80012ae <__sflush_r+0xae>
 8001292:	2301      	movs	r3, #1
 8001294:	4628      	mov	r0, r5
 8001296:	47b0      	blx	r6
 8001298:	4602      	mov	r2, r0
 800129a:	1c50      	adds	r0, r2, #1
 800129c:	d1c9      	bne.n	8001232 <__sflush_r+0x32>
 800129e:	682b      	ldr	r3, [r5, #0]
 80012a0:	2b00      	cmp	r3, #0
 80012a2:	d0c6      	beq.n	8001232 <__sflush_r+0x32>
 80012a4:	2b1d      	cmp	r3, #29
 80012a6:	d001      	beq.n	80012ac <__sflush_r+0xac>
 80012a8:	2b16      	cmp	r3, #22
 80012aa:	d11e      	bne.n	80012ea <__sflush_r+0xea>
 80012ac:	602f      	str	r7, [r5, #0]
 80012ae:	2000      	movs	r0, #0
 80012b0:	e022      	b.n	80012f8 <__sflush_r+0xf8>
 80012b2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012b6:	b21b      	sxth	r3, r3
 80012b8:	e01b      	b.n	80012f2 <__sflush_r+0xf2>
 80012ba:	690f      	ldr	r7, [r1, #16]
 80012bc:	2f00      	cmp	r7, #0
 80012be:	d0f6      	beq.n	80012ae <__sflush_r+0xae>
 80012c0:	0793      	lsls	r3, r2, #30
 80012c2:	680e      	ldr	r6, [r1, #0]
 80012c4:	bf08      	it	eq
 80012c6:	694b      	ldreq	r3, [r1, #20]
 80012c8:	600f      	str	r7, [r1, #0]
 80012ca:	bf18      	it	ne
 80012cc:	2300      	movne	r3, #0
 80012ce:	eba6 0807 	sub.w	r8, r6, r7
 80012d2:	608b      	str	r3, [r1, #8]
 80012d4:	f1b8 0f00 	cmp.w	r8, #0
 80012d8:	dde9      	ble.n	80012ae <__sflush_r+0xae>
 80012da:	6a21      	ldr	r1, [r4, #32]
 80012dc:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80012de:	4643      	mov	r3, r8
 80012e0:	463a      	mov	r2, r7
 80012e2:	4628      	mov	r0, r5
 80012e4:	47b0      	blx	r6
 80012e6:	2800      	cmp	r0, #0
 80012e8:	dc08      	bgt.n	80012fc <__sflush_r+0xfc>
 80012ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012ee:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80012f2:	81a3      	strh	r3, [r4, #12]
 80012f4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80012f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80012fc:	4407      	add	r7, r0
 80012fe:	eba8 0800 	sub.w	r8, r8, r0
 8001302:	e7e7      	b.n	80012d4 <__sflush_r+0xd4>
 8001304:	20400001 	.word	0x20400001

08001308 <_fflush_r>:
 8001308:	b538      	push	{r3, r4, r5, lr}
 800130a:	690b      	ldr	r3, [r1, #16]
 800130c:	4605      	mov	r5, r0
 800130e:	460c      	mov	r4, r1
 8001310:	b913      	cbnz	r3, 8001318 <_fflush_r+0x10>
 8001312:	2500      	movs	r5, #0
 8001314:	4628      	mov	r0, r5
 8001316:	bd38      	pop	{r3, r4, r5, pc}
 8001318:	b118      	cbz	r0, 8001322 <_fflush_r+0x1a>
 800131a:	6a03      	ldr	r3, [r0, #32]
 800131c:	b90b      	cbnz	r3, 8001322 <_fflush_r+0x1a>
 800131e:	f7ff f9af 	bl	8000680 <__sinit>
 8001322:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001326:	2b00      	cmp	r3, #0
 8001328:	d0f3      	beq.n	8001312 <_fflush_r+0xa>
 800132a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800132c:	07d0      	lsls	r0, r2, #31
 800132e:	d404      	bmi.n	800133a <_fflush_r+0x32>
 8001330:	0599      	lsls	r1, r3, #22
 8001332:	d402      	bmi.n	800133a <_fflush_r+0x32>
 8001334:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001336:	f7ff fb9a 	bl	8000a6e <__retarget_lock_acquire_recursive>
 800133a:	4628      	mov	r0, r5
 800133c:	4621      	mov	r1, r4
 800133e:	f7ff ff5f 	bl	8001200 <__sflush_r>
 8001342:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001344:	07da      	lsls	r2, r3, #31
 8001346:	4605      	mov	r5, r0
 8001348:	d4e4      	bmi.n	8001314 <_fflush_r+0xc>
 800134a:	89a3      	ldrh	r3, [r4, #12]
 800134c:	059b      	lsls	r3, r3, #22
 800134e:	d4e1      	bmi.n	8001314 <_fflush_r+0xc>
 8001350:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001352:	f7ff fb8d 	bl	8000a70 <__retarget_lock_release_recursive>
 8001356:	e7dd      	b.n	8001314 <_fflush_r+0xc>

08001358 <__swhatbuf_r>:
 8001358:	b570      	push	{r4, r5, r6, lr}
 800135a:	460c      	mov	r4, r1
 800135c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001360:	2900      	cmp	r1, #0
 8001362:	b096      	sub	sp, #88	@ 0x58
 8001364:	4615      	mov	r5, r2
 8001366:	461e      	mov	r6, r3
 8001368:	da0d      	bge.n	8001386 <__swhatbuf_r+0x2e>
 800136a:	89a3      	ldrh	r3, [r4, #12]
 800136c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001370:	f04f 0100 	mov.w	r1, #0
 8001374:	bf14      	ite	ne
 8001376:	2340      	movne	r3, #64	@ 0x40
 8001378:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800137c:	2000      	movs	r0, #0
 800137e:	6031      	str	r1, [r6, #0]
 8001380:	602b      	str	r3, [r5, #0]
 8001382:	b016      	add	sp, #88	@ 0x58
 8001384:	bd70      	pop	{r4, r5, r6, pc}
 8001386:	466a      	mov	r2, sp
 8001388:	f000 f848 	bl	800141c <_fstat_r>
 800138c:	2800      	cmp	r0, #0
 800138e:	dbec      	blt.n	800136a <__swhatbuf_r+0x12>
 8001390:	9901      	ldr	r1, [sp, #4]
 8001392:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001396:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800139a:	4259      	negs	r1, r3
 800139c:	4159      	adcs	r1, r3
 800139e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80013a2:	e7eb      	b.n	800137c <__swhatbuf_r+0x24>

080013a4 <__smakebuf_r>:
 80013a4:	898b      	ldrh	r3, [r1, #12]
 80013a6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80013a8:	079d      	lsls	r5, r3, #30
 80013aa:	4606      	mov	r6, r0
 80013ac:	460c      	mov	r4, r1
 80013ae:	d507      	bpl.n	80013c0 <__smakebuf_r+0x1c>
 80013b0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80013b4:	6023      	str	r3, [r4, #0]
 80013b6:	6123      	str	r3, [r4, #16]
 80013b8:	2301      	movs	r3, #1
 80013ba:	6163      	str	r3, [r4, #20]
 80013bc:	b003      	add	sp, #12
 80013be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013c0:	ab01      	add	r3, sp, #4
 80013c2:	466a      	mov	r2, sp
 80013c4:	f7ff ffc8 	bl	8001358 <__swhatbuf_r>
 80013c8:	9f00      	ldr	r7, [sp, #0]
 80013ca:	4605      	mov	r5, r0
 80013cc:	4639      	mov	r1, r7
 80013ce:	4630      	mov	r0, r6
 80013d0:	f7ff fbbc 	bl	8000b4c <_malloc_r>
 80013d4:	b948      	cbnz	r0, 80013ea <__smakebuf_r+0x46>
 80013d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013da:	059a      	lsls	r2, r3, #22
 80013dc:	d4ee      	bmi.n	80013bc <__smakebuf_r+0x18>
 80013de:	f023 0303 	bic.w	r3, r3, #3
 80013e2:	f043 0302 	orr.w	r3, r3, #2
 80013e6:	81a3      	strh	r3, [r4, #12]
 80013e8:	e7e2      	b.n	80013b0 <__smakebuf_r+0xc>
 80013ea:	89a3      	ldrh	r3, [r4, #12]
 80013ec:	6020      	str	r0, [r4, #0]
 80013ee:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80013f2:	81a3      	strh	r3, [r4, #12]
 80013f4:	9b01      	ldr	r3, [sp, #4]
 80013f6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80013fa:	b15b      	cbz	r3, 8001414 <__smakebuf_r+0x70>
 80013fc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001400:	4630      	mov	r0, r6
 8001402:	f000 f81d 	bl	8001440 <_isatty_r>
 8001406:	b128      	cbz	r0, 8001414 <__smakebuf_r+0x70>
 8001408:	89a3      	ldrh	r3, [r4, #12]
 800140a:	f023 0303 	bic.w	r3, r3, #3
 800140e:	f043 0301 	orr.w	r3, r3, #1
 8001412:	81a3      	strh	r3, [r4, #12]
 8001414:	89a3      	ldrh	r3, [r4, #12]
 8001416:	431d      	orrs	r5, r3
 8001418:	81a5      	strh	r5, [r4, #12]
 800141a:	e7cf      	b.n	80013bc <__smakebuf_r+0x18>

0800141c <_fstat_r>:
 800141c:	b538      	push	{r3, r4, r5, lr}
 800141e:	4d07      	ldr	r5, [pc, #28]	@ (800143c <_fstat_r+0x20>)
 8001420:	2300      	movs	r3, #0
 8001422:	4604      	mov	r4, r0
 8001424:	4608      	mov	r0, r1
 8001426:	4611      	mov	r1, r2
 8001428:	602b      	str	r3, [r5, #0]
 800142a:	f7ff f814 	bl	8000456 <_fstat>
 800142e:	1c43      	adds	r3, r0, #1
 8001430:	d102      	bne.n	8001438 <_fstat_r+0x1c>
 8001432:	682b      	ldr	r3, [r5, #0]
 8001434:	b103      	cbz	r3, 8001438 <_fstat_r+0x1c>
 8001436:	6023      	str	r3, [r4, #0]
 8001438:	bd38      	pop	{r3, r4, r5, pc}
 800143a:	bf00      	nop
 800143c:	200001bc 	.word	0x200001bc

08001440 <_isatty_r>:
 8001440:	b538      	push	{r3, r4, r5, lr}
 8001442:	4d06      	ldr	r5, [pc, #24]	@ (800145c <_isatty_r+0x1c>)
 8001444:	2300      	movs	r3, #0
 8001446:	4604      	mov	r4, r0
 8001448:	4608      	mov	r0, r1
 800144a:	602b      	str	r3, [r5, #0]
 800144c:	f7ff f813 	bl	8000476 <_isatty>
 8001450:	1c43      	adds	r3, r0, #1
 8001452:	d102      	bne.n	800145a <_isatty_r+0x1a>
 8001454:	682b      	ldr	r3, [r5, #0]
 8001456:	b103      	cbz	r3, 800145a <_isatty_r+0x1a>
 8001458:	6023      	str	r3, [r4, #0]
 800145a:	bd38      	pop	{r3, r4, r5, pc}
 800145c:	200001bc 	.word	0x200001bc

08001460 <_sbrk_r>:
 8001460:	b538      	push	{r3, r4, r5, lr}
 8001462:	4d06      	ldr	r5, [pc, #24]	@ (800147c <_sbrk_r+0x1c>)
 8001464:	2300      	movs	r3, #0
 8001466:	4604      	mov	r4, r0
 8001468:	4608      	mov	r0, r1
 800146a:	602b      	str	r3, [r5, #0]
 800146c:	f7ff f81c 	bl	80004a8 <_sbrk>
 8001470:	1c43      	adds	r3, r0, #1
 8001472:	d102      	bne.n	800147a <_sbrk_r+0x1a>
 8001474:	682b      	ldr	r3, [r5, #0]
 8001476:	b103      	cbz	r3, 800147a <_sbrk_r+0x1a>
 8001478:	6023      	str	r3, [r4, #0]
 800147a:	bd38      	pop	{r3, r4, r5, pc}
 800147c:	200001bc 	.word	0x200001bc

08001480 <_init>:
 8001480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001482:	bf00      	nop
 8001484:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001486:	bc08      	pop	{r3}
 8001488:	469e      	mov	lr, r3
 800148a:	4770      	bx	lr

0800148c <_fini>:
 800148c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800148e:	bf00      	nop
 8001490:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001492:	bc08      	pop	{r3}
 8001494:	469e      	mov	lr, r3
 8001496:	4770      	bx	lr
